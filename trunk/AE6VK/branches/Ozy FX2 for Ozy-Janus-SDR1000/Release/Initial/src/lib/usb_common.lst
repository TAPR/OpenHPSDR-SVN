                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Mon Jan 04 09:34:02 2010
                              5 ;--------------------------------------------------------
                              6 	.module usb_common
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _epcs
                             13 	.globl _plausible_endpoint
                             14 	.globl _EIPX6
                             15 	.globl _EIPX5
                             16 	.globl _EIPX4
                             17 	.globl _PI2C
                             18 	.globl _PUSB
                             19 	.globl _EIEX6
                             20 	.globl _EIEX5
                             21 	.globl _EIEX4
                             22 	.globl _EI2C
                             23 	.globl _EIUSB
                             24 	.globl _SMOD1
                             25 	.globl _ERESI
                             26 	.globl _RESI
                             27 	.globl _INT6
                             28 	.globl _CY
                             29 	.globl _AC
                             30 	.globl _F0
                             31 	.globl _RS1
                             32 	.globl _RS0
                             33 	.globl _OV
                             34 	.globl _FL
                             35 	.globl _P
                             36 	.globl _TF2
                             37 	.globl _EXF2
                             38 	.globl _RCLK
                             39 	.globl _TCLK
                             40 	.globl _EXEN2
                             41 	.globl _TR2
                             42 	.globl _C_T2
                             43 	.globl _CP_RL2
                             44 	.globl _SM01
                             45 	.globl _SM11
                             46 	.globl _SM21
                             47 	.globl _REN1
                             48 	.globl _TB81
                             49 	.globl _RB81
                             50 	.globl _TI1
                             51 	.globl _RI1
                             52 	.globl _PS1
                             53 	.globl _PT2
                             54 	.globl _PS0
                             55 	.globl _PT1
                             56 	.globl _PX1
                             57 	.globl _PT0
                             58 	.globl _PX0
                             59 	.globl _EA
                             60 	.globl _ES1
                             61 	.globl _ET2
                             62 	.globl _ES0
                             63 	.globl _ET1
                             64 	.globl _EX1
                             65 	.globl _ET0
                             66 	.globl _EX0
                             67 	.globl _SM0
                             68 	.globl _SM1
                             69 	.globl _SM2
                             70 	.globl _REN
                             71 	.globl _TB8
                             72 	.globl _RB8
                             73 	.globl _TI
                             74 	.globl _RI
                             75 	.globl _TF1
                             76 	.globl _TR1
                             77 	.globl _TF0
                             78 	.globl _TR0
                             79 	.globl _IE1
                             80 	.globl _IT1
                             81 	.globl _IE0
                             82 	.globl _IT0
                             83 	.globl _SEL
                             84 	.globl _EIP
                             85 	.globl _B
                             86 	.globl _EIE
                             87 	.globl _ACC
                             88 	.globl _EICON
                             89 	.globl _PSW
                             90 	.globl _TH2
                             91 	.globl _TL2
                             92 	.globl _RCAP2H
                             93 	.globl _RCAP2L
                             94 	.globl _T2CON
                             95 	.globl _SBUF1
                             96 	.globl _SCON1
                             97 	.globl _GPIFSGLDATLNOX
                             98 	.globl _GPIFSGLDATLX
                             99 	.globl _GPIFSGLDATH
                            100 	.globl _GPIFTRIG
                            101 	.globl _EP01STAT
                            102 	.globl _IP
                            103 	.globl _OEE
                            104 	.globl _OED
                            105 	.globl _OEC
                            106 	.globl _OEB
                            107 	.globl _OEA
                            108 	.globl _IOE
                            109 	.globl _IOD
                            110 	.globl _AUTOPTRSETUP
                            111 	.globl _EP68FIFOFLGS
                            112 	.globl _EP24FIFOFLGS
                            113 	.globl _EP2468STAT
                            114 	.globl _IE
                            115 	.globl _INT4CLR
                            116 	.globl _INT2CLR
                            117 	.globl _IOC
                            118 	.globl _AUTODAT2
                            119 	.globl _AUTOPTRL2
                            120 	.globl _AUTOPTRH2
                            121 	.globl _AUTODAT1
                            122 	.globl _APTR1L
                            123 	.globl _APTR1H
                            124 	.globl _SBUF0
                            125 	.globl _SCON0
                            126 	.globl _MPAGE
                            127 	.globl _EXIF
                            128 	.globl _IOB
                            129 	.globl _CKCON
                            130 	.globl _TH1
                            131 	.globl _TH0
                            132 	.globl _TL1
                            133 	.globl _TL0
                            134 	.globl _TMOD
                            135 	.globl _TCON
                            136 	.globl _PCON
                            137 	.globl _DPS
                            138 	.globl _DPH1
                            139 	.globl _DPL1
                            140 	.globl _DPH
                            141 	.globl _DPL
                            142 	.globl _SP
                            143 	.globl _IOA
                            144 	.globl _EP8FIFOBUF
                            145 	.globl _EP6FIFOBUF
                            146 	.globl _EP4FIFOBUF
                            147 	.globl _EP2FIFOBUF
                            148 	.globl _EP1INBUF
                            149 	.globl _EP1OUTBUF
                            150 	.globl _EP0BUF
                            151 	.globl _CT4
                            152 	.globl _CT3
                            153 	.globl _CT2
                            154 	.globl _CT1
                            155 	.globl _USBTEST
                            156 	.globl _TESTCFG
                            157 	.globl _DBUG
                            158 	.globl _UDMACRCQUAL
                            159 	.globl _UDMACRCL
                            160 	.globl _UDMACRCH
                            161 	.globl _GPIFHOLDAMOUNT
                            162 	.globl _FLOWSTBHPERIOD
                            163 	.globl _FLOWSTBEDGE
                            164 	.globl _FLOWSTB
                            165 	.globl _FLOWHOLDOFF
                            166 	.globl _FLOWEQ1CTL
                            167 	.globl _FLOWEQ0CTL
                            168 	.globl _FLOWLOGIC
                            169 	.globl _FLOWSTATE
                            170 	.globl _GPIFABORT
                            171 	.globl _GPIFREADYSTAT
                            172 	.globl _GPIFREADYCFG
                            173 	.globl _XGPIFSGLDATLNOX
                            174 	.globl _XGPIFSGLDATLX
                            175 	.globl _XGPIFSGLDATH
                            176 	.globl _EP8GPIFTRIG
                            177 	.globl _EP8GPIFPFSTOP
                            178 	.globl _EP8GPIFFLGSEL
                            179 	.globl _EP6GPIFTRIG
                            180 	.globl _EP6GPIFPFSTOP
                            181 	.globl _EP6GPIFFLGSEL
                            182 	.globl _EP4GPIFTRIG
                            183 	.globl _EP4GPIFPFSTOP
                            184 	.globl _EP4GPIFFLGSEL
                            185 	.globl _EP2GPIFTRIG
                            186 	.globl _EP2GPIFPFSTOP
                            187 	.globl _EP2GPIFFLGSEL
                            188 	.globl _GPIFTCB0
                            189 	.globl _GPIFTCB1
                            190 	.globl _GPIFTCB2
                            191 	.globl _GPIFTCB3
                            192 	.globl _GPIFADRL
                            193 	.globl _GPIFADRH
                            194 	.globl _GPIFCTLCFG
                            195 	.globl _GPIFIDLECTL
                            196 	.globl _GPIFIDLECS
                            197 	.globl _GPIFWFSELECT
                            198 	.globl _SETUPDAT
                            199 	.globl _SUDPTRCTL
                            200 	.globl _SUDPTRL
                            201 	.globl _SUDPTRH
                            202 	.globl _EP8FIFOBCL
                            203 	.globl _EP8FIFOBCH
                            204 	.globl _EP6FIFOBCL
                            205 	.globl _EP6FIFOBCH
                            206 	.globl _EP4FIFOBCL
                            207 	.globl _EP4FIFOBCH
                            208 	.globl _EP2FIFOBCL
                            209 	.globl _EP2FIFOBCH
                            210 	.globl _EP8FIFOFLGS
                            211 	.globl _EP6FIFOFLGS
                            212 	.globl _EP4FIFOFLGS
                            213 	.globl _EP2FIFOFLGS
                            214 	.globl _EP8CS
                            215 	.globl _EP6CS
                            216 	.globl _EP4CS
                            217 	.globl _EP2CS
                            218 	.globl _EP1INCS
                            219 	.globl _EP1OUTCS
                            220 	.globl _EP0CS
                            221 	.globl _EP8BCL
                            222 	.globl _EP8BCH
                            223 	.globl _EP6BCL
                            224 	.globl _EP6BCH
                            225 	.globl _EP4BCL
                            226 	.globl _EP4BCH
                            227 	.globl _EP2BCL
                            228 	.globl _EP2BCH
                            229 	.globl _EP1INBC
                            230 	.globl _EP1OUTBC
                            231 	.globl _EP0BCL
                            232 	.globl _EP0BCH
                            233 	.globl _FNADDR
                            234 	.globl _MICROFRAME
                            235 	.globl _USBFRAMEL
                            236 	.globl _USBFRAMEH
                            237 	.globl _TOGCTL
                            238 	.globl _WAKEUPCS
                            239 	.globl _SUSPEND
                            240 	.globl _USBCS
                            241 	.globl _XAUTODAT2
                            242 	.globl _XAUTODAT1
                            243 	.globl _I2CTL
                            244 	.globl _I2DAT
                            245 	.globl _I2CS
                            246 	.globl _PORTECFG
                            247 	.globl _PORTCCFG
                            248 	.globl _PORTACFG
                            249 	.globl _INTSETUP
                            250 	.globl _INT4IVEC
                            251 	.globl _INT2IVEC
                            252 	.globl _CLRERRCNT
                            253 	.globl _ERRCNTLIM
                            254 	.globl _USBERRIRQ
                            255 	.globl _USBERRIE
                            256 	.globl _GPIFIRQ
                            257 	.globl _GPIFIE
                            258 	.globl _EPIRQ
                            259 	.globl _EPIE
                            260 	.globl _USBIRQ
                            261 	.globl _USBIE
                            262 	.globl _NAKIRQ
                            263 	.globl _NAKIE
                            264 	.globl _IBNIRQ
                            265 	.globl _IBNIE
                            266 	.globl _EP8FIFOIRQ
                            267 	.globl _EP8FIFOIE
                            268 	.globl _EP6FIFOIRQ
                            269 	.globl _EP6FIFOIE
                            270 	.globl _EP4FIFOIRQ
                            271 	.globl _EP4FIFOIE
                            272 	.globl _EP2FIFOIRQ
                            273 	.globl _EP2FIFOIE
                            274 	.globl _OUTPKTEND
                            275 	.globl _INPKTEND
                            276 	.globl _EP8ISOINPKTS
                            277 	.globl _EP6ISOINPKTS
                            278 	.globl _EP4ISOINPKTS
                            279 	.globl _EP2ISOINPKTS
                            280 	.globl _EP8FIFOPFL
                            281 	.globl _EP8FIFOPFH
                            282 	.globl _EP6FIFOPFL
                            283 	.globl _EP6FIFOPFH
                            284 	.globl _EP4FIFOPFL
                            285 	.globl _EP4FIFOPFH
                            286 	.globl _EP2FIFOPFL
                            287 	.globl _EP2FIFOPFH
                            288 	.globl _EP8AUTOINLENL
                            289 	.globl _EP8AUTOINLENH
                            290 	.globl _EP6AUTOINLENL
                            291 	.globl _EP6AUTOINLENH
                            292 	.globl _EP4AUTOINLENL
                            293 	.globl _EP4AUTOINLENH
                            294 	.globl _EP2AUTOINLENL
                            295 	.globl _EP2AUTOINLENH
                            296 	.globl _EP8FIFOCFG
                            297 	.globl _EP6FIFOCFG
                            298 	.globl _EP4FIFOCFG
                            299 	.globl _EP2FIFOCFG
                            300 	.globl _EP8CFG
                            301 	.globl _EP6CFG
                            302 	.globl _EP4CFG
                            303 	.globl _EP2CFG
                            304 	.globl _EP1INCFG
                            305 	.globl _EP1OUTCFG
                            306 	.globl _REVCTL
                            307 	.globl _REVID
                            308 	.globl _FIFOPINPOLAR
                            309 	.globl _UART230
                            310 	.globl _BPADDRL
                            311 	.globl _BPADDRH
                            312 	.globl _BREAKPT
                            313 	.globl _FIFORESET
                            314 	.globl _PINFLAGSCD
                            315 	.globl _PINFLAGSAB
                            316 	.globl _IFCONFIG
                            317 	.globl _CPUCS
                            318 	.globl _RES_WAVEDATA_END
                            319 	.globl _GPIF_WAVE_DATA
                            320 	.globl __usb_got_SUDAV
                            321 	.globl _other_config_descr
                            322 	.globl _current_config_descr
                            323 	.globl _current_devqual_descr
                            324 	.globl _current_device_descr
                            325 	.globl __usb_alt_setting
                            326 	.globl __usb_config
                            327 	.globl _usb_install_handlers
                            328 	.globl _usb_handle_set_feature
                            329 	.globl _usb_handle_clear_feature
                            330 	.globl _usb_handle_get_status
                            331 	.globl _usb_handle_get_descriptor
                            332 	.globl _usb_handle_IN_std_requests
                            333 	.globl _usb_handle_OUT_std_requests
                            334 	.globl _usb_handle_std_requests
                            335 	.globl _usb_handle_setup_packet
                            336 ;--------------------------------------------------------
                            337 ; special function registers
                            338 ;--------------------------------------------------------
                            339 	.area RSEG    (DATA)
                    0080    340 _IOA	=	0x0080
                    0081    341 _SP	=	0x0081
                    0082    342 _DPL	=	0x0082
                    0083    343 _DPH	=	0x0083
                    0084    344 _DPL1	=	0x0084
                    0085    345 _DPH1	=	0x0085
                    0086    346 _DPS	=	0x0086
                    0087    347 _PCON	=	0x0087
                    0088    348 _TCON	=	0x0088
                    0089    349 _TMOD	=	0x0089
                    008A    350 _TL0	=	0x008a
                    008B    351 _TL1	=	0x008b
                    008C    352 _TH0	=	0x008c
                    008D    353 _TH1	=	0x008d
                    008E    354 _CKCON	=	0x008e
                    0090    355 _IOB	=	0x0090
                    0091    356 _EXIF	=	0x0091
                    0092    357 _MPAGE	=	0x0092
                    0098    358 _SCON0	=	0x0098
                    0099    359 _SBUF0	=	0x0099
                    009A    360 _APTR1H	=	0x009a
                    009B    361 _APTR1L	=	0x009b
                    009C    362 _AUTODAT1	=	0x009c
                    009D    363 _AUTOPTRH2	=	0x009d
                    009E    364 _AUTOPTRL2	=	0x009e
                    009F    365 _AUTODAT2	=	0x009f
                    00A0    366 _IOC	=	0x00a0
                    00A1    367 _INT2CLR	=	0x00a1
                    00A2    368 _INT4CLR	=	0x00a2
                    00A8    369 _IE	=	0x00a8
                    00AA    370 _EP2468STAT	=	0x00aa
                    00AB    371 _EP24FIFOFLGS	=	0x00ab
                    00AC    372 _EP68FIFOFLGS	=	0x00ac
                    00AF    373 _AUTOPTRSETUP	=	0x00af
                    00B0    374 _IOD	=	0x00b0
                    00B1    375 _IOE	=	0x00b1
                    00B2    376 _OEA	=	0x00b2
                    00B3    377 _OEB	=	0x00b3
                    00B4    378 _OEC	=	0x00b4
                    00B5    379 _OED	=	0x00b5
                    00B6    380 _OEE	=	0x00b6
                    00B8    381 _IP	=	0x00b8
                    00BA    382 _EP01STAT	=	0x00ba
                    00BB    383 _GPIFTRIG	=	0x00bb
                    00BD    384 _GPIFSGLDATH	=	0x00bd
                    00BE    385 _GPIFSGLDATLX	=	0x00be
                    00BF    386 _GPIFSGLDATLNOX	=	0x00bf
                    00C0    387 _SCON1	=	0x00c0
                    00C1    388 _SBUF1	=	0x00c1
                    00C8    389 _T2CON	=	0x00c8
                    00CA    390 _RCAP2L	=	0x00ca
                    00CB    391 _RCAP2H	=	0x00cb
                    00CC    392 _TL2	=	0x00cc
                    00CD    393 _TH2	=	0x00cd
                    00D0    394 _PSW	=	0x00d0
                    00D8    395 _EICON	=	0x00d8
                    00E0    396 _ACC	=	0x00e0
                    00E8    397 _EIE	=	0x00e8
                    00F0    398 _B	=	0x00f0
                    00F8    399 _EIP	=	0x00f8
                            400 ;--------------------------------------------------------
                            401 ; special function bits
                            402 ;--------------------------------------------------------
                            403 	.area RSEG    (DATA)
                    0086    404 _SEL	=	0x0086
                    0088    405 _IT0	=	0x0088
                    0089    406 _IE0	=	0x0089
                    008A    407 _IT1	=	0x008a
                    008B    408 _IE1	=	0x008b
                    008C    409 _TR0	=	0x008c
                    008D    410 _TF0	=	0x008d
                    008E    411 _TR1	=	0x008e
                    008F    412 _TF1	=	0x008f
                    0098    413 _RI	=	0x0098
                    0099    414 _TI	=	0x0099
                    009A    415 _RB8	=	0x009a
                    009B    416 _TB8	=	0x009b
                    009C    417 _REN	=	0x009c
                    009D    418 _SM2	=	0x009d
                    009E    419 _SM1	=	0x009e
                    009F    420 _SM0	=	0x009f
                    00A8    421 _EX0	=	0x00a8
                    00A9    422 _ET0	=	0x00a9
                    00AA    423 _EX1	=	0x00aa
                    00AB    424 _ET1	=	0x00ab
                    00AC    425 _ES0	=	0x00ac
                    00AD    426 _ET2	=	0x00ad
                    00AE    427 _ES1	=	0x00ae
                    00AF    428 _EA	=	0x00af
                    00B8    429 _PX0	=	0x00b8
                    00B9    430 _PT0	=	0x00b9
                    00BA    431 _PX1	=	0x00ba
                    00BB    432 _PT1	=	0x00bb
                    00BC    433 _PS0	=	0x00bc
                    00BD    434 _PT2	=	0x00bd
                    00BE    435 _PS1	=	0x00be
                    00C0    436 _RI1	=	0x00c0
                    00C1    437 _TI1	=	0x00c1
                    00C2    438 _RB81	=	0x00c2
                    00C3    439 _TB81	=	0x00c3
                    00C4    440 _REN1	=	0x00c4
                    00C5    441 _SM21	=	0x00c5
                    00C6    442 _SM11	=	0x00c6
                    00C7    443 _SM01	=	0x00c7
                    00C8    444 _CP_RL2	=	0x00c8
                    00C9    445 _C_T2	=	0x00c9
                    00CA    446 _TR2	=	0x00ca
                    00CB    447 _EXEN2	=	0x00cb
                    00CC    448 _TCLK	=	0x00cc
                    00CD    449 _RCLK	=	0x00cd
                    00CE    450 _EXF2	=	0x00ce
                    00CF    451 _TF2	=	0x00cf
                    00D0    452 _P	=	0x00d0
                    00D1    453 _FL	=	0x00d1
                    00D2    454 _OV	=	0x00d2
                    00D3    455 _RS0	=	0x00d3
                    00D4    456 _RS1	=	0x00d4
                    00D5    457 _F0	=	0x00d5
                    00D6    458 _AC	=	0x00d6
                    00D7    459 _CY	=	0x00d7
                    00DB    460 _INT6	=	0x00db
                    00DC    461 _RESI	=	0x00dc
                    00DD    462 _ERESI	=	0x00dd
                    00DF    463 _SMOD1	=	0x00df
                    00E8    464 _EIUSB	=	0x00e8
                    00E9    465 _EI2C	=	0x00e9
                    00EA    466 _EIEX4	=	0x00ea
                    00EB    467 _EIEX5	=	0x00eb
                    00EC    468 _EIEX6	=	0x00ec
                    00F8    469 _PUSB	=	0x00f8
                    00F9    470 _PI2C	=	0x00f9
                    00FA    471 _EIPX4	=	0x00fa
                    00FB    472 _EIPX5	=	0x00fb
                    00FC    473 _EIPX6	=	0x00fc
                            474 ;--------------------------------------------------------
                            475 ; overlayable register banks
                            476 ;--------------------------------------------------------
                            477 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     478 	.ds 8
                            479 ;--------------------------------------------------------
                            480 ; overlayable bit register bank
                            481 ;--------------------------------------------------------
                            482 	.area BIT_BANK	(REL,OVR,DATA)
   0000                     483 bits:
   0000                     484 	.ds 1
                    8000    485 	b0 = bits[0]
                    8100    486 	b1 = bits[1]
                    8200    487 	b2 = bits[2]
                    8300    488 	b3 = bits[3]
                    8400    489 	b4 = bits[4]
                    8500    490 	b5 = bits[5]
                    8600    491 	b6 = bits[6]
                    8700    492 	b7 = bits[7]
                            493 ;--------------------------------------------------------
                            494 ; internal ram data
                            495 ;--------------------------------------------------------
                            496 	.area DSEG    (DATA)
   0000                     497 __usb_config::
   0000                     498 	.ds 1
   0001                     499 __usb_alt_setting::
   0001                     500 	.ds 1
   0002                     501 _current_device_descr::
   0002                     502 	.ds 2
   0004                     503 _current_devqual_descr::
   0004                     504 	.ds 2
   0006                     505 _current_config_descr::
   0006                     506 	.ds 2
   0008                     507 _other_config_descr::
   0008                     508 	.ds 2
                            509 ;--------------------------------------------------------
                            510 ; overlayable items in internal ram 
                            511 ;--------------------------------------------------------
                            512 	.area	OSEG    (OVR,DATA)
                            513 	.area	OSEG    (OVR,DATA)
                            514 ;--------------------------------------------------------
                            515 ; indirectly addressable internal ram data
                            516 ;--------------------------------------------------------
                            517 	.area ISEG    (DATA)
                            518 ;--------------------------------------------------------
                            519 ; absolute internal ram data
                            520 ;--------------------------------------------------------
                            521 	.area IABS    (ABS,DATA)
                            522 	.area IABS    (ABS,DATA)
                            523 ;--------------------------------------------------------
                            524 ; bit data
                            525 ;--------------------------------------------------------
                            526 	.area BSEG    (BIT)
   0000                     527 __usb_got_SUDAV::
   0000                     528 	.ds 1
                            529 ;--------------------------------------------------------
                            530 ; paged external ram data
                            531 ;--------------------------------------------------------
                            532 	.area PSEG    (PAG,XDATA)
                            533 ;--------------------------------------------------------
                            534 ; external ram data
                            535 ;--------------------------------------------------------
                            536 	.area XSEG    (XDATA)
                    E400    537 _GPIF_WAVE_DATA	=	0xe400
                    E480    538 _RES_WAVEDATA_END	=	0xe480
                    E600    539 _CPUCS	=	0xe600
                    E601    540 _IFCONFIG	=	0xe601
                    E602    541 _PINFLAGSAB	=	0xe602
                    E603    542 _PINFLAGSCD	=	0xe603
                    E604    543 _FIFORESET	=	0xe604
                    E605    544 _BREAKPT	=	0xe605
                    E606    545 _BPADDRH	=	0xe606
                    E607    546 _BPADDRL	=	0xe607
                    E608    547 _UART230	=	0xe608
                    E609    548 _FIFOPINPOLAR	=	0xe609
                    E60A    549 _REVID	=	0xe60a
                    E60B    550 _REVCTL	=	0xe60b
                    E610    551 _EP1OUTCFG	=	0xe610
                    E611    552 _EP1INCFG	=	0xe611
                    E612    553 _EP2CFG	=	0xe612
                    E613    554 _EP4CFG	=	0xe613
                    E614    555 _EP6CFG	=	0xe614
                    E615    556 _EP8CFG	=	0xe615
                    E618    557 _EP2FIFOCFG	=	0xe618
                    E619    558 _EP4FIFOCFG	=	0xe619
                    E61A    559 _EP6FIFOCFG	=	0xe61a
                    E61B    560 _EP8FIFOCFG	=	0xe61b
                    E620    561 _EP2AUTOINLENH	=	0xe620
                    E621    562 _EP2AUTOINLENL	=	0xe621
                    E622    563 _EP4AUTOINLENH	=	0xe622
                    E623    564 _EP4AUTOINLENL	=	0xe623
                    E624    565 _EP6AUTOINLENH	=	0xe624
                    E625    566 _EP6AUTOINLENL	=	0xe625
                    E626    567 _EP8AUTOINLENH	=	0xe626
                    E627    568 _EP8AUTOINLENL	=	0xe627
                    E630    569 _EP2FIFOPFH	=	0xe630
                    E631    570 _EP2FIFOPFL	=	0xe631
                    E632    571 _EP4FIFOPFH	=	0xe632
                    E633    572 _EP4FIFOPFL	=	0xe633
                    E634    573 _EP6FIFOPFH	=	0xe634
                    E635    574 _EP6FIFOPFL	=	0xe635
                    E636    575 _EP8FIFOPFH	=	0xe636
                    E637    576 _EP8FIFOPFL	=	0xe637
                    E640    577 _EP2ISOINPKTS	=	0xe640
                    E641    578 _EP4ISOINPKTS	=	0xe641
                    E642    579 _EP6ISOINPKTS	=	0xe642
                    E643    580 _EP8ISOINPKTS	=	0xe643
                    E648    581 _INPKTEND	=	0xe648
                    E649    582 _OUTPKTEND	=	0xe649
                    E650    583 _EP2FIFOIE	=	0xe650
                    E651    584 _EP2FIFOIRQ	=	0xe651
                    E652    585 _EP4FIFOIE	=	0xe652
                    E653    586 _EP4FIFOIRQ	=	0xe653
                    E654    587 _EP6FIFOIE	=	0xe654
                    E655    588 _EP6FIFOIRQ	=	0xe655
                    E656    589 _EP8FIFOIE	=	0xe656
                    E657    590 _EP8FIFOIRQ	=	0xe657
                    E658    591 _IBNIE	=	0xe658
                    E659    592 _IBNIRQ	=	0xe659
                    E65A    593 _NAKIE	=	0xe65a
                    E65B    594 _NAKIRQ	=	0xe65b
                    E65C    595 _USBIE	=	0xe65c
                    E65D    596 _USBIRQ	=	0xe65d
                    E65E    597 _EPIE	=	0xe65e
                    E65F    598 _EPIRQ	=	0xe65f
                    E660    599 _GPIFIE	=	0xe660
                    E661    600 _GPIFIRQ	=	0xe661
                    E662    601 _USBERRIE	=	0xe662
                    E663    602 _USBERRIRQ	=	0xe663
                    E664    603 _ERRCNTLIM	=	0xe664
                    E665    604 _CLRERRCNT	=	0xe665
                    E666    605 _INT2IVEC	=	0xe666
                    E667    606 _INT4IVEC	=	0xe667
                    E668    607 _INTSETUP	=	0xe668
                    E670    608 _PORTACFG	=	0xe670
                    E671    609 _PORTCCFG	=	0xe671
                    E672    610 _PORTECFG	=	0xe672
                    E678    611 _I2CS	=	0xe678
                    E679    612 _I2DAT	=	0xe679
                    E67A    613 _I2CTL	=	0xe67a
                    E67B    614 _XAUTODAT1	=	0xe67b
                    E67C    615 _XAUTODAT2	=	0xe67c
                    E680    616 _USBCS	=	0xe680
                    E681    617 _SUSPEND	=	0xe681
                    E682    618 _WAKEUPCS	=	0xe682
                    E683    619 _TOGCTL	=	0xe683
                    E684    620 _USBFRAMEH	=	0xe684
                    E685    621 _USBFRAMEL	=	0xe685
                    E686    622 _MICROFRAME	=	0xe686
                    E687    623 _FNADDR	=	0xe687
                    E68A    624 _EP0BCH	=	0xe68a
                    E68B    625 _EP0BCL	=	0xe68b
                    E68D    626 _EP1OUTBC	=	0xe68d
                    E68F    627 _EP1INBC	=	0xe68f
                    E690    628 _EP2BCH	=	0xe690
                    E691    629 _EP2BCL	=	0xe691
                    E694    630 _EP4BCH	=	0xe694
                    E695    631 _EP4BCL	=	0xe695
                    E698    632 _EP6BCH	=	0xe698
                    E699    633 _EP6BCL	=	0xe699
                    E69C    634 _EP8BCH	=	0xe69c
                    E69D    635 _EP8BCL	=	0xe69d
                    E6A0    636 _EP0CS	=	0xe6a0
                    E6A1    637 _EP1OUTCS	=	0xe6a1
                    E6A2    638 _EP1INCS	=	0xe6a2
                    E6A3    639 _EP2CS	=	0xe6a3
                    E6A4    640 _EP4CS	=	0xe6a4
                    E6A5    641 _EP6CS	=	0xe6a5
                    E6A6    642 _EP8CS	=	0xe6a6
                    E6A7    643 _EP2FIFOFLGS	=	0xe6a7
                    E6A8    644 _EP4FIFOFLGS	=	0xe6a8
                    E6A9    645 _EP6FIFOFLGS	=	0xe6a9
                    E6AA    646 _EP8FIFOFLGS	=	0xe6aa
                    E6AB    647 _EP2FIFOBCH	=	0xe6ab
                    E6AC    648 _EP2FIFOBCL	=	0xe6ac
                    E6AD    649 _EP4FIFOBCH	=	0xe6ad
                    E6AE    650 _EP4FIFOBCL	=	0xe6ae
                    E6AF    651 _EP6FIFOBCH	=	0xe6af
                    E6B0    652 _EP6FIFOBCL	=	0xe6b0
                    E6B1    653 _EP8FIFOBCH	=	0xe6b1
                    E6B2    654 _EP8FIFOBCL	=	0xe6b2
                    E6B3    655 _SUDPTRH	=	0xe6b3
                    E6B4    656 _SUDPTRL	=	0xe6b4
                    E6B5    657 _SUDPTRCTL	=	0xe6b5
                    E6B8    658 _SETUPDAT	=	0xe6b8
                    E6C0    659 _GPIFWFSELECT	=	0xe6c0
                    E6C1    660 _GPIFIDLECS	=	0xe6c1
                    E6C2    661 _GPIFIDLECTL	=	0xe6c2
                    E6C3    662 _GPIFCTLCFG	=	0xe6c3
                    E6C4    663 _GPIFADRH	=	0xe6c4
                    E6C5    664 _GPIFADRL	=	0xe6c5
                    E6CE    665 _GPIFTCB3	=	0xe6ce
                    E6CF    666 _GPIFTCB2	=	0xe6cf
                    E6D0    667 _GPIFTCB1	=	0xe6d0
                    E6D1    668 _GPIFTCB0	=	0xe6d1
                    E6D2    669 _EP2GPIFFLGSEL	=	0xe6d2
                    E6D3    670 _EP2GPIFPFSTOP	=	0xe6d3
                    E6D4    671 _EP2GPIFTRIG	=	0xe6d4
                    E6DA    672 _EP4GPIFFLGSEL	=	0xe6da
                    E6DB    673 _EP4GPIFPFSTOP	=	0xe6db
                    E6DC    674 _EP4GPIFTRIG	=	0xe6dc
                    E6E2    675 _EP6GPIFFLGSEL	=	0xe6e2
                    E6E3    676 _EP6GPIFPFSTOP	=	0xe6e3
                    E6E4    677 _EP6GPIFTRIG	=	0xe6e4
                    E6EA    678 _EP8GPIFFLGSEL	=	0xe6ea
                    E6EB    679 _EP8GPIFPFSTOP	=	0xe6eb
                    E6EC    680 _EP8GPIFTRIG	=	0xe6ec
                    E6F0    681 _XGPIFSGLDATH	=	0xe6f0
                    E6F1    682 _XGPIFSGLDATLX	=	0xe6f1
                    E6F2    683 _XGPIFSGLDATLNOX	=	0xe6f2
                    E6F3    684 _GPIFREADYCFG	=	0xe6f3
                    E6F4    685 _GPIFREADYSTAT	=	0xe6f4
                    E6F5    686 _GPIFABORT	=	0xe6f5
                    E6C6    687 _FLOWSTATE	=	0xe6c6
                    E6C7    688 _FLOWLOGIC	=	0xe6c7
                    E6C8    689 _FLOWEQ0CTL	=	0xe6c8
                    E6C9    690 _FLOWEQ1CTL	=	0xe6c9
                    E6CA    691 _FLOWHOLDOFF	=	0xe6ca
                    E6CB    692 _FLOWSTB	=	0xe6cb
                    E6CC    693 _FLOWSTBEDGE	=	0xe6cc
                    E6CD    694 _FLOWSTBHPERIOD	=	0xe6cd
                    E60C    695 _GPIFHOLDAMOUNT	=	0xe60c
                    E67D    696 _UDMACRCH	=	0xe67d
                    E67E    697 _UDMACRCL	=	0xe67e
                    E67F    698 _UDMACRCQUAL	=	0xe67f
                    E6F8    699 _DBUG	=	0xe6f8
                    E6F9    700 _TESTCFG	=	0xe6f9
                    E6FA    701 _USBTEST	=	0xe6fa
                    E6FB    702 _CT1	=	0xe6fb
                    E6FC    703 _CT2	=	0xe6fc
                    E6FD    704 _CT3	=	0xe6fd
                    E6FE    705 _CT4	=	0xe6fe
                    E740    706 _EP0BUF	=	0xe740
                    E780    707 _EP1OUTBUF	=	0xe780
                    E7C0    708 _EP1INBUF	=	0xe7c0
                    F000    709 _EP2FIFOBUF	=	0xf000
                    F400    710 _EP4FIFOBUF	=	0xf400
                    F800    711 _EP6FIFOBUF	=	0xf800
                    FC00    712 _EP8FIFOBUF	=	0xfc00
                            713 ;--------------------------------------------------------
                            714 ; absolute external ram data
                            715 ;--------------------------------------------------------
                            716 	.area XABS    (ABS,XDATA)
                            717 ;--------------------------------------------------------
                            718 ; external initialized ram data
                            719 ;--------------------------------------------------------
                            720 	.area HOME    (CODE)
                            721 	.area GSINIT0 (CODE)
                            722 	.area GSINIT1 (CODE)
                            723 	.area GSINIT2 (CODE)
                            724 	.area GSINIT3 (CODE)
                            725 	.area GSINIT4 (CODE)
                            726 	.area GSINIT5 (CODE)
                            727 	.area GSINIT  (CODE)
                            728 	.area GSFINAL (CODE)
                            729 	.area CSEG    (CODE)
                            730 ;--------------------------------------------------------
                            731 ; global & static initialisations
                            732 ;--------------------------------------------------------
                            733 	.area HOME    (CODE)
                            734 	.area GSINIT  (CODE)
                            735 	.area GSFINAL (CODE)
                            736 	.area GSINIT  (CODE)
                            737 ;	../Initial/src/lib/usb_common.c:56: unsigned char	_usb_config = 0;
   0000 75*00 00            738 	mov	__usb_config,#0x00
                            739 ;	../Initial/src/lib/usb_common.c:57: unsigned char	_usb_alt_setting = 0;	// FIXME really 1/interface
   0003 75*01 00            740 	mov	__usb_alt_setting,#0x00
                            741 ;--------------------------------------------------------
                            742 ; Home
                            743 ;--------------------------------------------------------
                            744 	.area HOME    (CODE)
                            745 	.area HOME    (CODE)
                            746 ;--------------------------------------------------------
                            747 ; code
                            748 ;--------------------------------------------------------
                            749 	.area CSEG    (CODE)
                            750 ;------------------------------------------------------------
                            751 ;Allocation info for local variables in function 'setup_descriptors'
                            752 ;------------------------------------------------------------
                            753 ;------------------------------------------------------------
                            754 ;	../Initial/src/lib/usb_common.c:65: setup_descriptors (void)
                            755 ;	-----------------------------------------
                            756 ;	 function setup_descriptors
                            757 ;	-----------------------------------------
   0000                     758 _setup_descriptors:
                    0002    759 	ar2 = 0x02
                    0003    760 	ar3 = 0x03
                    0004    761 	ar4 = 0x04
                    0005    762 	ar5 = 0x05
                    0006    763 	ar6 = 0x06
                    0007    764 	ar7 = 0x07
                    0000    765 	ar0 = 0x00
                    0001    766 	ar1 = 0x01
                            767 ;	../Initial/src/lib/usb_common.c:67: if (USBCS & bmHSM)
   0000 90 E6 80            768 	mov	dptr,#_USBCS
   0003 E0                  769 	movx	a,@dptr
   0004 FA                  770 	mov	r2,a
   0005 30 E7 19            771 	jnb	acc.7,00102$
                            772 ;	../Initial/src/lib/usb_common.c:69: current_device_descr  = high_speed_device_descr;
   0008 75*02r00            773 	mov	_current_device_descr,#_high_speed_device_descr
   000B 75*03s00            774 	mov	(_current_device_descr + 1),#(_high_speed_device_descr >> 8)
                            775 ;	../Initial/src/lib/usb_common.c:70: current_devqual_descr = high_speed_devqual_descr;
   000E 75*04r00            776 	mov	_current_devqual_descr,#_high_speed_devqual_descr
   0011 75*05s00            777 	mov	(_current_devqual_descr + 1),#(_high_speed_devqual_descr >> 8)
                            778 ;	../Initial/src/lib/usb_common.c:71: current_config_descr  = high_speed_config_descr;
   0014 75*06r00            779 	mov	_current_config_descr,#_high_speed_config_descr
   0017 75*07s00            780 	mov	(_current_config_descr + 1),#(_high_speed_config_descr >> 8)
                            781 ;	../Initial/src/lib/usb_common.c:72: other_config_descr    = full_speed_config_descr;
   001A 75*08r00            782 	mov	_other_config_descr,#_full_speed_config_descr
   001D 75*09s00            783 	mov	(_other_config_descr + 1),#(_full_speed_config_descr >> 8)
   0020 22                  784 	ret
   0021                     785 00102$:
                            786 ;	../Initial/src/lib/usb_common.c:76: current_device_descr  = full_speed_device_descr;
   0021 75*02r00            787 	mov	_current_device_descr,#_full_speed_device_descr
   0024 75*03s00            788 	mov	(_current_device_descr + 1),#(_full_speed_device_descr >> 8)
                            789 ;	../Initial/src/lib/usb_common.c:77: current_devqual_descr = full_speed_devqual_descr;
   0027 75*04r00            790 	mov	_current_devqual_descr,#_full_speed_devqual_descr
   002A 75*05s00            791 	mov	(_current_devqual_descr + 1),#(_full_speed_devqual_descr >> 8)
                            792 ;	../Initial/src/lib/usb_common.c:78: current_config_descr  = full_speed_config_descr;
   002D 75*06r00            793 	mov	_current_config_descr,#_full_speed_config_descr
   0030 75*07s00            794 	mov	(_current_config_descr + 1),#(_full_speed_config_descr >> 8)
                            795 ;	../Initial/src/lib/usb_common.c:79: other_config_descr    = high_speed_config_descr;
   0033 75*08r00            796 	mov	_other_config_descr,#_high_speed_config_descr
   0036 75*09s00            797 	mov	(_other_config_descr + 1),#(_high_speed_config_descr >> 8)
   0039 22                  798 	ret
                            799 ;------------------------------------------------------------
                            800 ;Allocation info for local variables in function 'isr_SUDAV'
                            801 ;------------------------------------------------------------
                            802 ;------------------------------------------------------------
                            803 ;	../Initial/src/lib/usb_common.c:84: isr_SUDAV (void) interrupt
                            804 ;	-----------------------------------------
                            805 ;	 function isr_SUDAV
                            806 ;	-----------------------------------------
   003A                     807 _isr_SUDAV:
                            808 ;	../Initial/src/lib/usb_common.c:86: clear_usb_irq ();
   003A 53 91 EF            809 	anl	_EXIF,#0xEF
   003D 75 A1 00            810 	mov	_INT2CLR,#0x00
                            811 ;	../Initial/src/lib/usb_common.c:87: _usb_got_SUDAV = 1;
   0040 D2*00               812 	setb	__usb_got_SUDAV
   0042 32                  813 	reti
                            814 ;	eliminated unneeded push/pop psw
                            815 ;	eliminated unneeded push/pop dpl
                            816 ;	eliminated unneeded push/pop dph
                            817 ;	eliminated unneeded push/pop b
                            818 ;	eliminated unneeded push/pop acc
                            819 ;------------------------------------------------------------
                            820 ;Allocation info for local variables in function 'isr_USBRESET'
                            821 ;------------------------------------------------------------
                            822 ;------------------------------------------------------------
                            823 ;	../Initial/src/lib/usb_common.c:91: isr_USBRESET (void) interrupt
                            824 ;	-----------------------------------------
                            825 ;	 function isr_USBRESET
                            826 ;	-----------------------------------------
   0043                     827 _isr_USBRESET:
   0043 C0*00               828 	push	bits
   0045 C0 E0               829 	push	acc
   0047 C0 F0               830 	push	b
   0049 C0 82               831 	push	dpl
   004B C0 83               832 	push	dph
   004D C0 02               833 	push	(0+2)
   004F C0 03               834 	push	(0+3)
   0051 C0 04               835 	push	(0+4)
   0053 C0 05               836 	push	(0+5)
   0055 C0 06               837 	push	(0+6)
   0057 C0 07               838 	push	(0+7)
   0059 C0 00               839 	push	(0+0)
   005B C0 01               840 	push	(0+1)
   005D C0 D0               841 	push	psw
   005F 75 D0 00            842 	mov	psw,#0x00
                            843 ;	../Initial/src/lib/usb_common.c:93: clear_usb_irq ();
   0062 53 91 EF            844 	anl	_EXIF,#0xEF
   0065 75 A1 00            845 	mov	_INT2CLR,#0x00
                            846 ;	../Initial/src/lib/usb_common.c:94: setup_descriptors ();
   0068 12s00r00            847 	lcall	_setup_descriptors
   006B D0 D0               848 	pop	psw
   006D D0 01               849 	pop	(0+1)
   006F D0 00               850 	pop	(0+0)
   0071 D0 07               851 	pop	(0+7)
   0073 D0 06               852 	pop	(0+6)
   0075 D0 05               853 	pop	(0+5)
   0077 D0 04               854 	pop	(0+4)
   0079 D0 03               855 	pop	(0+3)
   007B D0 02               856 	pop	(0+2)
   007D D0 83               857 	pop	dph
   007F D0 82               858 	pop	dpl
   0081 D0 F0               859 	pop	b
   0083 D0 E0               860 	pop	acc
   0085 D0*00               861 	pop	bits
   0087 32                  862 	reti
                            863 ;------------------------------------------------------------
                            864 ;Allocation info for local variables in function 'isr_HIGHSPEED'
                            865 ;------------------------------------------------------------
                            866 ;------------------------------------------------------------
                            867 ;	../Initial/src/lib/usb_common.c:98: isr_HIGHSPEED (void) interrupt
                            868 ;	-----------------------------------------
                            869 ;	 function isr_HIGHSPEED
                            870 ;	-----------------------------------------
   0088                     871 _isr_HIGHSPEED:
   0088 C0*00               872 	push	bits
   008A C0 E0               873 	push	acc
   008C C0 F0               874 	push	b
   008E C0 82               875 	push	dpl
   0090 C0 83               876 	push	dph
   0092 C0 02               877 	push	(0+2)
   0094 C0 03               878 	push	(0+3)
   0096 C0 04               879 	push	(0+4)
   0098 C0 05               880 	push	(0+5)
   009A C0 06               881 	push	(0+6)
   009C C0 07               882 	push	(0+7)
   009E C0 00               883 	push	(0+0)
   00A0 C0 01               884 	push	(0+1)
   00A2 C0 D0               885 	push	psw
   00A4 75 D0 00            886 	mov	psw,#0x00
                            887 ;	../Initial/src/lib/usb_common.c:100: clear_usb_irq ();
   00A7 53 91 EF            888 	anl	_EXIF,#0xEF
   00AA 75 A1 00            889 	mov	_INT2CLR,#0x00
                            890 ;	../Initial/src/lib/usb_common.c:101: setup_descriptors ();
   00AD 12s00r00            891 	lcall	_setup_descriptors
   00B0 D0 D0               892 	pop	psw
   00B2 D0 01               893 	pop	(0+1)
   00B4 D0 00               894 	pop	(0+0)
   00B6 D0 07               895 	pop	(0+7)
   00B8 D0 06               896 	pop	(0+6)
   00BA D0 05               897 	pop	(0+5)
   00BC D0 04               898 	pop	(0+4)
   00BE D0 03               899 	pop	(0+3)
   00C0 D0 02               900 	pop	(0+2)
   00C2 D0 83               901 	pop	dph
   00C4 D0 82               902 	pop	dpl
   00C6 D0 F0               903 	pop	b
   00C8 D0 E0               904 	pop	acc
   00CA D0*00               905 	pop	bits
   00CC 32                  906 	reti
                            907 ;------------------------------------------------------------
                            908 ;Allocation info for local variables in function 'usb_install_handlers'
                            909 ;------------------------------------------------------------
                            910 ;------------------------------------------------------------
                            911 ;	../Initial/src/lib/usb_common.c:105: usb_install_handlers (void)
                            912 ;	-----------------------------------------
                            913 ;	 function usb_install_handlers
                            914 ;	-----------------------------------------
   00CD                     915 _usb_install_handlers:
                            916 ;	../Initial/src/lib/usb_common.c:107: setup_descriptors ();	    // ensure that they're set before use
   00CD 12s00r00            917 	lcall	_setup_descriptors
                            918 ;	../Initial/src/lib/usb_common.c:109: hook_uv (UV_SUDAV,     (unsigned short) isr_SUDAV);
   00D0 75*00r3A            919 	mov	_hook_uv_PARM_2,#_isr_SUDAV
   00D3 75*01s00            920 	mov	(_hook_uv_PARM_2 + 1),#(_isr_SUDAV >> 8)
   00D6 75 82 00            921 	mov	dpl,#0x00
   00D9 12s00r00            922 	lcall	_hook_uv
                            923 ;	../Initial/src/lib/usb_common.c:110: hook_uv (UV_USBRESET,  (unsigned short) isr_USBRESET);
   00DC 75*00r43            924 	mov	_hook_uv_PARM_2,#_isr_USBRESET
   00DF 75*01s00            925 	mov	(_hook_uv_PARM_2 + 1),#(_isr_USBRESET >> 8)
   00E2 75 82 10            926 	mov	dpl,#0x10
   00E5 12s00r00            927 	lcall	_hook_uv
                            928 ;	../Initial/src/lib/usb_common.c:111: hook_uv (UV_HIGHSPEED, (unsigned short) isr_HIGHSPEED);
   00E8 75*00r88            929 	mov	_hook_uv_PARM_2,#_isr_HIGHSPEED
   00EB 75*01s00            930 	mov	(_hook_uv_PARM_2 + 1),#(_isr_HIGHSPEED >> 8)
   00EE 75 82 14            931 	mov	dpl,#0x14
   00F1 12s00r00            932 	lcall	_hook_uv
                            933 ;	../Initial/src/lib/usb_common.c:113: USBIE = bmSUDAV | bmURES | bmHSGRANT;
   00F4 90 E6 5C            934 	mov	dptr,#_USBIE
   00F7 74 31               935 	mov	a,#0x31
   00F9 F0                  936 	movx	@dptr,a
   00FA 22                  937 	ret
                            938 ;------------------------------------------------------------
                            939 ;Allocation info for local variables in function 'plausible_endpoint'
                            940 ;------------------------------------------------------------
                            941 ;ep                        Allocated to registers r2 
                            942 ;------------------------------------------------------------
                            943 ;	../Initial/src/lib/usb_common.c:120: plausible_endpoint (unsigned char ep)
                            944 ;	-----------------------------------------
                            945 ;	 function plausible_endpoint
                            946 ;	-----------------------------------------
   00FB                     947 _plausible_endpoint:
                            948 ;	../Initial/src/lib/usb_common.c:122: ep &= ~0x80;	// ignore direction bit
                            949 ;	../Initial/src/lib/usb_common.c:124: if (ep > 8)
   00FB E5 82               950 	mov	a,dpl
   00FD 54 7F               951 	anl	a,#0x7F
   00FF FA                  952 	mov	r2,a
   0100 24 F7               953 	add	a,#0xff - 0x08
   0102 50 04               954 	jnc	00102$
                            955 ;	../Initial/src/lib/usb_common.c:125: return 0;
   0104 75 82 00            956 	mov	dpl,#0x00
   0107 22                  957 	ret
   0108                     958 00102$:
                            959 ;	../Initial/src/lib/usb_common.c:127: if (ep == 1)
   0108 BA 01 04            960 	cjne	r2,#0x01,00104$
                            961 ;	../Initial/src/lib/usb_common.c:128: return 1;
   010B 75 82 01            962 	mov	dpl,#0x01
   010E 22                  963 	ret
   010F                     964 00104$:
                            965 ;	../Initial/src/lib/usb_common.c:130: return (ep & 0x1) == 0;	// must be even
   010F 53 02 01            966 	anl	ar2,#0x01
   0112 E4                  967 	clr	a
   0113 BA 00 01            968 	cjne	r2,#0x00,00112$
   0116 04                  969 	inc	a
   0117                     970 00112$:
   0117 F5 82               971 	mov	dpl,a
   0119 22                  972 	ret
                            973 ;------------------------------------------------------------
                            974 ;Allocation info for local variables in function 'epcs'
                            975 ;------------------------------------------------------------
                            976 ;ep                        Allocated to registers r2 
                            977 ;------------------------------------------------------------
                            978 ;	../Initial/src/lib/usb_common.c:137: epcs (unsigned char ep)
                            979 ;	-----------------------------------------
                            980 ;	 function epcs
                            981 ;	-----------------------------------------
   011A                     982 _epcs:
   011A AA 82               983 	mov	r2,dpl
                            984 ;	../Initial/src/lib/usb_common.c:139: if (ep == 0x01)		// ep1 has different in and out CS regs
   011C BA 01 0C            985 	cjne	r2,#0x01,00102$
                            986 ;	../Initial/src/lib/usb_common.c:140: return EP1OUTCS;
   011F 90 E6 A1            987 	mov	dptr,#_EP1OUTCS
   0122 E0                  988 	movx	a,@dptr
   0123 FB                  989 	mov	r3,a
   0124 7C 00               990 	mov	r4,#0x00
   0126 8B 82               991 	mov	dpl,r3
   0128 8C 83               992 	mov	dph,r4
   012A 22                  993 	ret
   012B                     994 00102$:
                            995 ;	../Initial/src/lib/usb_common.c:142: if (ep == 0x81)
   012B BA 81 0C            996 	cjne	r2,#0x81,00104$
                            997 ;	../Initial/src/lib/usb_common.c:143: return EP1INCS;
   012E 90 E6 A2            998 	mov	dptr,#_EP1INCS
   0131 E0                  999 	movx	a,@dptr
   0132 FB                 1000 	mov	r3,a
   0133 7C 00              1001 	mov	r4,#0x00
   0135 8B 82              1002 	mov	dpl,r3
   0137 8C 83              1003 	mov	dph,r4
   0139 22                 1004 	ret
   013A                    1005 00104$:
                           1006 ;	../Initial/src/lib/usb_common.c:145: ep &= ~0x80;			// ignore direction bit
   013A 53 02 7F           1007 	anl	ar2,#0x7F
                           1008 ;	../Initial/src/lib/usb_common.c:147: if (ep == 0x00)		// ep0
   013D EA                 1009 	mov	a,r2
   013E 70 0C              1010 	jnz	00106$
                           1011 ;	../Initial/src/lib/usb_common.c:148: return EP0CS;
   0140 90 E6 A0           1012 	mov	dptr,#_EP0CS
   0143 E0                 1013 	movx	a,@dptr
   0144 FB                 1014 	mov	r3,a
   0145 7C 00              1015 	mov	r4,#0x00
   0147 8B 82              1016 	mov	dpl,r3
   0149 8C 83              1017 	mov	dph,r4
   014B 22                 1018 	ret
   014C                    1019 00106$:
                           1020 ;	../Initial/src/lib/usb_common.c:150: return EP2CS + (ep >> 1);	// 2, 4, 6, 8 are consecutive
   014C 90 E6 A3           1021 	mov	dptr,#_EP2CS
   014F E0                 1022 	movx	a,@dptr
   0150 FB                 1023 	mov	r3,a
   0151 7C 00              1024 	mov	r4,#0x00
   0153 EA                 1025 	mov	a,r2
   0154 C3                 1026 	clr	c
   0155 13                 1027 	rrc	a
   0156 FA                 1028 	mov	r2,a
   0157 7D 00              1029 	mov	r5,#0x00
   0159 EA                 1030 	mov	a,r2
   015A 2B                 1031 	add	a,r3
   015B FB                 1032 	mov	r3,a
   015C ED                 1033 	mov	a,r5
   015D 3C                 1034 	addc	a,r4
   015E 8B 82              1035 	mov	dpl,r3
   0160 F5 83              1036 	mov	dph,a
   0162 22                 1037 	ret
                           1038 ;------------------------------------------------------------
                           1039 ;Allocation info for local variables in function 'usb_handle_set_feature'
                           1040 ;------------------------------------------------------------
                           1041 ;__00030000                Allocated to registers r2 r3 
                           1042 ;------------------------------------------------------------
                           1043 ;	../Initial/src/lib/usb_common.c:153: void usb_handle_set_feature(void)
                           1044 ;	-----------------------------------------
                           1045 ;	 function usb_handle_set_feature
                           1046 ;	-----------------------------------------
   0163                    1047 _usb_handle_set_feature:
                           1048 ;	../Initial/src/lib/usb_common.c:155: switch (bRequestType & bmRT_RECIP_MASK)
   0163 90 E6 B8           1049 	mov	dptr,#_SETUPDAT
   0166 E0                 1050 	movx	a,@dptr
   0167 FA                 1051 	mov	r2,a
   0168 53 02 1F           1052 	anl	ar2,#0x1F
   016B BA 00 02           1053 	cjne	r2,#0x00,00121$
   016E 80 05              1054 	sjmp	00101$
   0170                    1055 00121$:
                           1056 ;	../Initial/src/lib/usb_common.c:157: case bmRT_RECIP_DEVICE:
   0170 BA 02 45           1057 	cjne	r2,#0x02,00112$
   0173 80 12              1058 	sjmp	00106$
   0175                    1059 00101$:
                           1060 ;	../Initial/src/lib/usb_common.c:158: switch (wValueL)
   0175 90 E6 BA           1061 	mov	dptr,#(_SETUPDAT + 0x0002)
   0178 E0                 1062 	movx	a,@dptr
   0179 FA                 1063 	mov	r2,a
   017A BA 01 02           1064 	cjne	r2,#0x01,00123$
   017D 80 05              1065 	sjmp	00104$
   017F                    1066 00123$:
   017F BA 02 02           1067 	cjne	r2,#0x02,00124$
   0182 80 03              1068 	sjmp	00106$
   0184                    1069 00124$:
                           1070 ;	../Initial/src/lib/usb_common.c:165: default:
   0184                    1071 00104$:
                           1072 ;	../Initial/src/lib/usb_common.c:166: fx2_stall_ep0 ();
   0184 12s00r00           1073 	lcall	_fx2_stall_ep0
                           1074 ;	../Initial/src/lib/usb_common.c:170: case bmRT_RECIP_ENDPOINT:
   0187                    1075 00106$:
                           1076 ;	../Initial/src/lib/usb_common.c:171: switch (wValueL)
   0187 90 E6 BA           1077 	mov	dptr,#(_SETUPDAT + 0x0002)
   018A E0                 1078 	movx	a,@dptr
   018B FA                 1079 	mov	r2,a
   018C 70 2A              1080 	jnz	00112$
                           1081 ;	../Initial/src/lib/usb_common.c:174: if (plausible_endpoint (wIndexL))
   018E 90 E6 BC           1082 	mov	dptr,#(_SETUPDAT + 0x0004)
   0191 E0                 1083 	movx	a,@dptr
   0192 F5 82              1084 	mov	dpl,a
   0194 12s00rFB           1085 	lcall	_plausible_endpoint
   0197 E5 82              1086 	mov	a,dpl
   0199 60 1A              1087 	jz	00109$
                           1088 ;	../Initial/src/lib/usb_common.c:175: *epcs (wIndexL) |= bmEPSTALL;
   019B 90 E6 BC           1089 	mov	dptr,#(_SETUPDAT + 0x0004)
   019E E0                 1090 	movx	a,@dptr
   019F F5 82              1091 	mov	dpl,a
   01A1 12s01r1A           1092 	lcall	_epcs
   01A4 AA 82              1093 	mov	r2,dpl
   01A6 AB 83              1094 	mov  r3,dph
   01A8 E0                 1095 	movx	a,@dptr
   01A9 FC                 1096 	mov	r4,a
   01AA 43 04 01           1097 	orl	ar4,#0x01
   01AD 8A 82              1098 	mov	dpl,r2
   01AF 8B 83              1099 	mov	dph,r3
   01B1 EC                 1100 	mov	a,r4
   01B2 F0                 1101 	movx	@dptr,a
   01B3 80 03              1102 	sjmp	00112$
   01B5                    1103 00109$:
                           1104 ;	../Initial/src/lib/usb_common.c:177: fx2_stall_ep0 ();
   01B5 12s00r00           1105 	lcall	_fx2_stall_ep0
                           1106 ;	../Initial/src/lib/usb_common.c:181: default:
   01B8                    1107 00112$:
                           1108 ;	../Initial/src/lib/usb_common.c:182: fx2_stall_ep0 ();
                           1109 ;	../Initial/src/lib/usb_common.c:184: }
   01B8 02s00r00           1110 	ljmp	_fx2_stall_ep0
                           1111 ;------------------------------------------------------------
                           1112 ;Allocation info for local variables in function 'usb_handle_clear_feature'
                           1113 ;------------------------------------------------------------
                           1114 ;__00030001                Allocated to registers r2 r3 
                           1115 ;------------------------------------------------------------
                           1116 ;	../Initial/src/lib/usb_common.c:187: void usb_handle_clear_feature(void)
                           1117 ;	-----------------------------------------
                           1118 ;	 function usb_handle_clear_feature
                           1119 ;	-----------------------------------------
   01BB                    1120 _usb_handle_clear_feature:
                           1121 ;	../Initial/src/lib/usb_common.c:189: switch (bRequestType & bmRT_RECIP_MASK)
   01BB 90 E6 B8           1122 	mov	dptr,#_SETUPDAT
   01BE E0                 1123 	movx	a,@dptr
   01BF FA                 1124 	mov	r2,a
   01C0 53 02 1F           1125 	anl	ar2,#0x1F
   01C3 BA 00 02           1126 	cjne	r2,#0x00,00118$
   01C6 80 05              1127 	sjmp	00101$
   01C8                    1128 00118$:
                           1129 ;	../Initial/src/lib/usb_common.c:192: case bmRT_RECIP_DEVICE:
   01C8 BA 02 40           1130 	cjne	r2,#0x02,00110$
   01CB 80 07              1131 	sjmp	00105$
   01CD                    1132 00101$:
                           1133 ;	../Initial/src/lib/usb_common.c:193: switch (wValueL)
   01CD 90 E6 BA           1134 	mov	dptr,#(_SETUPDAT + 0x0002)
   01D0 E0                 1135 	movx	a,@dptr
                           1136 ;	../Initial/src/lib/usb_common.c:197: fx2_stall_ep0 ();
                           1137 ;	../Initial/src/lib/usb_common.c:199: break;
                           1138 ;	../Initial/src/lib/usb_common.c:201: case bmRT_RECIP_ENDPOINT:
   01D1 02s00r00           1139 	ljmp	_fx2_stall_ep0
   01D4                    1140 00105$:
                           1141 ;	../Initial/src/lib/usb_common.c:202: if (wValueL == FS_ENDPOINT_HALT && plausible_endpoint (wIndexL))
   01D4 90 E6 BA           1142 	mov	dptr,#(_SETUPDAT + 0x0002)
   01D7 E0                 1143 	movx	a,@dptr
   01D8 70 2E              1144 	jnz	00107$
   01DA 90 E6 BC           1145 	mov	dptr,#(_SETUPDAT + 0x0004)
   01DD E0                 1146 	movx	a,@dptr
   01DE F5 82              1147 	mov	dpl,a
   01E0 12s00rFB           1148 	lcall	_plausible_endpoint
   01E3 E5 82              1149 	mov	a,dpl
   01E5 60 21              1150 	jz	00107$
                           1151 ;	../Initial/src/lib/usb_common.c:204: *epcs (wIndexL) &= ~bmEPSTALL;
   01E7 90 E6 BC           1152 	mov	dptr,#(_SETUPDAT + 0x0004)
   01EA E0                 1153 	movx	a,@dptr
   01EB F5 82              1154 	mov	dpl,a
   01ED 12s01r1A           1155 	lcall	_epcs
   01F0 AA 82              1156 	mov	r2,dpl
   01F2 AB 83              1157 	mov  r3,dph
   01F4 E0                 1158 	movx	a,@dptr
   01F5 FC                 1159 	mov	r4,a
   01F6 53 04 FE           1160 	anl	ar4,#0xFE
   01F9 8A 82              1161 	mov	dpl,r2
   01FB 8B 83              1162 	mov	dph,r3
   01FD EC                 1163 	mov	a,r4
   01FE F0                 1164 	movx	@dptr,a
                           1165 ;	../Initial/src/lib/usb_common.c:205: fx2_reset_data_toggle (wIndexL);
   01FF 90 E6 BC           1166 	mov	dptr,#(_SETUPDAT + 0x0004)
   0202 E0                 1167 	movx	a,@dptr
   0203 F5 82              1168 	mov	dpl,a
   0205 02s00r00           1169 	ljmp	_fx2_reset_data_toggle
   0208                    1170 00107$:
                           1171 ;	../Initial/src/lib/usb_common.c:208: fx2_stall_ep0 ();
                           1172 ;	../Initial/src/lib/usb_common.c:209: break;
                           1173 ;	../Initial/src/lib/usb_common.c:211: default:
   0208 02s00r00           1174 	ljmp	_fx2_stall_ep0
   020B                    1175 00110$:
                           1176 ;	../Initial/src/lib/usb_common.c:212: fx2_stall_ep0 ();
                           1177 ;	../Initial/src/lib/usb_common.c:214: }
   020B 02s00r00           1178 	ljmp	_fx2_stall_ep0
                           1179 ;------------------------------------------------------------
                           1180 ;Allocation info for local variables in function 'usb_handle_get_status'
                           1181 ;------------------------------------------------------------
                           1182 ;------------------------------------------------------------
                           1183 ;	../Initial/src/lib/usb_common.c:217: void usb_handle_get_status(void)
                           1184 ;	-----------------------------------------
                           1185 ;	 function usb_handle_get_status
                           1186 ;	-----------------------------------------
   020E                    1187 _usb_handle_get_status:
                           1188 ;	../Initial/src/lib/usb_common.c:219: switch (bRequestType & bmRT_RECIP_MASK)
   020E 90 E6 B8           1189 	mov	dptr,#_SETUPDAT
   0211 E0                 1190 	movx	a,@dptr
   0212 FA                 1191 	mov	r2,a
   0213 53 02 1F           1192 	anl	ar2,#0x1F
   0216 BA 00 02           1193 	cjne	r2,#0x00,00115$
   0219 80 0A              1194 	sjmp	00101$
   021B                    1195 00115$:
   021B BA 01 02           1196 	cjne	r2,#0x01,00116$
   021E 80 1B              1197 	sjmp	00102$
   0220                    1198 00116$:
                           1199 ;	../Initial/src/lib/usb_common.c:221: case bmRT_RECIP_DEVICE:
   0220 BA 02 5F           1200 	cjne	r2,#0x02,00107$
   0223 80 2A              1201 	sjmp	00103$
   0225                    1202 00101$:
                           1203 ;	../Initial/src/lib/usb_common.c:222: EP0BUF[0] = bmGSDA_SELF_POWERED;	// FIXME app should handle
   0225 90 E7 40           1204 	mov	dptr,#_EP0BUF
   0228 74 01              1205 	mov	a,#0x01
   022A F0                 1206 	movx	@dptr,a
                           1207 ;	../Initial/src/lib/usb_common.c:223: EP0BUF[1] = 0;
   022B 90 E7 41           1208 	mov	dptr,#(_EP0BUF + 0x0001)
                           1209 ;	../Initial/src/lib/usb_common.c:224: EP0BCH = 0;
   022E E4                 1210 	clr	a
   022F F0                 1211 	movx	@dptr,a
   0230 90 E6 8A           1212 	mov	dptr,#_EP0BCH
   0233 F0                 1213 	movx	@dptr,a
                           1214 ;	../Initial/src/lib/usb_common.c:225: EP0BCL = 2;
   0234 90 E6 8B           1215 	mov	dptr,#_EP0BCL
   0237 74 02              1216 	mov	a,#0x02
   0239 F0                 1217 	movx	@dptr,a
                           1218 ;	../Initial/src/lib/usb_common.c:226: break;
                           1219 ;	../Initial/src/lib/usb_common.c:228: case bmRT_RECIP_INTERFACE:
   023A 22                 1220 	ret
   023B                    1221 00102$:
                           1222 ;	../Initial/src/lib/usb_common.c:229: EP0BUF[0] = 0;
   023B 90 E7 40           1223 	mov	dptr,#_EP0BUF
                           1224 ;	../Initial/src/lib/usb_common.c:230: EP0BUF[1] = 0;
                           1225 ;	../Initial/src/lib/usb_common.c:231: EP0BCH = 0;
   023E E4                 1226 	clr	a
   023F F0                 1227 	movx	@dptr,a
   0240 90 E7 41           1228 	mov	dptr,#(_EP0BUF + 0x0001)
   0243 F0                 1229 	movx	@dptr,a
   0244 90 E6 8A           1230 	mov	dptr,#_EP0BCH
   0247 F0                 1231 	movx	@dptr,a
                           1232 ;	../Initial/src/lib/usb_common.c:232: EP0BCL = 2;
   0248 90 E6 8B           1233 	mov	dptr,#_EP0BCL
   024B 74 02              1234 	mov	a,#0x02
   024D F0                 1235 	movx	@dptr,a
                           1236 ;	../Initial/src/lib/usb_common.c:233: break;
                           1237 ;	../Initial/src/lib/usb_common.c:235: case bmRT_RECIP_ENDPOINT:
   024E 22                 1238 	ret
   024F                    1239 00103$:
                           1240 ;	../Initial/src/lib/usb_common.c:236: if (plausible_endpoint (wIndexL))
   024F 90 E6 BC           1241 	mov	dptr,#(_SETUPDAT + 0x0004)
   0252 E0                 1242 	movx	a,@dptr
   0253 F5 82              1243 	mov	dpl,a
   0255 12s00rFB           1244 	lcall	_plausible_endpoint
   0258 E5 82              1245 	mov	a,dpl
   025A 60 23              1246 	jz	00105$
                           1247 ;	../Initial/src/lib/usb_common.c:238: EP0BUF[0] = *epcs (wIndexL) & bmEPSTALL;
   025C 90 E6 BC           1248 	mov	dptr,#(_SETUPDAT + 0x0004)
   025F E0                 1249 	movx	a,@dptr
   0260 F5 82              1250 	mov	dpl,a
   0262 12s01r1A           1251 	lcall	_epcs
   0265 E0                 1252 	movx	a,@dptr
   0266 FA                 1253 	mov	r2,a
   0267 53 02 01           1254 	anl	ar2,#0x01
   026A 90 E7 40           1255 	mov	dptr,#_EP0BUF
   026D EA                 1256 	mov	a,r2
   026E F0                 1257 	movx	@dptr,a
                           1258 ;	../Initial/src/lib/usb_common.c:239: EP0BUF[1] = 0;
   026F 90 E7 41           1259 	mov	dptr,#(_EP0BUF + 0x0001)
                           1260 ;	../Initial/src/lib/usb_common.c:240: EP0BCH = 0;
   0272 E4                 1261 	clr	a
   0273 F0                 1262 	movx	@dptr,a
   0274 90 E6 8A           1263 	mov	dptr,#_EP0BCH
   0277 F0                 1264 	movx	@dptr,a
                           1265 ;	../Initial/src/lib/usb_common.c:241: EP0BCL = 2;
   0278 90 E6 8B           1266 	mov	dptr,#_EP0BCL
   027B 74 02              1267 	mov	a,#0x02
   027D F0                 1268 	movx	@dptr,a
   027E 22                 1269 	ret
   027F                    1270 00105$:
                           1271 ;	../Initial/src/lib/usb_common.c:244: fx2_stall_ep0 ();
                           1272 ;	../Initial/src/lib/usb_common.c:245: break;
                           1273 ;	../Initial/src/lib/usb_common.c:247: default:
   027F 02s00r00           1274 	ljmp	_fx2_stall_ep0
   0282                    1275 00107$:
                           1276 ;	../Initial/src/lib/usb_common.c:248: fx2_stall_ep0 ();
                           1277 ;	../Initial/src/lib/usb_common.c:250: }
   0282 02s00r00           1278 	ljmp	_fx2_stall_ep0
                           1279 ;------------------------------------------------------------
                           1280 ;Allocation info for local variables in function 'usb_handle_get_descriptor'
                           1281 ;------------------------------------------------------------
                           1282 ;p                         Allocated to registers r2 r3 
                           1283 ;------------------------------------------------------------
                           1284 ;	../Initial/src/lib/usb_common.c:253: void usb_handle_get_descriptor(void)
                           1285 ;	-----------------------------------------
                           1286 ;	 function usb_handle_get_descriptor
                           1287 ;	-----------------------------------------
   0285                    1288 _usb_handle_get_descriptor:
                           1289 ;	../Initial/src/lib/usb_common.c:255: switch (wValueH)
   0285 90 E6 BB           1290 	mov	dptr,#(_SETUPDAT + 0x0003)
   0288 E0                 1291 	movx	a,@dptr
   0289 FA                 1292 	mov	r2,a
   028A BA 01 02           1293 	cjne	r2,#0x01,00127$
   028D 80 17              1294 	sjmp	00101$
   028F                    1295 00127$:
   028F BA 02 02           1296 	cjne	r2,#0x02,00128$
   0292 80 30              1297 	sjmp	00105$
   0294                    1298 00128$:
   0294 BA 03 02           1299 	cjne	r2,#0x03,00129$
   0297 80 49              1300 	sjmp	00113$
   0299                    1301 00129$:
   0299 BA 06 02           1302 	cjne	r2,#0x06,00130$
   029C 80 17              1303 	sjmp	00102$
   029E                    1304 00130$:
   029E BA 07 02           1305 	cjne	r2,#0x07,00131$
   02A1 80 30              1306 	sjmp	00110$
   02A3                    1307 00131$:
   02A3 02s03r14           1308 	ljmp	00117$
                           1309 ;	../Initial/src/lib/usb_common.c:258: case DT_DEVICE:
   02A6                    1310 00101$:
                           1311 ;	../Initial/src/lib/usb_common.c:259: SUDPTRH = MSB (current_device_descr);
   02A6 AA*02              1312 	mov	r2,_current_device_descr
   02A8 AB*03              1313 	mov	r3,(_current_device_descr + 1)
   02AA 90 E6 B3           1314 	mov	dptr,#_SUDPTRH
   02AD EB                 1315 	mov	a,r3
   02AE F0                 1316 	movx	@dptr,a
                           1317 ;	../Initial/src/lib/usb_common.c:260: SUDPTRL = LSB (current_device_descr);
   02AF 90 E6 B4           1318 	mov	dptr,#_SUDPTRL
   02B2 EA                 1319 	mov	a,r2
   02B3 F0                 1320 	movx	@dptr,a
                           1321 ;	../Initial/src/lib/usb_common.c:261: break;
                           1322 ;	../Initial/src/lib/usb_common.c:263: case DT_DEVQUAL:
   02B4 22                 1323 	ret
   02B5                    1324 00102$:
                           1325 ;	../Initial/src/lib/usb_common.c:264: SUDPTRH = MSB (current_devqual_descr);
   02B5 AA*04              1326 	mov	r2,_current_devqual_descr
   02B7 AB*05              1327 	mov	r3,(_current_devqual_descr + 1)
   02B9 90 E6 B3           1328 	mov	dptr,#_SUDPTRH
   02BC EB                 1329 	mov	a,r3
   02BD F0                 1330 	movx	@dptr,a
                           1331 ;	../Initial/src/lib/usb_common.c:265: SUDPTRL = LSB (current_devqual_descr);
   02BE 90 E6 B4           1332 	mov	dptr,#_SUDPTRL
   02C1 EA                 1333 	mov	a,r2
   02C2 F0                 1334 	movx	@dptr,a
                           1335 ;	../Initial/src/lib/usb_common.c:266: break;
                           1336 ;	../Initial/src/lib/usb_common.c:270: fx2_stall_ep0 ();
   02C3 22                 1337 	ret
   02C4                    1338 00105$:
                           1339 ;	../Initial/src/lib/usb_common.c:273: SUDPTRH = MSB (current_config_descr);
   02C4 AA*06              1340 	mov	r2,_current_config_descr
   02C6 AB*07              1341 	mov	r3,(_current_config_descr + 1)
   02C8 90 E6 B3           1342 	mov	dptr,#_SUDPTRH
   02CB EB                 1343 	mov	a,r3
   02CC F0                 1344 	movx	@dptr,a
                           1345 ;	../Initial/src/lib/usb_common.c:274: SUDPTRL = LSB (current_config_descr);
   02CD 90 E6 B4           1346 	mov	dptr,#_SUDPTRL
   02D0 EA                 1347 	mov	a,r2
   02D1 F0                 1348 	movx	@dptr,a
                           1349 ;	../Initial/src/lib/usb_common.c:276: break;
                           1350 ;	../Initial/src/lib/usb_common.c:280: fx2_stall_ep0 ();
   02D2 22                 1351 	ret
   02D3                    1352 00110$:
                           1353 ;	../Initial/src/lib/usb_common.c:283: SUDPTRH = MSB (other_config_descr);
   02D3 AA*08              1354 	mov	r2,_other_config_descr
   02D5 AB*09              1355 	mov	r3,(_other_config_descr + 1)
   02D7 90 E6 B3           1356 	mov	dptr,#_SUDPTRH
   02DA EB                 1357 	mov	a,r3
   02DB F0                 1358 	movx	@dptr,a
                           1359 ;	../Initial/src/lib/usb_common.c:284: SUDPTRL = LSB (other_config_descr);
   02DC 90 E6 B4           1360 	mov	dptr,#_SUDPTRL
   02DF EA                 1361 	mov	a,r2
   02E0 F0                 1362 	movx	@dptr,a
                           1363 ;	../Initial/src/lib/usb_common.c:286: break;
                           1364 ;	../Initial/src/lib/usb_common.c:288: case DT_STRING:
   02E1 22                 1365 	ret
   02E2                    1366 00113$:
                           1367 ;	../Initial/src/lib/usb_common.c:289: if (wValueL >= nstring_descriptors)
   02E2 90 E6 BA           1368 	mov	dptr,#(_SETUPDAT + 0x0002)
   02E5 E0                 1369 	movx	a,@dptr
   02E6 FA                 1370 	mov	r2,a
   02E7 90s00r00           1371 	mov	dptr,#_nstring_descriptors
   02EA E0                 1372 	movx	a,@dptr
   02EB FB                 1373 	mov	r3,a
   02EC C3                 1374 	clr	c
   02ED EA                 1375 	mov	a,r2
   02EE 9B                 1376 	subb	a,r3
   02EF 40 03              1377 	jc	00115$
                           1378 ;	../Initial/src/lib/usb_common.c:290: fx2_stall_ep0 ();
   02F1 02s00r00           1379 	ljmp	_fx2_stall_ep0
   02F4                    1380 00115$:
                           1381 ;	../Initial/src/lib/usb_common.c:293: xdata char *p = string_descriptors[wValueL];
   02F4 90 E6 BA           1382 	mov	dptr,#(_SETUPDAT + 0x0002)
   02F7 E0                 1383 	movx	a,@dptr
   02F8 75 F0 02           1384 	mov	b,#0x02
   02FB A4                 1385 	mul	ab
   02FC 24r00              1386 	add	a,#_string_descriptors
   02FE F5 82              1387 	mov	dpl,a
   0300 74s00              1388 	mov	a,#(_string_descriptors >> 8)
   0302 35 F0              1389 	addc	a,b
   0304 F5 83              1390 	mov	dph,a
   0306 E0                 1391 	movx	a,@dptr
   0307 FA                 1392 	mov	r2,a
   0308 A3                 1393 	inc	dptr
   0309 E0                 1394 	movx	a,@dptr
                           1395 ;	../Initial/src/lib/usb_common.c:294: SUDPTRH = MSB (p);
   030A 90 E6 B3           1396 	mov	dptr,#_SUDPTRH
   030D F0                 1397 	movx	@dptr,a
                           1398 ;	../Initial/src/lib/usb_common.c:295: SUDPTRL = LSB (p);
   030E 90 E6 B4           1399 	mov	dptr,#_SUDPTRL
   0311 EA                 1400 	mov	a,r2
   0312 F0                 1401 	movx	@dptr,a
                           1402 ;	../Initial/src/lib/usb_common.c:297: break;
                           1403 ;	../Initial/src/lib/usb_common.c:299: default:
   0313 22                 1404 	ret
   0314                    1405 00117$:
                           1406 ;	../Initial/src/lib/usb_common.c:300: fx2_stall_ep0 ();	// invalid request
                           1407 ;	../Initial/src/lib/usb_common.c:302: }
   0314 02s00r00           1408 	ljmp	_fx2_stall_ep0
                           1409 ;------------------------------------------------------------
                           1410 ;Allocation info for local variables in function 'usb_handle_IN_std_requests'
                           1411 ;------------------------------------------------------------
                           1412 ;------------------------------------------------------------
                           1413 ;	../Initial/src/lib/usb_common.c:305: void usb_handle_IN_std_requests(void)
                           1414 ;	-----------------------------------------
                           1415 ;	 function usb_handle_IN_std_requests
                           1416 ;	-----------------------------------------
   0317                    1417 _usb_handle_IN_std_requests:
                           1418 ;	../Initial/src/lib/usb_common.c:307: switch (bRequest)
   0317 90 E6 B9           1419 	mov	dptr,#(_SETUPDAT + 0x0001)
   031A E0                 1420 	movx	a,@dptr
   031B FA                 1421 	mov	r2,a
   031C 60 36              1422 	jz	00104$
   031E BA 06 02           1423 	cjne	r2,#0x06,00115$
   0321 80 2E              1424 	sjmp	00103$
   0323                    1425 00115$:
   0323 BA 08 02           1426 	cjne	r2,#0x08,00116$
   0326 80 05              1427 	sjmp	00101$
   0328                    1428 00116$:
                           1429 ;	../Initial/src/lib/usb_common.c:310: case RQ_GET_CONFIG:
   0328 BA 0A 2C           1430 	cjne	r2,#0x0A,00106$
   032B 80 12              1431 	sjmp	00102$
   032D                    1432 00101$:
                           1433 ;	../Initial/src/lib/usb_common.c:311: EP0BUF[0] = _usb_config;	// FIXME app should handle
   032D 90 E7 40           1434 	mov	dptr,#_EP0BUF
   0330 E5*00              1435 	mov	a,__usb_config
   0332 F0                 1436 	movx	@dptr,a
                           1437 ;	../Initial/src/lib/usb_common.c:312: EP0BCH = 0;
   0333 90 E6 8A           1438 	mov	dptr,#_EP0BCH
   0336 E4                 1439 	clr	a
   0337 F0                 1440 	movx	@dptr,a
                           1441 ;	../Initial/src/lib/usb_common.c:313: EP0BCL = 1;
   0338 90 E6 8B           1442 	mov	dptr,#_EP0BCL
   033B 74 01              1443 	mov	a,#0x01
   033D F0                 1444 	movx	@dptr,a
                           1445 ;	../Initial/src/lib/usb_common.c:314: break;
                           1446 ;	../Initial/src/lib/usb_common.c:316: case RQ_GET_INTERFACE:
   033E 22                 1447 	ret
   033F                    1448 00102$:
                           1449 ;	../Initial/src/lib/usb_common.c:317: EP0BUF[0] = _usb_alt_setting;	// FIXME app should handle
   033F 90 E7 40           1450 	mov	dptr,#_EP0BUF
   0342 E5*01              1451 	mov	a,__usb_alt_setting
   0344 F0                 1452 	movx	@dptr,a
                           1453 ;	../Initial/src/lib/usb_common.c:318: EP0BCH = 0;
   0345 90 E6 8A           1454 	mov	dptr,#_EP0BCH
   0348 E4                 1455 	clr	a
   0349 F0                 1456 	movx	@dptr,a
                           1457 ;	../Initial/src/lib/usb_common.c:319: EP0BCL = 1;
   034A 90 E6 8B           1458 	mov	dptr,#_EP0BCL
   034D 74 01              1459 	mov	a,#0x01
   034F F0                 1460 	movx	@dptr,a
                           1461 ;	../Initial/src/lib/usb_common.c:320: break;
                           1462 ;	../Initial/src/lib/usb_common.c:322: case RQ_GET_DESCR:
   0350 22                 1463 	ret
   0351                    1464 00103$:
                           1465 ;	../Initial/src/lib/usb_common.c:323: usb_handle_get_descriptor();
                           1466 ;	../Initial/src/lib/usb_common.c:324: break;
                           1467 ;	../Initial/src/lib/usb_common.c:326: case RQ_GET_STATUS:
   0351 02s02r85           1468 	ljmp	_usb_handle_get_descriptor
   0354                    1469 00104$:
                           1470 ;	../Initial/src/lib/usb_common.c:327: usb_handle_get_status();
                           1471 ;	../Initial/src/lib/usb_common.c:328: break;
                           1472 ;	../Initial/src/lib/usb_common.c:331: default:
   0354 02s02r0E           1473 	ljmp	_usb_handle_get_status
   0357                    1474 00106$:
                           1475 ;	../Initial/src/lib/usb_common.c:332: fx2_stall_ep0 ();
                           1476 ;	../Initial/src/lib/usb_common.c:334: }
   0357 02s00r00           1477 	ljmp	_fx2_stall_ep0
                           1478 ;------------------------------------------------------------
                           1479 ;Allocation info for local variables in function 'usb_handle_OUT_std_requests'
                           1480 ;------------------------------------------------------------
                           1481 ;------------------------------------------------------------
                           1482 ;	../Initial/src/lib/usb_common.c:337: void usb_handle_OUT_std_requests(void)
                           1483 ;	-----------------------------------------
                           1484 ;	 function usb_handle_OUT_std_requests
                           1485 ;	-----------------------------------------
   035A                    1486 _usb_handle_OUT_std_requests:
                           1487 ;	../Initial/src/lib/usb_common.c:339: switch (bRequest)
   035A 90 E6 B9           1488 	mov	dptr,#(_SETUPDAT + 0x0001)
   035D E0                 1489 	movx	a,@dptr
   035E FA                 1490 	mov	r2,a
   035F BA 01 02           1491 	cjne	r2,#0x01,00117$
   0362 80 27              1492 	sjmp	00103$
   0364                    1493 00117$:
   0364 BA 03 02           1494 	cjne	r2,#0x03,00118$
   0367 80 25              1495 	sjmp	00104$
   0369                    1496 00118$:
   0369 BA 05 02           1497 	cjne	r2,#0x05,00119$
   036C 80 23              1498 	sjmp	00107$
   036E                    1499 00119$:
   036E BA 07 02           1500 	cjne	r2,#0x07,00120$
   0371 80 1E              1501 	sjmp	00107$
   0373                    1502 00120$:
   0373 BA 09 02           1503 	cjne	r2,#0x09,00121$
   0376 80 05              1504 	sjmp	00101$
   0378                    1505 00121$:
                           1506 ;	../Initial/src/lib/usb_common.c:342: case RQ_SET_CONFIG:
   0378 BA 0B 16           1507 	cjne	r2,#0x0B,00107$
   037B 80 07              1508 	sjmp	00102$
   037D                    1509 00101$:
                           1510 ;	../Initial/src/lib/usb_common.c:343: _usb_config = wValueL;		// FIXME app should handle
   037D 90 E6 BA           1511 	mov	dptr,#(_SETUPDAT + 0x0002)
   0380 E0                 1512 	movx	a,@dptr
   0381 F5*00              1513 	mov	__usb_config,a
                           1514 ;	../Initial/src/lib/usb_common.c:344: break;
                           1515 ;	../Initial/src/lib/usb_common.c:346: case RQ_SET_INTERFACE:
   0383 22                 1516 	ret
   0384                    1517 00102$:
                           1518 ;	../Initial/src/lib/usb_common.c:347: _usb_alt_setting = wValueL;	// FIXME app should handle
   0384 90 E6 BA           1519 	mov	dptr,#(_SETUPDAT + 0x0002)
   0387 E0                 1520 	movx	a,@dptr
   0388 F5*01              1521 	mov	__usb_alt_setting,a
                           1522 ;	../Initial/src/lib/usb_common.c:348: break;
                           1523 ;	../Initial/src/lib/usb_common.c:350: case RQ_CLEAR_FEATURE:
   038A 22                 1524 	ret
   038B                    1525 00103$:
                           1526 ;	../Initial/src/lib/usb_common.c:351: usb_handle_clear_feature();
                           1527 ;	../Initial/src/lib/usb_common.c:352: break;
                           1528 ;	../Initial/src/lib/usb_common.c:354: case RQ_SET_FEATURE:
   038B 02s01rBB           1529 	ljmp	_usb_handle_clear_feature
   038E                    1530 00104$:
                           1531 ;	../Initial/src/lib/usb_common.c:355: usb_handle_set_feature();
                           1532 ;	../Initial/src/lib/usb_common.c:356: break;
                           1533 ;	../Initial/src/lib/usb_common.c:360: default:
   038E 02s01r63           1534 	ljmp	_usb_handle_set_feature
   0391                    1535 00107$:
                           1536 ;	../Initial/src/lib/usb_common.c:361: fx2_stall_ep0 ();
                           1537 ;	../Initial/src/lib/usb_common.c:362: }
   0391 02s00r00           1538 	ljmp	_fx2_stall_ep0
                           1539 ;------------------------------------------------------------
                           1540 ;Allocation info for local variables in function 'usb_handle_std_requests'
                           1541 ;------------------------------------------------------------
                           1542 ;------------------------------------------------------------
                           1543 ;	../Initial/src/lib/usb_common.c:365: void usb_handle_std_requests(void)
                           1544 ;	-----------------------------------------
                           1545 ;	 function usb_handle_std_requests
                           1546 ;	-----------------------------------------
   0394                    1547 _usb_handle_std_requests:
                           1548 ;	../Initial/src/lib/usb_common.c:367: if ((bRequestType & bmRT_DIR_MASK) == bmRT_DIR_IN)
   0394 90 E6 B8           1549 	mov	dptr,#_SETUPDAT
   0397 E0                 1550 	movx	a,@dptr
   0398 FA                 1551 	mov	r2,a
   0399 53 02 80           1552 	anl	ar2,#0x80
   039C BA 80 03           1553 	cjne	r2,#0x80,00102$
                           1554 ;	../Initial/src/lib/usb_common.c:369: usb_handle_IN_std_requests();
   039F 02s03r17           1555 	ljmp	_usb_handle_IN_std_requests
   03A2                    1556 00102$:
                           1557 ;	../Initial/src/lib/usb_common.c:372: usb_handle_OUT_std_requests();
   03A2 02s03r5A           1558 	ljmp	_usb_handle_OUT_std_requests
                           1559 ;------------------------------------------------------------
                           1560 ;Allocation info for local variables in function 'usb_handle_setup_packet'
                           1561 ;------------------------------------------------------------
                           1562 ;------------------------------------------------------------
                           1563 ;	../Initial/src/lib/usb_common.c:376: usb_handle_setup_packet (void)
                           1564 ;	-----------------------------------------
                           1565 ;	 function usb_handle_setup_packet
                           1566 ;	-----------------------------------------
   03A5                    1567 _usb_handle_setup_packet:
                           1568 ;	../Initial/src/lib/usb_common.c:378: _usb_got_SUDAV = 0;
   03A5 C2*00              1569 	clr	__usb_got_SUDAV
                           1570 ;	../Initial/src/lib/usb_common.c:382: switch (bRequestType & bmRT_TYPE_MASK)
   03A7 90 E6 B8           1571 	mov	dptr,#_SETUPDAT
   03AA E0                 1572 	movx	a,@dptr
   03AB FA                 1573 	mov	r2,a
   03AC 53 02 60           1574 	anl	ar2,#0x60
   03AF BA 00 02           1575 	cjne	r2,#0x00,00115$
   03B2 80 1E              1576 	sjmp	00106$
   03B4                    1577 00115$:
   03B4 BA 20 02           1578 	cjne	r2,#0x20,00116$
   03B7 80 08              1579 	sjmp	00102$
   03B9                    1580 00116$:
   03B9 BA 40 02           1581 	cjne	r2,#0x40,00117$
   03BC 80 08              1582 	sjmp	00103$
   03BE                    1583 00117$:
   03BE BA 60 16           1584 	cjne	r2,#0x60,00107$
                           1585 ;	../Initial/src/lib/usb_common.c:386: case bmRT_TYPE_RESERVED:
   03C1                    1586 00102$:
                           1587 ;	../Initial/src/lib/usb_common.c:387: fx2_stall_ep0 ();		// we don't handle these.  indicate error
   03C1 12s00r00           1588 	lcall	_fx2_stall_ep0
                           1589 ;	../Initial/src/lib/usb_common.c:388: break;
                           1590 ;	../Initial/src/lib/usb_common.c:390: case bmRT_TYPE_VENDOR:
   03C4 80 14              1591 	sjmp	00108$
   03C6                    1592 00103$:
                           1593 ;	../Initial/src/lib/usb_common.c:392: if (!app_vendor_cmd ())
   03C6 12s00r00           1594 	lcall	_app_vendor_cmd
   03C9 E5 82              1595 	mov	a,dpl
   03CB 70 0D              1596 	jnz	00108$
                           1597 ;	../Initial/src/lib/usb_common.c:393: fx2_stall_ep0 ();
   03CD 12s00r00           1598 	lcall	_fx2_stall_ep0
                           1599 ;	../Initial/src/lib/usb_common.c:394: break;
                           1600 ;	../Initial/src/lib/usb_common.c:396: case bmRT_TYPE_STD:
   03D0 80 08              1601 	sjmp	00108$
   03D2                    1602 00106$:
                           1603 ;	../Initial/src/lib/usb_common.c:398: usb_handle_std_requests();
   03D2 12s03r94           1604 	lcall	_usb_handle_std_requests
                           1605 ;	../Initial/src/lib/usb_common.c:399: break;
                           1606 ;	../Initial/src/lib/usb_common.c:401: default:
   03D5 80 03              1607 	sjmp	00108$
   03D7                    1608 00107$:
                           1609 ;	../Initial/src/lib/usb_common.c:402: fx2_stall_ep0 ();		// indicate error
   03D7 12s00r00           1610 	lcall	_fx2_stall_ep0
                           1611 ;	../Initial/src/lib/usb_common.c:405: }
   03DA                    1612 00108$:
                           1613 ;	../Initial/src/lib/usb_common.c:408: EP0CS |= bmHSNAK;
   03DA 90 E6 A0           1614 	mov	dptr,#_EP0CS
   03DD E0                 1615 	movx	a,@dptr
   03DE 44 80              1616 	orl	a,#0x80
   03E0 F0                 1617 	movx	@dptr,a
   03E1 22                 1618 	ret
                           1619 	.area CSEG    (CODE)
                           1620 	.area CONST   (CODE)
                           1621 	.area CABS    (ABS,CODE)
