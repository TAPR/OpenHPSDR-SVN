                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Mon Jan 04 09:33:52 2010
                              5 ;--------------------------------------------------------
                              6 	.module board_specific
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _init_board
                             13 	.globl _bitALTERA_DCLK
                             14 	.globl _bitALTERA_DATA0
                             15 	.globl _bitS_IN
                             16 	.globl _bitS_OUT
                             17 	.globl _bitS_CLK
                             18 	.globl _EIPX6
                             19 	.globl _EIPX5
                             20 	.globl _EIPX4
                             21 	.globl _PI2C
                             22 	.globl _PUSB
                             23 	.globl _EIEX6
                             24 	.globl _EIEX5
                             25 	.globl _EIEX4
                             26 	.globl _EI2C
                             27 	.globl _EIUSB
                             28 	.globl _SMOD1
                             29 	.globl _ERESI
                             30 	.globl _RESI
                             31 	.globl _INT6
                             32 	.globl _CY
                             33 	.globl _AC
                             34 	.globl _F0
                             35 	.globl _RS1
                             36 	.globl _RS0
                             37 	.globl _OV
                             38 	.globl _FL
                             39 	.globl _P
                             40 	.globl _TF2
                             41 	.globl _EXF2
                             42 	.globl _RCLK
                             43 	.globl _TCLK
                             44 	.globl _EXEN2
                             45 	.globl _TR2
                             46 	.globl _C_T2
                             47 	.globl _CP_RL2
                             48 	.globl _SM01
                             49 	.globl _SM11
                             50 	.globl _SM21
                             51 	.globl _REN1
                             52 	.globl _TB81
                             53 	.globl _RB81
                             54 	.globl _TI1
                             55 	.globl _RI1
                             56 	.globl _PS1
                             57 	.globl _PT2
                             58 	.globl _PS0
                             59 	.globl _PT1
                             60 	.globl _PX1
                             61 	.globl _PT0
                             62 	.globl _PX0
                             63 	.globl _EA
                             64 	.globl _ES1
                             65 	.globl _ET2
                             66 	.globl _ES0
                             67 	.globl _ET1
                             68 	.globl _EX1
                             69 	.globl _ET0
                             70 	.globl _EX0
                             71 	.globl _SM0
                             72 	.globl _SM1
                             73 	.globl _SM2
                             74 	.globl _REN
                             75 	.globl _TB8
                             76 	.globl _RB8
                             77 	.globl _TI
                             78 	.globl _RI
                             79 	.globl _TF1
                             80 	.globl _TR1
                             81 	.globl _TF0
                             82 	.globl _TR0
                             83 	.globl _IE1
                             84 	.globl _IT1
                             85 	.globl _IE0
                             86 	.globl _IT0
                             87 	.globl _SEL
                             88 	.globl _EIP
                             89 	.globl _B
                             90 	.globl _EIE
                             91 	.globl _ACC
                             92 	.globl _EICON
                             93 	.globl _PSW
                             94 	.globl _TH2
                             95 	.globl _TL2
                             96 	.globl _RCAP2H
                             97 	.globl _RCAP2L
                             98 	.globl _T2CON
                             99 	.globl _SBUF1
                            100 	.globl _SCON1
                            101 	.globl _GPIFSGLDATLNOX
                            102 	.globl _GPIFSGLDATLX
                            103 	.globl _GPIFSGLDATH
                            104 	.globl _GPIFTRIG
                            105 	.globl _EP01STAT
                            106 	.globl _IP
                            107 	.globl _OEE
                            108 	.globl _OED
                            109 	.globl _OEC
                            110 	.globl _OEB
                            111 	.globl _OEA
                            112 	.globl _IOE
                            113 	.globl _IOD
                            114 	.globl _AUTOPTRSETUP
                            115 	.globl _EP68FIFOFLGS
                            116 	.globl _EP24FIFOFLGS
                            117 	.globl _EP2468STAT
                            118 	.globl _IE
                            119 	.globl _INT4CLR
                            120 	.globl _INT2CLR
                            121 	.globl _IOC
                            122 	.globl _AUTODAT2
                            123 	.globl _AUTOPTRL2
                            124 	.globl _AUTOPTRH2
                            125 	.globl _AUTODAT1
                            126 	.globl _APTR1L
                            127 	.globl _APTR1H
                            128 	.globl _SBUF0
                            129 	.globl _SCON0
                            130 	.globl _MPAGE
                            131 	.globl _EXIF
                            132 	.globl _IOB
                            133 	.globl _CKCON
                            134 	.globl _TH1
                            135 	.globl _TH0
                            136 	.globl _TL1
                            137 	.globl _TL0
                            138 	.globl _TMOD
                            139 	.globl _TCON
                            140 	.globl _PCON
                            141 	.globl _DPS
                            142 	.globl _DPH1
                            143 	.globl _DPL1
                            144 	.globl _DPH
                            145 	.globl _DPL
                            146 	.globl _SP
                            147 	.globl _IOA
                            148 	.globl _EP8FIFOBUF
                            149 	.globl _EP6FIFOBUF
                            150 	.globl _EP4FIFOBUF
                            151 	.globl _EP2FIFOBUF
                            152 	.globl _EP1INBUF
                            153 	.globl _EP1OUTBUF
                            154 	.globl _EP0BUF
                            155 	.globl _CT4
                            156 	.globl _CT3
                            157 	.globl _CT2
                            158 	.globl _CT1
                            159 	.globl _USBTEST
                            160 	.globl _TESTCFG
                            161 	.globl _DBUG
                            162 	.globl _UDMACRCQUAL
                            163 	.globl _UDMACRCL
                            164 	.globl _UDMACRCH
                            165 	.globl _GPIFHOLDAMOUNT
                            166 	.globl _FLOWSTBHPERIOD
                            167 	.globl _FLOWSTBEDGE
                            168 	.globl _FLOWSTB
                            169 	.globl _FLOWHOLDOFF
                            170 	.globl _FLOWEQ1CTL
                            171 	.globl _FLOWEQ0CTL
                            172 	.globl _FLOWLOGIC
                            173 	.globl _FLOWSTATE
                            174 	.globl _GPIFABORT
                            175 	.globl _GPIFREADYSTAT
                            176 	.globl _GPIFREADYCFG
                            177 	.globl _XGPIFSGLDATLNOX
                            178 	.globl _XGPIFSGLDATLX
                            179 	.globl _XGPIFSGLDATH
                            180 	.globl _EP8GPIFTRIG
                            181 	.globl _EP8GPIFPFSTOP
                            182 	.globl _EP8GPIFFLGSEL
                            183 	.globl _EP6GPIFTRIG
                            184 	.globl _EP6GPIFPFSTOP
                            185 	.globl _EP6GPIFFLGSEL
                            186 	.globl _EP4GPIFTRIG
                            187 	.globl _EP4GPIFPFSTOP
                            188 	.globl _EP4GPIFFLGSEL
                            189 	.globl _EP2GPIFTRIG
                            190 	.globl _EP2GPIFPFSTOP
                            191 	.globl _EP2GPIFFLGSEL
                            192 	.globl _GPIFTCB0
                            193 	.globl _GPIFTCB1
                            194 	.globl _GPIFTCB2
                            195 	.globl _GPIFTCB3
                            196 	.globl _GPIFADRL
                            197 	.globl _GPIFADRH
                            198 	.globl _GPIFCTLCFG
                            199 	.globl _GPIFIDLECTL
                            200 	.globl _GPIFIDLECS
                            201 	.globl _GPIFWFSELECT
                            202 	.globl _SETUPDAT
                            203 	.globl _SUDPTRCTL
                            204 	.globl _SUDPTRL
                            205 	.globl _SUDPTRH
                            206 	.globl _EP8FIFOBCL
                            207 	.globl _EP8FIFOBCH
                            208 	.globl _EP6FIFOBCL
                            209 	.globl _EP6FIFOBCH
                            210 	.globl _EP4FIFOBCL
                            211 	.globl _EP4FIFOBCH
                            212 	.globl _EP2FIFOBCL
                            213 	.globl _EP2FIFOBCH
                            214 	.globl _EP8FIFOFLGS
                            215 	.globl _EP6FIFOFLGS
                            216 	.globl _EP4FIFOFLGS
                            217 	.globl _EP2FIFOFLGS
                            218 	.globl _EP8CS
                            219 	.globl _EP6CS
                            220 	.globl _EP4CS
                            221 	.globl _EP2CS
                            222 	.globl _EP1INCS
                            223 	.globl _EP1OUTCS
                            224 	.globl _EP0CS
                            225 	.globl _EP8BCL
                            226 	.globl _EP8BCH
                            227 	.globl _EP6BCL
                            228 	.globl _EP6BCH
                            229 	.globl _EP4BCL
                            230 	.globl _EP4BCH
                            231 	.globl _EP2BCL
                            232 	.globl _EP2BCH
                            233 	.globl _EP1INBC
                            234 	.globl _EP1OUTBC
                            235 	.globl _EP0BCL
                            236 	.globl _EP0BCH
                            237 	.globl _FNADDR
                            238 	.globl _MICROFRAME
                            239 	.globl _USBFRAMEL
                            240 	.globl _USBFRAMEH
                            241 	.globl _TOGCTL
                            242 	.globl _WAKEUPCS
                            243 	.globl _SUSPEND
                            244 	.globl _USBCS
                            245 	.globl _XAUTODAT2
                            246 	.globl _XAUTODAT1
                            247 	.globl _I2CTL
                            248 	.globl _I2DAT
                            249 	.globl _I2CS
                            250 	.globl _PORTECFG
                            251 	.globl _PORTCCFG
                            252 	.globl _PORTACFG
                            253 	.globl _INTSETUP
                            254 	.globl _INT4IVEC
                            255 	.globl _INT2IVEC
                            256 	.globl _CLRERRCNT
                            257 	.globl _ERRCNTLIM
                            258 	.globl _USBERRIRQ
                            259 	.globl _USBERRIE
                            260 	.globl _GPIFIRQ
                            261 	.globl _GPIFIE
                            262 	.globl _EPIRQ
                            263 	.globl _EPIE
                            264 	.globl _USBIRQ
                            265 	.globl _USBIE
                            266 	.globl _NAKIRQ
                            267 	.globl _NAKIE
                            268 	.globl _IBNIRQ
                            269 	.globl _IBNIE
                            270 	.globl _EP8FIFOIRQ
                            271 	.globl _EP8FIFOIE
                            272 	.globl _EP6FIFOIRQ
                            273 	.globl _EP6FIFOIE
                            274 	.globl _EP4FIFOIRQ
                            275 	.globl _EP4FIFOIE
                            276 	.globl _EP2FIFOIRQ
                            277 	.globl _EP2FIFOIE
                            278 	.globl _OUTPKTEND
                            279 	.globl _INPKTEND
                            280 	.globl _EP8ISOINPKTS
                            281 	.globl _EP6ISOINPKTS
                            282 	.globl _EP4ISOINPKTS
                            283 	.globl _EP2ISOINPKTS
                            284 	.globl _EP8FIFOPFL
                            285 	.globl _EP8FIFOPFH
                            286 	.globl _EP6FIFOPFL
                            287 	.globl _EP6FIFOPFH
                            288 	.globl _EP4FIFOPFL
                            289 	.globl _EP4FIFOPFH
                            290 	.globl _EP2FIFOPFL
                            291 	.globl _EP2FIFOPFH
                            292 	.globl _EP8AUTOINLENL
                            293 	.globl _EP8AUTOINLENH
                            294 	.globl _EP6AUTOINLENL
                            295 	.globl _EP6AUTOINLENH
                            296 	.globl _EP4AUTOINLENL
                            297 	.globl _EP4AUTOINLENH
                            298 	.globl _EP2AUTOINLENL
                            299 	.globl _EP2AUTOINLENH
                            300 	.globl _EP8FIFOCFG
                            301 	.globl _EP6FIFOCFG
                            302 	.globl _EP4FIFOCFG
                            303 	.globl _EP2FIFOCFG
                            304 	.globl _EP8CFG
                            305 	.globl _EP6CFG
                            306 	.globl _EP4CFG
                            307 	.globl _EP2CFG
                            308 	.globl _EP1INCFG
                            309 	.globl _EP1OUTCFG
                            310 	.globl _REVCTL
                            311 	.globl _REVID
                            312 	.globl _FIFOPINPOLAR
                            313 	.globl _UART230
                            314 	.globl _BPADDRL
                            315 	.globl _BPADDRH
                            316 	.globl _BREAKPT
                            317 	.globl _FIFORESET
                            318 	.globl _PINFLAGSCD
                            319 	.globl _PINFLAGSAB
                            320 	.globl _IFCONFIG
                            321 	.globl _CPUCS
                            322 	.globl _RES_WAVEDATA_END
                            323 	.globl _GPIF_WAVE_DATA
                            324 	.globl _putchar
                            325 	.globl _putstr
                            326 	.globl _set_led_0
                            327 	.globl _set_led_1
                            328 	.globl _toggle_led_0
                            329 	.globl _toggle_led_1
                            330 ;--------------------------------------------------------
                            331 ; special function registers
                            332 ;--------------------------------------------------------
                            333 	.area RSEG    (DATA)
                    0080    334 _IOA	=	0x0080
                    0081    335 _SP	=	0x0081
                    0082    336 _DPL	=	0x0082
                    0083    337 _DPH	=	0x0083
                    0084    338 _DPL1	=	0x0084
                    0085    339 _DPH1	=	0x0085
                    0086    340 _DPS	=	0x0086
                    0087    341 _PCON	=	0x0087
                    0088    342 _TCON	=	0x0088
                    0089    343 _TMOD	=	0x0089
                    008A    344 _TL0	=	0x008a
                    008B    345 _TL1	=	0x008b
                    008C    346 _TH0	=	0x008c
                    008D    347 _TH1	=	0x008d
                    008E    348 _CKCON	=	0x008e
                    0090    349 _IOB	=	0x0090
                    0091    350 _EXIF	=	0x0091
                    0092    351 _MPAGE	=	0x0092
                    0098    352 _SCON0	=	0x0098
                    0099    353 _SBUF0	=	0x0099
                    009A    354 _APTR1H	=	0x009a
                    009B    355 _APTR1L	=	0x009b
                    009C    356 _AUTODAT1	=	0x009c
                    009D    357 _AUTOPTRH2	=	0x009d
                    009E    358 _AUTOPTRL2	=	0x009e
                    009F    359 _AUTODAT2	=	0x009f
                    00A0    360 _IOC	=	0x00a0
                    00A1    361 _INT2CLR	=	0x00a1
                    00A2    362 _INT4CLR	=	0x00a2
                    00A8    363 _IE	=	0x00a8
                    00AA    364 _EP2468STAT	=	0x00aa
                    00AB    365 _EP24FIFOFLGS	=	0x00ab
                    00AC    366 _EP68FIFOFLGS	=	0x00ac
                    00AF    367 _AUTOPTRSETUP	=	0x00af
                    00B0    368 _IOD	=	0x00b0
                    00B1    369 _IOE	=	0x00b1
                    00B2    370 _OEA	=	0x00b2
                    00B3    371 _OEB	=	0x00b3
                    00B4    372 _OEC	=	0x00b4
                    00B5    373 _OED	=	0x00b5
                    00B6    374 _OEE	=	0x00b6
                    00B8    375 _IP	=	0x00b8
                    00BA    376 _EP01STAT	=	0x00ba
                    00BB    377 _GPIFTRIG	=	0x00bb
                    00BD    378 _GPIFSGLDATH	=	0x00bd
                    00BE    379 _GPIFSGLDATLX	=	0x00be
                    00BF    380 _GPIFSGLDATLNOX	=	0x00bf
                    00C0    381 _SCON1	=	0x00c0
                    00C1    382 _SBUF1	=	0x00c1
                    00C8    383 _T2CON	=	0x00c8
                    00CA    384 _RCAP2L	=	0x00ca
                    00CB    385 _RCAP2H	=	0x00cb
                    00CC    386 _TL2	=	0x00cc
                    00CD    387 _TH2	=	0x00cd
                    00D0    388 _PSW	=	0x00d0
                    00D8    389 _EICON	=	0x00d8
                    00E0    390 _ACC	=	0x00e0
                    00E8    391 _EIE	=	0x00e8
                    00F0    392 _B	=	0x00f0
                    00F8    393 _EIP	=	0x00f8
                            394 ;--------------------------------------------------------
                            395 ; special function bits
                            396 ;--------------------------------------------------------
                            397 	.area RSEG    (DATA)
                    0086    398 _SEL	=	0x0086
                    0088    399 _IT0	=	0x0088
                    0089    400 _IE0	=	0x0089
                    008A    401 _IT1	=	0x008a
                    008B    402 _IE1	=	0x008b
                    008C    403 _TR0	=	0x008c
                    008D    404 _TF0	=	0x008d
                    008E    405 _TR1	=	0x008e
                    008F    406 _TF1	=	0x008f
                    0098    407 _RI	=	0x0098
                    0099    408 _TI	=	0x0099
                    009A    409 _RB8	=	0x009a
                    009B    410 _TB8	=	0x009b
                    009C    411 _REN	=	0x009c
                    009D    412 _SM2	=	0x009d
                    009E    413 _SM1	=	0x009e
                    009F    414 _SM0	=	0x009f
                    00A8    415 _EX0	=	0x00a8
                    00A9    416 _ET0	=	0x00a9
                    00AA    417 _EX1	=	0x00aa
                    00AB    418 _ET1	=	0x00ab
                    00AC    419 _ES0	=	0x00ac
                    00AD    420 _ET2	=	0x00ad
                    00AE    421 _ES1	=	0x00ae
                    00AF    422 _EA	=	0x00af
                    00B8    423 _PX0	=	0x00b8
                    00B9    424 _PT0	=	0x00b9
                    00BA    425 _PX1	=	0x00ba
                    00BB    426 _PT1	=	0x00bb
                    00BC    427 _PS0	=	0x00bc
                    00BD    428 _PT2	=	0x00bd
                    00BE    429 _PS1	=	0x00be
                    00C0    430 _RI1	=	0x00c0
                    00C1    431 _TI1	=	0x00c1
                    00C2    432 _RB81	=	0x00c2
                    00C3    433 _TB81	=	0x00c3
                    00C4    434 _REN1	=	0x00c4
                    00C5    435 _SM21	=	0x00c5
                    00C6    436 _SM11	=	0x00c6
                    00C7    437 _SM01	=	0x00c7
                    00C8    438 _CP_RL2	=	0x00c8
                    00C9    439 _C_T2	=	0x00c9
                    00CA    440 _TR2	=	0x00ca
                    00CB    441 _EXEN2	=	0x00cb
                    00CC    442 _TCLK	=	0x00cc
                    00CD    443 _RCLK	=	0x00cd
                    00CE    444 _EXF2	=	0x00ce
                    00CF    445 _TF2	=	0x00cf
                    00D0    446 _P	=	0x00d0
                    00D1    447 _FL	=	0x00d1
                    00D2    448 _OV	=	0x00d2
                    00D3    449 _RS0	=	0x00d3
                    00D4    450 _RS1	=	0x00d4
                    00D5    451 _F0	=	0x00d5
                    00D6    452 _AC	=	0x00d6
                    00D7    453 _CY	=	0x00d7
                    00DB    454 _INT6	=	0x00db
                    00DC    455 _RESI	=	0x00dc
                    00DD    456 _ERESI	=	0x00dd
                    00DF    457 _SMOD1	=	0x00df
                    00E8    458 _EIUSB	=	0x00e8
                    00E9    459 _EI2C	=	0x00e9
                    00EA    460 _EIEX4	=	0x00ea
                    00EB    461 _EIEX5	=	0x00eb
                    00EC    462 _EIEX6	=	0x00ec
                    00F8    463 _PUSB	=	0x00f8
                    00F9    464 _PI2C	=	0x00f9
                    00FA    465 _EIPX4	=	0x00fa
                    00FB    466 _EIPX5	=	0x00fb
                    00FC    467 _EIPX6	=	0x00fc
                    0080    468 _bitS_CLK	=	0x0080
                    0081    469 _bitS_OUT	=	0x0081
                    0083    470 _bitS_IN	=	0x0083
                    00A0    471 _bitALTERA_DATA0	=	0x00a0
                    00A2    472 _bitALTERA_DCLK	=	0x00a2
                            473 ;--------------------------------------------------------
                            474 ; overlayable register banks
                            475 ;--------------------------------------------------------
                            476 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     477 	.ds 8
                            478 ;--------------------------------------------------------
                            479 ; internal ram data
                            480 ;--------------------------------------------------------
                            481 	.area DSEG    (DATA)
                            482 ;--------------------------------------------------------
                            483 ; overlayable items in internal ram 
                            484 ;--------------------------------------------------------
                            485 	.area	OSEG    (OVR,DATA)
                            486 	.area	OSEG    (OVR,DATA)
                            487 	.area	OSEG    (OVR,DATA)
                            488 ;--------------------------------------------------------
                            489 ; indirectly addressable internal ram data
                            490 ;--------------------------------------------------------
                            491 	.area ISEG    (DATA)
                            492 ;--------------------------------------------------------
                            493 ; absolute internal ram data
                            494 ;--------------------------------------------------------
                            495 	.area IABS    (ABS,DATA)
                            496 	.area IABS    (ABS,DATA)
                            497 ;--------------------------------------------------------
                            498 ; bit data
                            499 ;--------------------------------------------------------
                            500 	.area BSEG    (BIT)
                            501 ;--------------------------------------------------------
                            502 ; paged external ram data
                            503 ;--------------------------------------------------------
                            504 	.area PSEG    (PAG,XDATA)
                            505 ;--------------------------------------------------------
                            506 ; external ram data
                            507 ;--------------------------------------------------------
                            508 	.area XSEG    (XDATA)
                    E400    509 _GPIF_WAVE_DATA	=	0xe400
                    E480    510 _RES_WAVEDATA_END	=	0xe480
                    E600    511 _CPUCS	=	0xe600
                    E601    512 _IFCONFIG	=	0xe601
                    E602    513 _PINFLAGSAB	=	0xe602
                    E603    514 _PINFLAGSCD	=	0xe603
                    E604    515 _FIFORESET	=	0xe604
                    E605    516 _BREAKPT	=	0xe605
                    E606    517 _BPADDRH	=	0xe606
                    E607    518 _BPADDRL	=	0xe607
                    E608    519 _UART230	=	0xe608
                    E609    520 _FIFOPINPOLAR	=	0xe609
                    E60A    521 _REVID	=	0xe60a
                    E60B    522 _REVCTL	=	0xe60b
                    E610    523 _EP1OUTCFG	=	0xe610
                    E611    524 _EP1INCFG	=	0xe611
                    E612    525 _EP2CFG	=	0xe612
                    E613    526 _EP4CFG	=	0xe613
                    E614    527 _EP6CFG	=	0xe614
                    E615    528 _EP8CFG	=	0xe615
                    E618    529 _EP2FIFOCFG	=	0xe618
                    E619    530 _EP4FIFOCFG	=	0xe619
                    E61A    531 _EP6FIFOCFG	=	0xe61a
                    E61B    532 _EP8FIFOCFG	=	0xe61b
                    E620    533 _EP2AUTOINLENH	=	0xe620
                    E621    534 _EP2AUTOINLENL	=	0xe621
                    E622    535 _EP4AUTOINLENH	=	0xe622
                    E623    536 _EP4AUTOINLENL	=	0xe623
                    E624    537 _EP6AUTOINLENH	=	0xe624
                    E625    538 _EP6AUTOINLENL	=	0xe625
                    E626    539 _EP8AUTOINLENH	=	0xe626
                    E627    540 _EP8AUTOINLENL	=	0xe627
                    E630    541 _EP2FIFOPFH	=	0xe630
                    E631    542 _EP2FIFOPFL	=	0xe631
                    E632    543 _EP4FIFOPFH	=	0xe632
                    E633    544 _EP4FIFOPFL	=	0xe633
                    E634    545 _EP6FIFOPFH	=	0xe634
                    E635    546 _EP6FIFOPFL	=	0xe635
                    E636    547 _EP8FIFOPFH	=	0xe636
                    E637    548 _EP8FIFOPFL	=	0xe637
                    E640    549 _EP2ISOINPKTS	=	0xe640
                    E641    550 _EP4ISOINPKTS	=	0xe641
                    E642    551 _EP6ISOINPKTS	=	0xe642
                    E643    552 _EP8ISOINPKTS	=	0xe643
                    E648    553 _INPKTEND	=	0xe648
                    E649    554 _OUTPKTEND	=	0xe649
                    E650    555 _EP2FIFOIE	=	0xe650
                    E651    556 _EP2FIFOIRQ	=	0xe651
                    E652    557 _EP4FIFOIE	=	0xe652
                    E653    558 _EP4FIFOIRQ	=	0xe653
                    E654    559 _EP6FIFOIE	=	0xe654
                    E655    560 _EP6FIFOIRQ	=	0xe655
                    E656    561 _EP8FIFOIE	=	0xe656
                    E657    562 _EP8FIFOIRQ	=	0xe657
                    E658    563 _IBNIE	=	0xe658
                    E659    564 _IBNIRQ	=	0xe659
                    E65A    565 _NAKIE	=	0xe65a
                    E65B    566 _NAKIRQ	=	0xe65b
                    E65C    567 _USBIE	=	0xe65c
                    E65D    568 _USBIRQ	=	0xe65d
                    E65E    569 _EPIE	=	0xe65e
                    E65F    570 _EPIRQ	=	0xe65f
                    E660    571 _GPIFIE	=	0xe660
                    E661    572 _GPIFIRQ	=	0xe661
                    E662    573 _USBERRIE	=	0xe662
                    E663    574 _USBERRIRQ	=	0xe663
                    E664    575 _ERRCNTLIM	=	0xe664
                    E665    576 _CLRERRCNT	=	0xe665
                    E666    577 _INT2IVEC	=	0xe666
                    E667    578 _INT4IVEC	=	0xe667
                    E668    579 _INTSETUP	=	0xe668
                    E670    580 _PORTACFG	=	0xe670
                    E671    581 _PORTCCFG	=	0xe671
                    E672    582 _PORTECFG	=	0xe672
                    E678    583 _I2CS	=	0xe678
                    E679    584 _I2DAT	=	0xe679
                    E67A    585 _I2CTL	=	0xe67a
                    E67B    586 _XAUTODAT1	=	0xe67b
                    E67C    587 _XAUTODAT2	=	0xe67c
                    E680    588 _USBCS	=	0xe680
                    E681    589 _SUSPEND	=	0xe681
                    E682    590 _WAKEUPCS	=	0xe682
                    E683    591 _TOGCTL	=	0xe683
                    E684    592 _USBFRAMEH	=	0xe684
                    E685    593 _USBFRAMEL	=	0xe685
                    E686    594 _MICROFRAME	=	0xe686
                    E687    595 _FNADDR	=	0xe687
                    E68A    596 _EP0BCH	=	0xe68a
                    E68B    597 _EP0BCL	=	0xe68b
                    E68D    598 _EP1OUTBC	=	0xe68d
                    E68F    599 _EP1INBC	=	0xe68f
                    E690    600 _EP2BCH	=	0xe690
                    E691    601 _EP2BCL	=	0xe691
                    E694    602 _EP4BCH	=	0xe694
                    E695    603 _EP4BCL	=	0xe695
                    E698    604 _EP6BCH	=	0xe698
                    E699    605 _EP6BCL	=	0xe699
                    E69C    606 _EP8BCH	=	0xe69c
                    E69D    607 _EP8BCL	=	0xe69d
                    E6A0    608 _EP0CS	=	0xe6a0
                    E6A1    609 _EP1OUTCS	=	0xe6a1
                    E6A2    610 _EP1INCS	=	0xe6a2
                    E6A3    611 _EP2CS	=	0xe6a3
                    E6A4    612 _EP4CS	=	0xe6a4
                    E6A5    613 _EP6CS	=	0xe6a5
                    E6A6    614 _EP8CS	=	0xe6a6
                    E6A7    615 _EP2FIFOFLGS	=	0xe6a7
                    E6A8    616 _EP4FIFOFLGS	=	0xe6a8
                    E6A9    617 _EP6FIFOFLGS	=	0xe6a9
                    E6AA    618 _EP8FIFOFLGS	=	0xe6aa
                    E6AB    619 _EP2FIFOBCH	=	0xe6ab
                    E6AC    620 _EP2FIFOBCL	=	0xe6ac
                    E6AD    621 _EP4FIFOBCH	=	0xe6ad
                    E6AE    622 _EP4FIFOBCL	=	0xe6ae
                    E6AF    623 _EP6FIFOBCH	=	0xe6af
                    E6B0    624 _EP6FIFOBCL	=	0xe6b0
                    E6B1    625 _EP8FIFOBCH	=	0xe6b1
                    E6B2    626 _EP8FIFOBCL	=	0xe6b2
                    E6B3    627 _SUDPTRH	=	0xe6b3
                    E6B4    628 _SUDPTRL	=	0xe6b4
                    E6B5    629 _SUDPTRCTL	=	0xe6b5
                    E6B8    630 _SETUPDAT	=	0xe6b8
                    E6C0    631 _GPIFWFSELECT	=	0xe6c0
                    E6C1    632 _GPIFIDLECS	=	0xe6c1
                    E6C2    633 _GPIFIDLECTL	=	0xe6c2
                    E6C3    634 _GPIFCTLCFG	=	0xe6c3
                    E6C4    635 _GPIFADRH	=	0xe6c4
                    E6C5    636 _GPIFADRL	=	0xe6c5
                    E6CE    637 _GPIFTCB3	=	0xe6ce
                    E6CF    638 _GPIFTCB2	=	0xe6cf
                    E6D0    639 _GPIFTCB1	=	0xe6d0
                    E6D1    640 _GPIFTCB0	=	0xe6d1
                    E6D2    641 _EP2GPIFFLGSEL	=	0xe6d2
                    E6D3    642 _EP2GPIFPFSTOP	=	0xe6d3
                    E6D4    643 _EP2GPIFTRIG	=	0xe6d4
                    E6DA    644 _EP4GPIFFLGSEL	=	0xe6da
                    E6DB    645 _EP4GPIFPFSTOP	=	0xe6db
                    E6DC    646 _EP4GPIFTRIG	=	0xe6dc
                    E6E2    647 _EP6GPIFFLGSEL	=	0xe6e2
                    E6E3    648 _EP6GPIFPFSTOP	=	0xe6e3
                    E6E4    649 _EP6GPIFTRIG	=	0xe6e4
                    E6EA    650 _EP8GPIFFLGSEL	=	0xe6ea
                    E6EB    651 _EP8GPIFPFSTOP	=	0xe6eb
                    E6EC    652 _EP8GPIFTRIG	=	0xe6ec
                    E6F0    653 _XGPIFSGLDATH	=	0xe6f0
                    E6F1    654 _XGPIFSGLDATLX	=	0xe6f1
                    E6F2    655 _XGPIFSGLDATLNOX	=	0xe6f2
                    E6F3    656 _GPIFREADYCFG	=	0xe6f3
                    E6F4    657 _GPIFREADYSTAT	=	0xe6f4
                    E6F5    658 _GPIFABORT	=	0xe6f5
                    E6C6    659 _FLOWSTATE	=	0xe6c6
                    E6C7    660 _FLOWLOGIC	=	0xe6c7
                    E6C8    661 _FLOWEQ0CTL	=	0xe6c8
                    E6C9    662 _FLOWEQ1CTL	=	0xe6c9
                    E6CA    663 _FLOWHOLDOFF	=	0xe6ca
                    E6CB    664 _FLOWSTB	=	0xe6cb
                    E6CC    665 _FLOWSTBEDGE	=	0xe6cc
                    E6CD    666 _FLOWSTBHPERIOD	=	0xe6cd
                    E60C    667 _GPIFHOLDAMOUNT	=	0xe60c
                    E67D    668 _UDMACRCH	=	0xe67d
                    E67E    669 _UDMACRCL	=	0xe67e
                    E67F    670 _UDMACRCQUAL	=	0xe67f
                    E6F8    671 _DBUG	=	0xe6f8
                    E6F9    672 _TESTCFG	=	0xe6f9
                    E6FA    673 _USBTEST	=	0xe6fa
                    E6FB    674 _CT1	=	0xe6fb
                    E6FC    675 _CT2	=	0xe6fc
                    E6FD    676 _CT3	=	0xe6fd
                    E6FE    677 _CT4	=	0xe6fe
                    E740    678 _EP0BUF	=	0xe740
                    E780    679 _EP1OUTBUF	=	0xe780
                    E7C0    680 _EP1INBUF	=	0xe7c0
                    F000    681 _EP2FIFOBUF	=	0xf000
                    F400    682 _EP4FIFOBUF	=	0xf400
                    F800    683 _EP6FIFOBUF	=	0xf800
                    FC00    684 _EP8FIFOBUF	=	0xfc00
                            685 ;--------------------------------------------------------
                            686 ; absolute external ram data
                            687 ;--------------------------------------------------------
                            688 	.area XABS    (ABS,XDATA)
                            689 ;--------------------------------------------------------
                            690 ; external initialized ram data
                            691 ;--------------------------------------------------------
                            692 	.area HOME    (CODE)
                            693 	.area GSINIT0 (CODE)
                            694 	.area GSINIT1 (CODE)
                            695 	.area GSINIT2 (CODE)
                            696 	.area GSINIT3 (CODE)
                            697 	.area GSINIT4 (CODE)
                            698 	.area GSINIT5 (CODE)
                            699 	.area GSINIT  (CODE)
                            700 	.area GSFINAL (CODE)
                            701 	.area CSEG    (CODE)
                            702 ;--------------------------------------------------------
                            703 ; global & static initialisations
                            704 ;--------------------------------------------------------
                            705 	.area HOME    (CODE)
                            706 	.area GSINIT  (CODE)
                            707 	.area GSFINAL (CODE)
                            708 	.area GSINIT  (CODE)
                            709 ;--------------------------------------------------------
                            710 ; Home
                            711 ;--------------------------------------------------------
                            712 	.area HOME    (CODE)
                            713 	.area HOME    (CODE)
                            714 ;--------------------------------------------------------
                            715 ; code
                            716 ;--------------------------------------------------------
                            717 	.area CSEG    (CODE)
                            718 ;------------------------------------------------------------
                            719 ;Allocation info for local variables in function 'putchar'
                            720 ;------------------------------------------------------------
                            721 ;c                         Allocated to registers r2 
                            722 ;------------------------------------------------------------
                            723 ;	../Initial/src/board_specific.c:31: putchar(char c)
                            724 ;	-----------------------------------------
                            725 ;	 function putchar
                            726 ;	-----------------------------------------
   0000                     727 _putchar:
                    0002    728 	ar2 = 0x02
                    0003    729 	ar3 = 0x03
                    0004    730 	ar4 = 0x04
                    0005    731 	ar5 = 0x05
                    0006    732 	ar6 = 0x06
                    0007    733 	ar7 = 0x07
                    0000    734 	ar0 = 0x00
                    0001    735 	ar1 = 0x01
   0000 AA 82               736 	mov	r2,dpl
                            737 ;	../Initial/src/board_specific.c:34: if ( c == '\n' ) {
   0002 BA 0A 02            738 	cjne	r2,#0x0A,00103$
                            739 ;	../Initial/src/board_specific.c:35: c = '\r'; 
   0005 7A 0D               740 	mov	r2,#0x0D
                            741 ;	../Initial/src/board_specific.c:37: while(!TI);
   0007                     742 00103$:
                            743 ;	../Initial/src/board_specific.c:38: TI=0;
   0007 10 99 02            744 	jbc	_TI,00113$
   000A 80 FB               745 	sjmp	00103$
   000C                     746 00113$:
                            747 ;	../Initial/src/board_specific.c:39: SBUF0 = c;
   000C 8A 99               748 	mov	_SBUF0,r2
   000E 22                  749 	ret
                            750 ;------------------------------------------------------------
                            751 ;Allocation info for local variables in function 'putstr'
                            752 ;------------------------------------------------------------
                            753 ;s                         Allocated to registers r2 r3 r4 
                            754 ;i                         Allocated to registers r5 
                            755 ;c                         Allocated to registers r7 
                            756 ;------------------------------------------------------------
                            757 ;	../Initial/src/board_specific.c:42: void putstr(char *s)
                            758 ;	-----------------------------------------
                            759 ;	 function putstr
                            760 ;	-----------------------------------------
   000F                     761 _putstr:
   000F AA 82               762 	mov	r2,dpl
   0011 AB 83               763 	mov	r3,dph
   0013 AC F0               764 	mov	r4,b
                            765 ;	../Initial/src/board_specific.c:46: while ((c=*(s+(i++)))!=0) putchar(c);
   0015 7D 00               766 	mov	r5,#0x00
   0017                     767 00101$:
   0017 8D 06               768 	mov	ar6,r5
   0019 0D                  769 	inc	r5
   001A EE                  770 	mov	a,r6
   001B 2A                  771 	add	a,r2
   001C FE                  772 	mov	r6,a
   001D E4                  773 	clr	a
   001E 3B                  774 	addc	a,r3
   001F FF                  775 	mov	r7,a
   0020 8C 00               776 	mov	ar0,r4
   0022 8E 82               777 	mov	dpl,r6
   0024 8F 83               778 	mov	dph,r7
   0026 88 F0               779 	mov	b,r0
   0028 12s00r00            780 	lcall	__gptrget
   002B FE                  781 	mov	r6,a
   002C FF                  782 	mov	r7,a
   002D 60 17               783 	jz	00104$
   002F 8F 82               784 	mov	dpl,r7
   0031 C0 02               785 	push	ar2
   0033 C0 03               786 	push	ar3
   0035 C0 04               787 	push	ar4
   0037 C0 05               788 	push	ar5
   0039 12s00r00            789 	lcall	_putchar
   003C D0 05               790 	pop	ar5
   003E D0 04               791 	pop	ar4
   0040 D0 03               792 	pop	ar3
   0042 D0 02               793 	pop	ar2
   0044 80 D1               794 	sjmp	00101$
   0046                     795 00104$:
   0046 22                  796 	ret
                            797 ;------------------------------------------------------------
                            798 ;Allocation info for local variables in function 'set_led_0'
                            799 ;------------------------------------------------------------
                            800 ;on                        Allocated to registers r2 
                            801 ;------------------------------------------------------------
                            802 ;	../Initial/src/board_specific.c:50: set_led_0 (unsigned char on)
                            803 ;	-----------------------------------------
                            804 ;	 function set_led_0
                            805 ;	-----------------------------------------
   0047                     806 _set_led_0:
                            807 ;	../Initial/src/board_specific.c:52: if (!on)			// active low
   0047 E5 82               808 	mov	a,dpl
   0049 FA                  809 	mov	r2,a
   004A 70 04               810 	jnz	00102$
                            811 ;	../Initial/src/board_specific.c:53: HPSDR_PC |= bmPC_LED0;
   004C 43 A0 40            812 	orl	_IOC,#0x40
   004F 22                  813 	ret
   0050                     814 00102$:
                            815 ;	../Initial/src/board_specific.c:55: HPSDR_PC &= ~bmPC_LED0;
   0050 53 A0 BF            816 	anl	_IOC,#0xBF
   0053 22                  817 	ret
                            818 ;------------------------------------------------------------
                            819 ;Allocation info for local variables in function 'set_led_1'
                            820 ;------------------------------------------------------------
                            821 ;on                        Allocated to registers r2 
                            822 ;------------------------------------------------------------
                            823 ;	../Initial/src/board_specific.c:59: set_led_1 (unsigned char on)
                            824 ;	-----------------------------------------
                            825 ;	 function set_led_1
                            826 ;	-----------------------------------------
   0054                     827 _set_led_1:
                            828 ;	../Initial/src/board_specific.c:61: if (!on)			// active low
   0054 E5 82               829 	mov	a,dpl
   0056 FA                  830 	mov	r2,a
   0057 70 04               831 	jnz	00102$
                            832 ;	../Initial/src/board_specific.c:62: HPSDR_PC |= bmPC_LED1;
   0059 43 A0 80            833 	orl	_IOC,#0x80
   005C 22                  834 	ret
   005D                     835 00102$:
                            836 ;	../Initial/src/board_specific.c:64: HPSDR_PC &= ~bmPC_LED1;
   005D 53 A0 7F            837 	anl	_IOC,#0x7F
   0060 22                  838 	ret
                            839 ;------------------------------------------------------------
                            840 ;Allocation info for local variables in function 'toggle_led_0'
                            841 ;------------------------------------------------------------
                            842 ;------------------------------------------------------------
                            843 ;	../Initial/src/board_specific.c:68: toggle_led_0 (void)
                            844 ;	-----------------------------------------
                            845 ;	 function toggle_led_0
                            846 ;	-----------------------------------------
   0061                     847 _toggle_led_0:
                            848 ;	../Initial/src/board_specific.c:70: HPSDR_PC ^= bmPC_LED0;
   0061 63 A0 40            849 	xrl	_IOC,#0x40
   0064 22                  850 	ret
                            851 ;------------------------------------------------------------
                            852 ;Allocation info for local variables in function 'toggle_led_1'
                            853 ;------------------------------------------------------------
                            854 ;------------------------------------------------------------
                            855 ;	../Initial/src/board_specific.c:74: toggle_led_1 (void)
                            856 ;	-----------------------------------------
                            857 ;	 function toggle_led_1
                            858 ;	-----------------------------------------
   0065                     859 _toggle_led_1:
                            860 ;	../Initial/src/board_specific.c:76: HPSDR_PC ^= bmPC_LED1;
   0065 63 A0 80            861 	xrl	_IOC,#0x80
   0068 22                  862 	ret
                            863 ;------------------------------------------------------------
                            864 ;Allocation info for local variables in function 'init_board'
                            865 ;------------------------------------------------------------
                            866 ;------------------------------------------------------------
                            867 ;	../Initial/src/board_specific.c:80: init_board (void)
                            868 ;	-----------------------------------------
                            869 ;	 function init_board
                            870 ;	-----------------------------------------
   0069                     871 _init_board:
                            872 ;	../Initial/src/board_specific.c:82: init_spi();
   0069 02s00r00            873 	ljmp	_init_spi
                            874 	.area CSEG    (CODE)
                            875 	.area CONST   (CODE)
                            876 	.area CABS    (ABS,CODE)
