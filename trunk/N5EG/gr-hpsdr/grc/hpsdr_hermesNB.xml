<?xml version="1.0"?>
<block>
  <name>hermesNB</name>
  <key>hpsdr_hermesNB</key>
  <category>hpsdr</category>
  <import>import hpsdr</import>
  <make>hpsdr.hermesNB($param1, $param2, $param3)</make>
  <callback>set_ReceiveFrequency($param1)</callback>
  <callback>set_RxSampRate($param2)</callback>
  <callback>set_RxPreamp($param3)</callback>
 <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
    <name>Receive Frequency, Hz.</name>
    <key>param1</key>
    <value>7200000</value>
    <type>real</type>
  </param>
  <param>
    <name>Rx Sample Rate</name>
    <key>param2</key>
    <value>192000</value>
    <type>int</type>
  </param>
  <param>
    <name>Rx Preamp On/Off</name>
    <key>param3</key>
    <value>0</value>
    <type>int</type>
  </param>

  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>

<!-- e.g. int, real, complex, byte, short, xxx_vector, ...-->
    <type>float</type>
  </sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>out</name>
<!-- e.g. int, real, complex, byte, short, xxx_vector, ...-->
    <type>complex</type>
  </source>
</block>
