/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.g0orx.openhpsdr;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

import org.g0orx.openhpsdr.debug.Log;

/**
 *
 * @author john
 */
public class MeterPanel extends javax.swing.JPanel {

    /**
     * Creates new form MeterJPanel
     */
    public MeterPanel() {
    }
    
    public MeterPanel(Radio radio, Receiver receiver) {
        this.radio = radio;
        this.receiver = receiver;
        initComponents();
    }

    public void paintComponent(Graphics g) {
        if (image == null) {
            image = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);
            Graphics2D g2 = image.createGraphics();
            g2.fillRect(0, 0, this.getWidth(), this.getHeight());
            g2.setColor(Color.BLACK);
            for(int i=0;i<10;i++) {
                if((i%3)==0) {
                    g2.drawLine((i*6)+18, 10, (i*6)+18, this.getHeight()-10);
                    g2.drawString(Integer.toString(i), (i*6)+18-3, this.getHeight());
                } else {
                    g2.drawLine((i*6)+18, 20, (i*6)+18, this.getHeight()-10);
                }
            }
            g2.setColor(Color.RED);
            for(int i=1;i<7;i++) {
                if((i%2)==0) {
                    g2.drawLine((i*10)+18+54, 10, (i*10)+18+54, this.getHeight()-10);
                    g2.drawString(Integer.toString(i*10), (i*10)+18+54-7, this.getHeight());
                } else {
                    g2.drawLine((i*10)+18+54, 20, (i*10)+18+54, this.getHeight()-10);
                }
            }
        }
        g.drawImage(image, 0, 0, this);
        g.setColor(Color.GREEN);
        g.drawLine(18+(meter+127), 10, 18+(meter+127), this.getHeight()-10);
    }

    public void setMeter(int meter) {
        if(radio!=null) {
            this.meter = meter + (int) radio.preampOffset + (int) radio.meterCalibrationOffset;
            receiving = true;
            this.repaint();
        }
    }

    public void setPower(int penelope_forward_power, int alex_forward_power, int alex_reverse_power) {
        this.penelope_forward_power = penelope_forward_power;
        this.alex_forward_power = alex_forward_power;
        this.alex_reverse_power = alex_reverse_power;
        receiving = false;
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private Radio radio;
    private Receiver receiver;

    private boolean receiving;

    private int meter;
    private int penelope_forward_power;
    private int alex_forward_power;
    private int alex_reverse_power;

    private BufferedImage image;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
