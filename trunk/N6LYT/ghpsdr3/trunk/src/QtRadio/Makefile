#############################################################################
# Makefile for building: ../../bin/QtRadio
# Generated by qmake (2.01a) (Qt 4.6.2) on: Mon Aug 23 20:05:44 2010
# Project:  QtRadio.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile QtRadio.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_MULTIMEDIA_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtMultimedia -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtMultimedia -lQtOpenGL -lQtGui -lQtNetwork -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		Waterfall.cpp \
		USBFilters.cpp \
		UI.cpp \
		Spectrum.cpp \
		SAMFilters.cpp \
		Mode.cpp \
		LSBFilters.cpp \
		FMNFilters.cpp \
		FiltersBase.cpp \
		Filters.cpp \
		Filter.cpp \
		DSBFilters.cpp \
		DIGUFilters.cpp \
		DIGLFilters.cpp \
		CWUFilters.cpp \
		CWLFilters.cpp \
		Connection.cpp \
		Configure.cpp \
		BandStackEntry.cpp \
		Band.cpp \
		Audio.cpp \
		AMFilters.cpp moc_Waterfall.cpp \
		moc_UI.cpp \
		moc_Spectrum.cpp \
		moc_Mode.cpp \
		moc_FiltersBase.cpp \
		moc_Filters.cpp \
		moc_Filter.cpp \
		moc_Connection.cpp \
		moc_Configure.cpp \
		moc_BandStackEntry.cpp \
		moc_Band.cpp \
		moc_Audio.cpp
OBJECTS       = main.o \
		Waterfall.o \
		USBFilters.o \
		UI.o \
		Spectrum.o \
		SAMFilters.o \
		Mode.o \
		LSBFilters.o \
		FMNFilters.o \
		FiltersBase.o \
		Filters.o \
		Filter.o \
		DSBFilters.o \
		DIGUFilters.o \
		DIGLFilters.o \
		CWUFilters.o \
		CWLFilters.o \
		Connection.o \
		Configure.o \
		BandStackEntry.o \
		Band.o \
		Audio.o \
		AMFilters.o \
		moc_Waterfall.o \
		moc_UI.o \
		moc_Spectrum.o \
		moc_Mode.o \
		moc_FiltersBase.o \
		moc_Filters.o \
		moc_Filter.o \
		moc_Connection.o \
		moc_Configure.o \
		moc_BandStackEntry.o \
		moc_Band.o \
		moc_Audio.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		QtRadio.pro
QMAKE_TARGET  = QtRadio
DESTDIR       = ../../bin/
TARGET        = ../../bin/QtRadio

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_UI.h ui_Configure.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../../bin/ || $(MKDIR) ../../bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: QtRadio.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtMultimedia.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile QtRadio.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtMultimedia.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile QtRadio.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/QtRadio1.0.0 || $(MKDIR) .tmp/QtRadio1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/QtRadio1.0.0/ && $(COPY_FILE) --parents Waterfall.h USBFilters.h UI.h Spectrum.h SAMFilters.h Mode.h LSBFilters.h FMNFilters.h FiltersBase.h Filters.h Filter.h DSBFilters.h DIGUFilters.h DIGLFilters.h CWUFilters.h CWLFilters.h Connection.h Configure.h BandStackEntry.h Band.h Audio.h AMFilters.h .tmp/QtRadio1.0.0/ && $(COPY_FILE) --parents main.cpp Waterfall.cpp USBFilters.cpp UI.cpp Spectrum.cpp SAMFilters.cpp Mode.cpp LSBFilters.cpp FMNFilters.cpp FiltersBase.cpp Filters.cpp Filter.cpp DSBFilters.cpp DIGUFilters.cpp DIGLFilters.cpp CWUFilters.cpp CWLFilters.cpp Connection.cpp Configure.cpp BandStackEntry.cpp Band.cpp Audio.cpp AMFilters.cpp .tmp/QtRadio1.0.0/ && $(COPY_FILE) --parents UI.ui Configure.ui .tmp/QtRadio1.0.0/ && (cd `dirname .tmp/QtRadio1.0.0` && $(TAR) QtRadio1.0.0.tar QtRadio1.0.0 && $(COMPRESS) QtRadio1.0.0.tar) && $(MOVE) `dirname .tmp/QtRadio1.0.0`/QtRadio1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/QtRadio1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_Waterfall.cpp moc_UI.cpp moc_Spectrum.cpp moc_Mode.cpp moc_FiltersBase.cpp moc_Filters.cpp moc_Filter.cpp moc_Connection.cpp moc_Configure.cpp moc_BandStackEntry.cpp moc_Band.cpp moc_Audio.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_Waterfall.cpp moc_UI.cpp moc_Spectrum.cpp moc_Mode.cpp moc_FiltersBase.cpp moc_Filters.cpp moc_Filter.cpp moc_Connection.cpp moc_Configure.cpp moc_BandStackEntry.cpp moc_Band.cpp moc_Audio.cpp
moc_Waterfall.cpp: Waterfall.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Waterfall.h -o moc_Waterfall.cpp

moc_UI.cpp: ui_UI.h \
		Spectrum.h \
		Waterfall.h \
		Configure.h \
		ui_Configure.h \
		Audio.h \
		Connection.h \
		Band.h \
		BandStackEntry.h \
		Mode.h \
		Filters.h \
		FiltersBase.h \
		Filter.h \
		CWLFilters.h \
		CWUFilters.h \
		LSBFilters.h \
		USBFilters.h \
		DSBFilters.h \
		AMFilters.h \
		SAMFilters.h \
		FMNFilters.h \
		DIGLFilters.h \
		DIGUFilters.h \
		UI.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) UI.h -o moc_UI.cpp

moc_Spectrum.cpp: Spectrum.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Spectrum.h -o moc_Spectrum.cpp

moc_Mode.cpp: Mode.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Mode.h -o moc_Mode.cpp

moc_FiltersBase.cpp: Filter.h \
		FiltersBase.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) FiltersBase.h -o moc_FiltersBase.cpp

moc_Filters.cpp: FiltersBase.h \
		Filter.h \
		Filters.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Filters.h -o moc_Filters.cpp

moc_Filter.cpp: Filter.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Filter.h -o moc_Filter.cpp

moc_Connection.cpp: Connection.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Connection.h -o moc_Connection.cpp

moc_Configure.cpp: ui_Configure.h \
		Configure.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Configure.h -o moc_Configure.cpp

moc_BandStackEntry.cpp: BandStackEntry.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) BandStackEntry.h -o moc_BandStackEntry.cpp

moc_Band.cpp: BandStackEntry.h \
		Band.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Band.h -o moc_Band.cpp

moc_Audio.cpp: Audio.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Audio.h -o moc_Audio.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_UI.h ui_Configure.h
compiler_uic_clean:
	-$(DEL_FILE) ui_UI.h ui_Configure.h
ui_UI.h: UI.ui \
		Spectrum.h \
		Waterfall.h
	/usr/bin/uic-qt4 UI.ui -o ui_UI.h

ui_Configure.h: Configure.ui
	/usr/bin/uic-qt4 Configure.ui -o ui_Configure.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp UI.h \
		ui_UI.h \
		Spectrum.h \
		Waterfall.h \
		Configure.h \
		ui_Configure.h \
		Audio.h \
		Connection.h \
		Band.h \
		BandStackEntry.h \
		Mode.h \
		Filters.h \
		FiltersBase.h \
		Filter.h \
		CWLFilters.h \
		CWUFilters.h \
		LSBFilters.h \
		USBFilters.h \
		DSBFilters.h \
		AMFilters.h \
		SAMFilters.h \
		FMNFilters.h \
		DIGLFilters.h \
		DIGUFilters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Waterfall.o: Waterfall.cpp Waterfall.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Waterfall.o Waterfall.cpp

USBFilters.o: USBFilters.cpp USBFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o USBFilters.o USBFilters.cpp

UI.o: UI.cpp UI.h \
		ui_UI.h \
		Spectrum.h \
		Waterfall.h \
		Configure.h \
		ui_Configure.h \
		Audio.h \
		Connection.h \
		Band.h \
		BandStackEntry.h \
		Mode.h \
		Filters.h \
		FiltersBase.h \
		Filter.h \
		CWLFilters.h \
		CWUFilters.h \
		LSBFilters.h \
		USBFilters.h \
		DSBFilters.h \
		AMFilters.h \
		SAMFilters.h \
		FMNFilters.h \
		DIGLFilters.h \
		DIGUFilters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UI.o UI.cpp

Spectrum.o: Spectrum.cpp Spectrum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Spectrum.o Spectrum.cpp

SAMFilters.o: SAMFilters.cpp SAMFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SAMFilters.o SAMFilters.cpp

Mode.o: Mode.cpp Mode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Mode.o Mode.cpp

LSBFilters.o: LSBFilters.cpp LSBFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o LSBFilters.o LSBFilters.cpp

FMNFilters.o: FMNFilters.cpp FMNFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FMNFilters.o FMNFilters.cpp

FiltersBase.o: FiltersBase.cpp FiltersBase.h \
		Filter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FiltersBase.o FiltersBase.cpp

Filters.o: Filters.cpp Filters.h \
		FiltersBase.h \
		Filter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Filters.o Filters.cpp

Filter.o: Filter.cpp Filter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Filter.o Filter.cpp

DSBFilters.o: DSBFilters.cpp DSBFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DSBFilters.o DSBFilters.cpp

DIGUFilters.o: DIGUFilters.cpp DIGUFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DIGUFilters.o DIGUFilters.cpp

DIGLFilters.o: DIGLFilters.cpp DIGLFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DIGLFilters.o DIGLFilters.cpp

CWUFilters.o: CWUFilters.cpp CWUFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CWUFilters.o CWUFilters.cpp

CWLFilters.o: CWLFilters.cpp CWLFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CWLFilters.o CWLFilters.cpp

Connection.o: Connection.cpp Connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Connection.o Connection.cpp

Configure.o: Configure.cpp Configure.h \
		ui_Configure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Configure.o Configure.cpp

BandStackEntry.o: BandStackEntry.cpp BandStackEntry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BandStackEntry.o BandStackEntry.cpp

Band.o: Band.cpp Band.h \
		BandStackEntry.h \
		Mode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Band.o Band.cpp

Audio.o: Audio.cpp Audio.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Audio.o Audio.cpp

AMFilters.o: AMFilters.cpp AMFilters.h \
		FiltersBase.h \
		Filter.h \
		Filters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AMFilters.o AMFilters.cpp

moc_Waterfall.o: moc_Waterfall.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Waterfall.o moc_Waterfall.cpp

moc_UI.o: moc_UI.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_UI.o moc_UI.cpp

moc_Spectrum.o: moc_Spectrum.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Spectrum.o moc_Spectrum.cpp

moc_Mode.o: moc_Mode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Mode.o moc_Mode.cpp

moc_FiltersBase.o: moc_FiltersBase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FiltersBase.o moc_FiltersBase.cpp

moc_Filters.o: moc_Filters.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Filters.o moc_Filters.cpp

moc_Filter.o: moc_Filter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Filter.o moc_Filter.cpp

moc_Connection.o: moc_Connection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Connection.o moc_Connection.cpp

moc_Configure.o: moc_Configure.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Configure.o moc_Configure.cpp

moc_BandStackEntry.o: moc_BandStackEntry.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_BandStackEntry.o moc_BandStackEntry.cpp

moc_Band.o: moc_Band.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Band.o moc_Band.cpp

moc_Audio.o: moc_Audio.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Audio.o moc_Audio.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

