diff ./analyzer.c ../wdsp.r3270/analyzer.c
465a466,468
> #ifdef linux
> 		InterlockedDecrement(&a->pnum_threads);
> #else
466a470
> #endif
480a485,487
> #ifdef linux
> 			InterlockedDecrement(&a->pnum_threads);
> #else
481a489
> #endif
487a496,498
> #ifdef linux
> 		InterlockedDecrement(&a->pnum_threads);
> #else
488a500
> #endif
503,505c515,525
< 		a->stitch_flag |= 1i64 << ss;
< 
< 		if (a->stitch_flag == ((1i64 << a->num_stitch) - 1))
---
> #ifdef linux
>                 a->stitch_flag |= 1L << ss;
> #else
>                 a->stitch_flag |= 1i64 << ss;
> #endif
> 
> #ifdef linux
>                 if (a->stitch_flag == ((1L << a->num_stitch) - 1))
> #else
>                 if (a->stitch_flag == ((1i64 << a->num_stitch) - 1))
> #endif
520c540,544
< 		InterlockedDecrement(a->pnum_threads);
---
> #ifdef linux
>                 InterlockedDecrement(&a->pnum_threads);
> #else
>                 InterlockedDecrement(a->pnum_threads);
> #endif
551c575,579
< 			InterlockedDecrement(a->pnum_threads);
---
> #ifdef linux
> 	                InterlockedDecrement(&a->pnum_threads);
> #else
> 	                InterlockedDecrement(a->pnum_threads);
> #endif
558c586,590
< 		InterlockedDecrement(a->pnum_threads);
---
> #ifdef linux
> 	        InterlockedDecrement(&a->pnum_threads);
> #else
> 	        InterlockedDecrement(a->pnum_threads);
> #endif
565a598,600
> #ifdef linux
> 		SetEvent(&(a->hSnapEvent[ss][LO]));
> #else
566a602
> #endif
579a616,618
> #ifdef linux
> 		a->stitch_flag |= 1L << ss;
> #else
580a620
> #endif
581a622,624
> #ifdef linux
> 		if (a->stitch_flag == ((1L << a->num_stitch) - 1))
> #else
582a626
> #endif
596a641,643
> #ifdef linux
> 		InterlockedDecrement(&a->pnum_threads);
> #else
597a645
> #endif
751a800,802
> #ifdef linux
> 					InterlockedIncrement(&a->pnum_threads);
> #else
752a804
> #endif
753a806,808
> #ifdef linux
> 						QueueUserWorkItem(&spectra, (void *)(((int)arg << 12) + (a->ss << 4) + a->LO), 0);
> #else
754a810
> #endif
755a812,814
> #ifdef linux
> 						QueueUserWorkItem(&Cspectra, (void *)(((int)arg << 12) + (a->ss << 4) + a->LO), 0);
> #else
756a816
> #endif
1017c1077,1081
< 			a->hSnapEvent[i][j] = CreateEvent(NULL, FALSE, FALSE, TEXT("snap"));
---
> #ifdef linux
>                         CreateEvent(&a->hSnapEvent[i][j],NULL, FALSE, FALSE, "snap");
> #else
>                         a->hSnapEvent[i][j] = CreateEvent(NULL, FALSE, FALSE, TEXT("snap"));
> #endif
1246a1311,1313
> #ifdef linux
> 	WaitForSingleObject(&a->hSnapEvent[ss][LO], INFINITE);
> #else
1247a1315
> #endif
diff ./calcc.c ../wdsp.r3270/calcc.c
716d715
< 			{
718,719d716
< 				SetTXAiqcDogCount (channel, a->info[13] = 0);
< 			}
746d742
< 			GetTXAiqcDogCount (channel, &a->info[13]);
755,756d750
< 			else if (a->info[13] >= 6)
< 				a->ctrl.state = LRESET;
diff ./calcc.h ../wdsp.r3270/calcc.h
111d110
< //		13 - dogcount
diff ./channel.c ../wdsp.r3270/channel.c
30a31,34
> #ifdef linux
>         pthread_t handle = _beginthread(wdspmain, 0, (void *)channel);
>         SetThreadPriority(handle, THREAD_PRIORITY_HIGHEST);
> #else
32a37
> #endif
94a100
> #ifndef linux
95a102
> #endif
102a110,112
> #ifdef linux
> 	ReleaseSemaphore (&a->Sem_BuffReady, 1, 0);
> #else
103a114
> #endif
293c304
< }
\ No newline at end of file
---
> }
diff ./comm.h ../wdsp.r3270/comm.h
26a27,42
> #ifdef linux
> #include <stdlib.h>
> #include <pthread.h>
> #include <semaphore.h>
> #include <string.h>
> #include "linux_port.h"
> #ifdef ANDROID
> #include <android/log.h>
> #define APPNAME "WDSP"
> #define LOGD(LOG_TAG, ...) __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)
> #define LOGI(LOG_TAG, ...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG,__VA_ARGS__)
> #define LOGV(LOG_TAG, ...) __android_log_print(ANDROID_LOG_VERBOSE, LOG_TAG, __VA_ARGS__)
> #define LOGW(LOG_TAG, ...) __android_log_print(ANDROID_LOG_WARN, LOG_TAG, __VA_ARGS__)
> #define LOGE(LOG_TAG, ...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)
> #endif
> #else
29a46
> #endif
71a89
> #include "staticpd.h"
Only in .: diffs
diff ./iobuffs.c ../wdsp.r3270/iobuffs.c
411a412,414
> #ifdef linux
> 	CreateSemaphore(&a->Sem_BuffReady, 0, 0, 1000, 0);
> #else
412a416
> #endif
437a442,444
> #ifdef linux
> 	while (!WaitForSingleObject (&a->Sem_BuffReady, 1)) ;
> #else
438a446
> #endif
461a470,472
> #ifdef linux
> 			ReleaseSemaphore(&a->Sem_BuffReady, n, 0);
> #else
462a474
> #endif
518a531,533
> #ifdef linux
> 			ReleaseSemaphore(&a->Sem_BuffReady, n, 0);	
> #else
519a535
> #endif
diff ./iqc.c ../wdsp.r3270/iqc.c
29c29
< IQC create_iqc (int run, int size, double* in, double* out, double rate, int ints, double tup, int spi)
---
> IQC create_iqc (int run, int size, double* in, double* out, double rate, int ints, double tup)
63,67d62
< 	a->dog.cpi = (int *) malloc0 (a->ints * sizeof (int));
< 	InitializeCriticalSectionAndSpinCount (&a->dog.cs, 2500);
< 	a->dog.spi = spi;
< 	a->dog.count = 0;
< 	a->dog.full_ints = 0;
74,75d68
< 	DeleteCriticalSection (&a->dog.cs);
< 	_aligned_free (a->dog.cpi);
124,134c117
< 				if (a->dog.cpi[k] != a->dog.spi)
< 					if (++a->dog.cpi[k] == a->dog.spi)
< 						a->dog.full_ints++;
< 				if (a->dog.full_ints == a->ints)
< 				{
< 					EnterCriticalSection (&a->dog.cs);
< 					++a->dog.count;
< 					LeaveCriticalSection (&a->dog.cs);
< 					a->dog.full_ints = 0;
< 					memset (a->dog.cpi, 0, a->ints * sizeof (int));
< 				}
---
> 
259,275c242
< }
< 
< void GetTXAiqcDogCount (int channel, int* count)
< {
< 	IQC a = txa[channel].iqc.p1;
< 	EnterCriticalSection (&a->dog.cs);
< 	*count = a->dog.count;
< 	LeaveCriticalSection (&a->dog.cs);
< }
< 
< void SetTXAiqcDogCount (int channel, int count)
< {
< 	IQC a = txa[channel].iqc.p1;
< 	EnterCriticalSection (&a->dog.cs);
< 	a->dog.count = count;
< 	LeaveCriticalSection (&a->dog.cs);
< }
---
> }
\ No newline at end of file
diff ./iqc.h ../wdsp.r3270/iqc.h
49,56d48
< 	struct
< 	{
< 		int spi;
< 		int* cpi;
< 		int full_ints;
< 		int count;
< 		CRITICAL_SECTION cs;
< 	} dog;
59c51
< extern IQC create_iqc (int run, int size, double* in, double* out, double rate, int ints, double tup, int spi);
---
> extern IQC create_iqc (int run, int size, double* in, double* out, double rate, int ints, double tup);
78,81d69
< 
< void GetTXAiqcDogCount (int channel, int* count);
< 
< void SetTXAiqcDogCount (int channel, int  count);
Only in .: libfftw3-3.dll
Only in .: libfftw3-3.lib
Only in ../wdsp.r3270: linux_port.c
Only in ../wdsp.r3270: linux_port.h
diff ./main.c ../wdsp.r3270/main.c
28a29,31
> #ifdef linux
> void wdspmain (void *pargs)
> #else
29a33
> #endif
36a41,43
> #ifdef linux
> 			WaitForSingleObject(&ch[channel].iob.pd->Sem_BuffReady,INFINITE);
> #else
37a45
> #endif
46a55,57
> #ifdef linux
> 			WaitForSingleObject(&ch[channel].iob.pd->Sem_BuffReady,INFINITE);
> #else
47a59
> #endif
diff ./main.h ../wdsp.r3270/main.h
29a30,32
> #ifdef linux
> extern void wdspmain (void *pargs);
> #else
30a34
> #endif
38c42
< #endif
\ No newline at end of file
---
> #endif
Only in ../wdsp.r3270: Makefile
Only in ../wdsp.r3270: org_g0orx_hpsdr_wdsp_WDSP.c
Only in ../wdsp.r3270: org_g0orx_hpsdr_wdsp_WDSP.h
Only in ../wdsp.r3270: staticpd.c
Only in ../wdsp.r3270: staticpd.h
diff ./TXA.c ../wdsp.r3270/TXA.c
337,338c337,343
< 		0.005,										// changeover time
< 		256);										// spi
---
> 		0.005);										// changeover time
> 
> 	txa[channel].staticpd.p = create_staticpd (				// experimental, for Hans
> 		0,											// run
> 		ch[channel].dsp_size,						// size
> 		txa[channel].midbuff,						// input buffer
> 		txa[channel].midbuff);						// output buffer
372a378
> 	destroy_staticpd (txa[channel].staticpd.p);	// experimental, for Hans
429a436
> 	flush_staticpd (txa[channel].staticpd.p);	// experimental, for Hans
460a468
> 	xstaticpd (txa[channel].staticpd.p);	// experimantal, for Hans
diff ./TXA.h ../wdsp.r3270/TXA.h
143a144,147
> 	struct		// experimental, for Hans
> 	{
> 		STATICPD p;
> 	} staticpd;
diff ./utilities.c ../wdsp.r3270/utilities.c
43a44
> #ifndef linux
59a61
> #endif
203c205
< }
\ No newline at end of file
---
> }
Only in ../wdsp.r3270: wdsp.h
diff ./wdsp.vcxproj ../wdsp.r3270/wdsp.vcxproj
128a129
>     <ClInclude Include="staticpd.h" />
171a173
>     <ClCompile Include="staticpd.c" />
diff ./wdsp.vcxproj.filters ../wdsp.r3270/wdsp.vcxproj.filters
146a147,149
>     <ClInclude Include="staticpd.h">
>       <Filter>Header Files</Filter>
>     </ClInclude>
272a276,278
>       <Filter>Source Files</Filter>
>     </ClCompile>
>     <ClCompile Include="staticpd.c">
diff ./wisdom.c ../wdsp.r3270/wisdom.c
45a46
> #ifndef linux
47a49
> #endif
90a93
> #ifndef linux
91a95
> #endif
93c97
< }
\ No newline at end of file
---
> }
