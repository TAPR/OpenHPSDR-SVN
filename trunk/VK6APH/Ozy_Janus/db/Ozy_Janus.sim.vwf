/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2006 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	SIMULATION_TIME = 500000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("__state")
{
	VALUES = "state.000", "state.001", "state.010", "state.011", "state.110", "state.100", "state.101";
}

USER_TYPE("__state_PWM")
{
	VALUES = "state_PWM.00000";
}

SIGNAL("BCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DOUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LRCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("FX2_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("register")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("register[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("FX2_FD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FX2_FD[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("state_PWM")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "__state_PWM";
}

SIGNAL("data_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("loop_counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("loop_counter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "loop_counter";
}

SIGNAL("loop_counter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "loop_counter";
}

SIGNAL("loop_counter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "loop_counter";
}

SIGNAL("loop_counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "loop_counter";
}

SIGNAL("loop_counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "loop_counter";
}

SIGNAL("loop_counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "loop_counter";
}

SIGNAL("loop_counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "loop_counter";
}

SIGNAL("TX_state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("TX_state[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "TX_state";
}

SIGNAL("TX_state[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "TX_state";
}

SIGNAL("TX_state[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "TX_state";
}

SIGNAL("TX_state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "TX_state";
}

SIGNAL("TX_state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "TX_state";
}

SIGNAL("AD_state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("AD_state[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AD_state";
}

SIGNAL("AD_state[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AD_state";
}

SIGNAL("AD_state[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AD_state";
}

SIGNAL("AD_state[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AD_state";
}

SIGNAL("AD_state[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AD_state";
}

SIGNAL("AD_state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AD_state";
}

SIGNAL("AD_state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "AD_state";
}

SIGNAL("register[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("register[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "register";
}

SIGNAL("FX2_FD[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

SIGNAL("FX2_FD[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FX2_FD";
}

TRANSITION_LIST("BCLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3072;
			LEVEL 0 FOR 81.38;
			LEVEL 1 FOR 81.38;
		}
		LEVEL 0 FOR 1.28;
	}
}

TRANSITION_LIST("DOUT")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.42;
		NODE
		{
			REPEAT = 95;
			LEVEL 0 FOR 2604.167;
			LEVEL 1 FOR 2604.166;
		}
		LEVEL 0 FOR 2604.167;
		LEVEL 1 FOR 2593.778;
	}
}

TRANSITION_LIST("LRCLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 10416.667;
			LEVEL 1 FOR 10416.666;
		}
		LEVEL 0 FOR 0.008;
	}
}

TRANSITION_LIST("FX2_CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 12000;
			LEVEL 0 FOR 20.833;
			LEVEL 1 FOR 20.833;
		}
		LEVEL 0 FOR 8.0;
	}
}

TRANSITION_LIST("register[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.089;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 13997.36;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.351;
	}
}

TRANSITION_LIST("register[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.319;
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 14160.12;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.121;
	}
}

TRANSITION_LIST("register[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.319;
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 14160.12;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.121;
	}
}

TRANSITION_LIST("register[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.319;
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 14160.12;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.121;
	}
}

TRANSITION_LIST("register[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.319;
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 14160.12;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.121;
	}
}

TRANSITION_LIST("register[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.319;
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 14160.12;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.121;
	}
}

TRANSITION_LIST("register[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.319;
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 14160.12;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.121;
	}
}

TRANSITION_LIST("register[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35566.729;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.351;
	}
}

TRANSITION_LIST("FX2_FD[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("state_PWM")
{
	NODE
	{
		REPEAT = 1;
		LEVEL state_PWM.00000 FOR 500000.0;
	}
}

TRANSITION_LIST("data_flag")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21162.571;
		LEVEL 1 FOR 2.867;
		LEVEL 0 FOR 322.653;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2.867;
			LEVEL 0 FOR 159.893;
		}
		LEVEL 1 FOR 2.867;
		LEVEL 0 FOR 1624.733;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 2.867;
			LEVEL 0 FOR 9599.973;
			LEVEL 1 FOR 2.867;
			LEVEL 0 FOR 2601.293;
			LEVEL 1 FOR 2.867;
			LEVEL 0 FOR 159.893;
			LEVEL 1 FOR 2.867;
			LEVEL 0 FOR 8460.653;
		}
		LEVEL 1 FOR 2.867;
		LEVEL 0 FOR 9599.973;
		LEVEL 1 FOR 2.867;
		LEVEL 0 FOR 2601.293;
		LEVEL 1 FOR 2.867;
		LEVEL 0 FOR 159.893;
		LEVEL 1 FOR 2.867;
		LEVEL 0 FOR 5854.002;
	}
}

TRANSITION_LIST("loop_counter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("loop_counter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("loop_counter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 348391.535;
		LEVEL 1 FOR 151608.465;
	}
}

TRANSITION_LIST("loop_counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 181725.295;
		LEVEL 1 FOR 166666.24;
		LEVEL 0 FOR 151608.465;
	}
}

TRANSITION_LIST("loop_counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 98392.175;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 83333.12;
			LEVEL 0 FOR 83333.12;
		}
		LEVEL 1 FOR 68275.345;
	}
}

TRANSITION_LIST("loop_counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 56725.615;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 41666.56;
			LEVEL 0 FOR 41666.56;
		}
		LEVEL 1 FOR 26608.785;
	}
}

TRANSITION_LIST("loop_counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35892.335;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 20833.28;
			LEVEL 0 FOR 20833.28;
		}
		LEVEL 1 FOR 5775.505;
	}
}

TRANSITION_LIST("TX_state[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("TX_state[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("TX_state[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("TX_state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("TX_state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("AD_state[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("AD_state[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 32311.614;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 3580.72;
			LEVEL 0 FOR 17252.56;
		}
		LEVEL 1 FOR 3580.72;
		LEVEL 0 FOR 5775.506;
	}
}

TRANSITION_LIST("AD_state[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23197.054;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 9114.56;
			LEVEL 0 FOR 2604.16;
			LEVEL 1 FOR 976.56;
			LEVEL 0 FOR 8138.0;
		}
		LEVEL 1 FOR 9114.56;
		LEVEL 0 FOR 2604.16;
		LEVEL 1 FOR 976.56;
		LEVEL 0 FOR 5775.506;
	}
}

TRANSITION_LIST("AD_state[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21894.974;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 1302.08;
			LEVEL 0 FOR 1302.08;
			LEVEL 1 FOR 7812.48;
			LEVEL 0 FOR 1302.08;
			LEVEL 1 FOR 1302.08;
			LEVEL 0 FOR 7812.48;
		}
		LEVEL 1 FOR 1302.08;
		LEVEL 0 FOR 1302.08;
		LEVEL 1 FOR 7812.48;
		LEVEL 0 FOR 1302.08;
		LEVEL 1 FOR 1302.08;
		LEVEL 0 FOR 6752.066;
	}
}

TRANSITION_LIST("AD_state[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21243.934;
		NODE
		{
			REPEAT = 22;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 651.04;
				LEVEL 0 FOR 651.04;
			}
			LEVEL 1 FOR 651.04;
			LEVEL 0 FOR 7161.44;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 651.04;
				LEVEL 0 FOR 651.04;
			}
			LEVEL 1 FOR 325.52;
			LEVEL 0 FOR 6184.88;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 651.04;
			LEVEL 0 FOR 651.04;
		}
		LEVEL 1 FOR 651.04;
		LEVEL 0 FOR 7161.44;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 651.04;
			LEVEL 0 FOR 651.04;
		}
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 5775.506;
	}
}

TRANSITION_LIST("AD_state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20918.425;
		NODE
		{
			REPEAT = 22;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 325.52;
				LEVEL 0 FOR 325.52;
			}
			LEVEL 1 FOR 325.52;
			LEVEL 0 FOR 6835.92;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 325.52;
				LEVEL 0 FOR 325.52;
			}
			LEVEL 1 FOR 325.52;
			LEVEL 0 FOR 6184.88;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 325.52;
			LEVEL 0 FOR 325.52;
		}
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 6835.92;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 325.52;
			LEVEL 0 FOR 325.52;
		}
		LEVEL 1 FOR 325.52;
		LEVEL 0 FOR 6101.015;
	}
}

TRANSITION_LIST("AD_state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10501.791;
		LEVEL 1 FOR 10416.64;
		NODE
		{
			REPEAT = 22;
			NODE
			{
				REPEAT = 11;
				LEVEL 0 FOR 162.76;
				LEVEL 1 FOR 162.76;
			}
			LEVEL 0 FOR 162.76;
			LEVEL 1 FOR 6673.16;
			NODE
			{
				REPEAT = 14;
				LEVEL 0 FOR 162.76;
				LEVEL 1 FOR 162.76;
			}
			LEVEL 0 FOR 162.76;
			LEVEL 1 FOR 5696.6;
		}
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 162.76;
			LEVEL 1 FOR 162.76;
		}
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 6673.16;
		NODE
		{
			REPEAT = 14;
			LEVEL 0 FOR 162.76;
			LEVEL 1 FOR 162.76;
		}
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 5612.729;
	}
}

TRANSITION_LIST("register[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.251;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 1627.6;
		LEVEL 0 FOR 12207.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.189;
	}
}

TRANSITION_LIST("register[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.251;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 1627.6;
		LEVEL 0 FOR 12207.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 1 FOR 162.76;
			LEVEL 0 FOR 20670.52;
		}
		LEVEL 1 FOR 162.76;
		LEVEL 0 FOR 5938.189;
	}
}

TRANSITION_LIST("register[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.251;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 1627.6;
		LEVEL 0 FOR 476640.109;
	}
}

TRANSITION_LIST("register[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.251;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 1627.6;
		LEVEL 0 FOR 476640.109;
	}
}

TRANSITION_LIST("register[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.251;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 1627.6;
		LEVEL 0 FOR 476640.109;
	}
}

TRANSITION_LIST("register[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.251;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 1627.6;
		LEVEL 0 FOR 476640.109;
	}
}

TRANSITION_LIST("register[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21081.251;
		LEVEL 1 FOR 488.28;
		LEVEL 0 FOR 162.76;
		LEVEL 1 FOR 1627.6;
		LEVEL 0 FOR 476640.109;
	}
}

TRANSITION_LIST("register[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 21732.291;
		LEVEL 1 FOR 2929.68;
		NODE
		{
			REPEAT = 22;
			LEVEL 0 FOR 19531.2;
			LEVEL 1 FOR 1302.08;
		}
		LEVEL 0 FOR 17005.869;
	}
}

TRANSITION_LIST("FX2_FD[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

TRANSITION_LIST("FX2_FD[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 500000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "FX2_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DOUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LRCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "register";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "register[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "register[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
	CHILDREN = 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "AD_state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 21;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "FX2_FD[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "state_PWM";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "loop_counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "TX_state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60, 61;
}

DISPLAY_LINE
{
	CHANNEL = "TX_state[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "TX_state[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "TX_state[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "TX_state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "TX_state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 56;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 10421116;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 20836083;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 36944712;
	MASTER = FALSE;
}
;
