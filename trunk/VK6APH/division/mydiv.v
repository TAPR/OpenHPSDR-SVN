// megafunction wizard: %ALTFP_DIV%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altfp_div 

// ============================================================
// File Name: mydiv.v
// Megafunction Name(s):
// 			altfp_div
//
// Simulation Library Files(s):
// 			
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 6.1 Build 201 11/27/2006 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2006 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//altfp_div CBX_AUTO_BLACKBOX="ON" DECODER_SUPPORT="NO" DENORMAL_SUPPORT="NO" DEVICE_FAMILY="Cyclone II" PIPELINE=61 WIDTH_EXP=11 WIDTH_MAN=52 clock dataa datab division_by_zero nan overflow result underflow
//VERSION_BEGIN 6.1 cbx_altbarrel_shift 2006:08:31:00:41:52:SJ cbx_altfp_div 2006:10:17:19:20:52:SJ cbx_altsyncram 2006:11:03:10:29:54:SJ cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_abs 2006:04:25:14:52:42:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_compare 2006:04:25:14:54:12:SJ cbx_lpm_decode 2006:04:25:15:10:18:SJ cbx_lpm_divide 2006:01:18:17:01:10:SJ cbx_lpm_mux 2006:04:25:15:10:08:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ cbx_stratixiii 2006:10:19:19:28:28:SJ cbx_util_mgl 2006:11:03:10:32:30:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001



//altsrt_div CBX_AUTO_BLACKBOX="ON" DECODER_SUPPORT="NO" DEVICE_FAMILY="Cyclone II" INIT_FILE="mydiv.hex" ITERATION=28 PIPELINE=60 WIDTH_DIV=53 aclr clock denom divider numer quotient remain
//VERSION_BEGIN 6.1 cbx_altbarrel_shift 2006:08:31:00:41:52:SJ cbx_altfp_div 2006:10:17:19:20:52:SJ cbx_altsyncram 2006:11:03:10:29:54:SJ cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_abs 2006:04:25:14:52:42:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_compare 2006:04:25:14:54:12:SJ cbx_lpm_decode 2006:04:25:15:10:18:SJ cbx_lpm_divide 2006:01:18:17:01:10:SJ cbx_lpm_mux 2006:04:25:15:10:08:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ cbx_stratixiii 2006:10:19:19:28:28:SJ cbx_util_mgl 2006:11:03:10:32:30:SJ  VERSION_END


//adder_block CBX_AUTO_BLACKBOX="ON" WIDTH_DIV=53 adder_var divider_next divider_reg neg_qkd_reg Rk_next Rk_reg
//VERSION_BEGIN 6.1 cbx_altbarrel_shift 2006:08:31:00:41:52:SJ cbx_altfp_div 2006:10:17:19:20:52:SJ cbx_altsyncram 2006:11:03:10:29:54:SJ cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_abs 2006:04:25:14:52:42:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_compare 2006:04:25:14:54:12:SJ cbx_lpm_decode 2006:04:25:15:10:18:SJ cbx_lpm_divide 2006:01:18:17:01:10:SJ cbx_lpm_mux 2006:04:25:15:10:08:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ cbx_stratixiii 2006:10:19:19:28:28:SJ cbx_util_mgl 2006:11:03:10:32:30:SJ  VERSION_END


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_WIDTH=56 ONE_INPUT_IS_CONSTANT="NO" add_sub dataa datab result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END

//synthesis_resources = lut 112 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  mydiv_adder_block_5aa
	( 
	adder_var,
	divider_next,
	divider_reg,
	neg_qkd_reg,
	Rk_next,
	Rk_reg) /* synthesis synthesis_clearbox=1 */;
	input   adder_var;
	output   [52:0]  divider_next;
	input   [52:0]  divider_reg;
	input   [55:0]  neg_qkd_reg;
	output   [53:0]  Rk_next;
	input   [53:0]  Rk_reg;

	reg	[55:0]	wire_add_sub66_result_int;
	wire	wire_add_sub66_add_sub;
	wire	[55:0]	wire_add_sub66_dataa;
	wire	[55:0]	wire_add_sub66_datab;
	wire	[55:0]	wire_add_sub66_result;
	wire  [52:0]  divider_next_1a_w;
	wire  [1:0]  padded_2_zeros_w;
	wire  [55:0]  Rk_adder_padded_lsb_w;
	wire  [53:0]  Rk_next_1a_w;

	always @(wire_add_sub66_add_sub or wire_add_sub66_dataa or wire_add_sub66_datab)
		if (wire_add_sub66_add_sub == 1'b1) wire_add_sub66_result_int = wire_add_sub66_dataa + wire_add_sub66_datab;
		else wire_add_sub66_result_int = wire_add_sub66_dataa - wire_add_sub66_datab;
	assign
		wire_add_sub66_result = wire_add_sub66_result_int;
	assign
		wire_add_sub66_add_sub = adder_var,
		wire_add_sub66_dataa = Rk_adder_padded_lsb_w,
		wire_add_sub66_datab = neg_qkd_reg;
	assign
		divider_next = divider_next_1a_w,
		divider_next_1a_w = divider_reg,
		padded_2_zeros_w = 2'b00,
		Rk_adder_padded_lsb_w = {Rk_reg, padded_2_zeros_w},
		Rk_next = Rk_next_1a_w,
		Rk_next_1a_w = wire_add_sub66_result[53:0];
endmodule //mydiv_adder_block_5aa


//adder_last_block CBX_AUTO_BLACKBOX="ON" WIDTH_DIV=53 adder_var divider_next divider_reg neg_qkd_reg Rk_next Rk_reg
//VERSION_BEGIN 6.1 cbx_altbarrel_shift 2006:08:31:00:41:52:SJ cbx_altfp_div 2006:10:17:19:20:52:SJ cbx_altsyncram 2006:11:03:10:29:54:SJ cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_abs 2006:04:25:14:52:42:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_compare 2006:04:25:14:54:12:SJ cbx_lpm_decode 2006:04:25:15:10:18:SJ cbx_lpm_divide 2006:01:18:17:01:10:SJ cbx_lpm_mux 2006:04:25:15:10:08:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ cbx_stratixiii 2006:10:19:19:28:28:SJ cbx_util_mgl 2006:11:03:10:32:30:SJ  VERSION_END


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_WIDTH=56 ONE_INPUT_IS_CONSTANT="NO" add_sub dataa datab result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END

//synthesis_resources = lut 112 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  mydiv_adder_last_block_oqa
	( 
	adder_var,
	divider_next,
	divider_reg,
	neg_qkd_reg,
	Rk_next,
	Rk_reg) /* synthesis synthesis_clearbox=1 */;
	input   adder_var;
	output   [52:0]  divider_next;
	input   [52:0]  divider_reg;
	input   [55:0]  neg_qkd_reg;
	output   [55:0]  Rk_next;
	input   [53:0]  Rk_reg;

	reg	[55:0]	wire_add_sub67_result_int;
	wire	wire_add_sub67_add_sub;
	wire	[55:0]	wire_add_sub67_dataa;
	wire	[55:0]	wire_add_sub67_datab;
	wire	[55:0]	wire_add_sub67_result;
	wire  [52:0]  divider_next_1a_w;
	wire  [1:0]  padded_2_zeros_w;
	wire  [55:0]  Rk_adder_padded_lsb_w;
	wire  [55:0]  true_Rk_1a_w;

	always @(wire_add_sub67_add_sub or wire_add_sub67_dataa or wire_add_sub67_datab)
		if (wire_add_sub67_add_sub == 1'b1) wire_add_sub67_result_int = wire_add_sub67_dataa + wire_add_sub67_datab;
		else wire_add_sub67_result_int = wire_add_sub67_dataa - wire_add_sub67_datab;
	assign
		wire_add_sub67_result = wire_add_sub67_result_int;
	assign
		wire_add_sub67_add_sub = adder_var,
		wire_add_sub67_dataa = Rk_adder_padded_lsb_w,
		wire_add_sub67_datab = neg_qkd_reg;
	assign
		divider_next = divider_next_1a_w,
		divider_next_1a_w = divider_reg,
		padded_2_zeros_w = 2'b00,
		Rk_adder_padded_lsb_w = {Rk_reg, padded_2_zeros_w},
		Rk_next = true_Rk_1a_w,
		true_Rk_1a_w = wire_add_sub67_result;
endmodule //mydiv_adder_last_block_oqa


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="ADD" LPM_WIDTH=53 ONE_INPUT_IS_CONSTANT="NO" dataa datab result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=56 ONE_INPUT_IS_CONSTANT="NO" dataa datab result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=56 ONE_INPUT_IS_CONSTANT="YES" dataa datab result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_WIDTH=56 ONE_INPUT_IS_CONSTANT="NO" add_sub dataa datab result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//rom_block CBX_AUTO_BLACKBOX="ON" DECODER_SUPPORT="NO" DEVICE_FAMILY="Cyclone II" INIT_FILE="mydiv.hex" PIPELINE=2 WIDTH_DIV=53 WIDTH_ROM=3 WIDTH_ROM_ADD=12 aclr adder_var clock divider divider_reg neg_qkd_reg Rk Rk_reg rom
//VERSION_BEGIN 6.1 cbx_altbarrel_shift 2006:08:31:00:41:52:SJ cbx_altfp_div 2006:10:17:19:20:52:SJ cbx_altsyncram 2006:11:03:10:29:54:SJ cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_abs 2006:04:25:14:52:42:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_compare 2006:04:25:14:54:12:SJ cbx_lpm_decode 2006:04:25:15:10:18:SJ cbx_lpm_divide 2006:01:18:17:01:10:SJ cbx_lpm_mux 2006:04:25:15:10:08:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ cbx_stratixiii 2006:10:19:19:28:28:SJ cbx_util_mgl 2006:11:03:10:32:30:SJ  VERSION_END

//synthesis_resources = altsyncram 1 reg 274 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  mydiv_rom_block_rck
	( 
	aclr,
	adder_var,
	clock,
	divider,
	divider_reg,
	neg_qkd_reg,
	Rk,
	Rk_reg,
	rom) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	output   adder_var;
	input   clock;
	input   [52:0]  divider;
	output   [52:0]  divider_reg;
	output   [55:0]  neg_qkd_reg;
	input   [53:0]  Rk;
	output   [53:0]  Rk_reg;
	output   [2:0]  rom;

	wire  [2:0]   wire_altsyncram68_q_a;
	reg	adder_var_dffe;
	reg	[52:0]	divider_dffe_1a;
	reg	[52:0]	divider_dffe_2a;
	reg	[55:0]	neg_qkd_dffe;
	reg	[53:0]	Rk_dffe_1a;
	reg	[53:0]	Rk_dffe_2a;
	reg	[2:0]	rom_out_2a_dffe;
	wire  adder_var_dffe_w;
	wire  adder_var_w;
	wire clken;
	wire  [55:0]  divider_1D_w;
	wire  [55:0]  divider_2D_w;
	wire  [52:0]  divider_dffe_1a_w;
	wire  [52:0]  divider_dffe_w;
	wire  [52:0]  divider_in_w;
	wire  [55:0]  divider_zeros_w;
	wire  [55:0]  neg_qkd_dffe_w;
	wire  [55:0]  neg_qkd_w;
	wire  [1:0]  padded_2_zeros_w;
	wire  [2:0]  padded_3_zeros_w;
	wire  [53:0]  Rk_dffe_1a_w;
	wire  [53:0]  Rk_dffe_2a_w;
	wire  [53:0]  Rk_in_w;
	wire  [11:0]  rom_add_w;
	wire  [1:0]  rom_mux_w;
	wire  [2:0]  rom_out_1a_w;
	wire  [2:0]  rom_out_dffe_w;

	altsyncram   altsyncram68
	( 
	.address_a(rom_add_w),
	.clock0(clock),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_altsyncram68_q_a),
	.q_b()
	`ifdef FORMAL_VERIFICATION
	`else
	// synopsys translate_off
	`endif
	,
	.aclr0(1'b0),
	.aclr1(1'b0),
	.address_b({1{1'b1}}),
	.addressstall_a(1'b0),
	.addressstall_b(1'b0),
	.byteena_a({1{1'b1}}),
	.byteena_b({1{1'b1}}),
	.clock1(1'b1),
	.clocken1(1'b1),
	.clocken2(1'b1),
	.clocken3(1'b1),
	.data_a({3{1'b1}}),
	.data_b({1{1'b1}}),
	.rden_a(1'b1),
	.rden_b(1'b1),
	.wren_a(1'b0),
	.wren_b(1'b0)
	`ifdef FORMAL_VERIFICATION
	`else
	// synopsys translate_on
	`endif
	);
	defparam
		altsyncram68.init_file = "mydiv.hex",
		altsyncram68.operation_mode = "ROM",
		altsyncram68.width_a = 3,
		altsyncram68.widthad_a = 12,
		altsyncram68.intended_device_family = "Cyclone II",
		altsyncram68.lpm_type = "altsyncram";
	// synopsys translate_off
	initial
		adder_var_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) adder_var_dffe <= 1'b0;
		else if  (clken == 1'b1)   adder_var_dffe <= adder_var_w;
	// synopsys translate_off
	initial
		divider_dffe_1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) divider_dffe_1a <= 53'b0;
		else if  (clken == 1'b1)   divider_dffe_1a <= divider_in_w;
	// synopsys translate_off
	initial
		divider_dffe_2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) divider_dffe_2a <= 53'b0;
		else if  (clken == 1'b1)   divider_dffe_2a <= divider_dffe_1a_w;
	// synopsys translate_off
	initial
		neg_qkd_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) neg_qkd_dffe <= 56'b0;
		else if  (clken == 1'b1)   neg_qkd_dffe <= neg_qkd_w;
	// synopsys translate_off
	initial
		Rk_dffe_1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Rk_dffe_1a <= 54'b0;
		else if  (clken == 1'b1)   Rk_dffe_1a <= Rk_in_w;
	// synopsys translate_off
	initial
		Rk_dffe_2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Rk_dffe_2a <= 54'b0;
		else if  (clken == 1'b1)   Rk_dffe_2a <= Rk_dffe_1a_w;
	// synopsys translate_off
	initial
		rom_out_2a_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_out_2a_dffe <= 3'b0;
		else if  (clken == 1'b1)   rom_out_2a_dffe <= rom_out_1a_w;
	assign
		adder_var = adder_var_dffe_w,
		adder_var_dffe_w = adder_var_dffe,
		adder_var_w = rom_out_1a_w[2],
		clken = 1'b1,
		divider_1D_w = {padded_3_zeros_w, divider_dffe_1a_w},
		divider_2D_w = {padded_2_zeros_w, divider_dffe_1a_w, 1'b0},
		divider_dffe_1a_w = divider_dffe_1a,
		divider_dffe_w = divider_dffe_2a,
		divider_in_w = divider,
		divider_reg = divider_dffe_w,
		divider_zeros_w = 56'b00000000000000000000000000000000000000000000000000000000,
		neg_qkd_dffe_w = neg_qkd_dffe,
		neg_qkd_reg = neg_qkd_dffe_w,
		neg_qkd_w = (((({56{((~ rom_mux_w[1]) & (~ rom_mux_w[0]))}} & divider_zeros_w) | ({56{((~ rom_mux_w[1]) & rom_mux_w[0])}} & divider_1D_w)) | ({56{(rom_mux_w[1] & (~ rom_mux_w[0]))}} & divider_2D_w)) | ({56{(rom_mux_w[1] & rom_mux_w[0])}} & divider_1D_w)),
		padded_2_zeros_w = 2'b00,
		padded_3_zeros_w = 3'b000,
		Rk_dffe_1a_w = Rk_dffe_1a,
		Rk_dffe_2a_w = Rk_dffe_2a,
		Rk_in_w = Rk,
		Rk_reg = Rk_dffe_2a_w,
		rom = rom_out_dffe_w,
		rom_add_w = {Rk_in_w[53:46], divider_in_w[51:48]},
		rom_mux_w = rom_out_1a_w[1:0],
		rom_out_1a_w = wire_altsyncram68_q_a,
		rom_out_dffe_w = rom_out_2a_dffe;
endmodule //mydiv_rom_block_rck

//synthesis_resources = altsyncram 2 lut 503 reg 2814 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  mydiv_altsrt_div_v8h
	( 
	aclr,
	clock,
	denom,
	divider,
	numer,
	quotient,
	remain) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   [52:0]  denom;
	output   [52:0]  divider;
	input   [52:0]  numer;
	output   [55:0]  quotient;
	output   [52:0]  remain;

	wire  [52:0]   wire_adder_block35_divider_next;
	wire  [53:0]   wire_adder_block35_Rk_next;
	wire  [52:0]   wire_adder_block36_divider_next;
	wire  [53:0]   wire_adder_block36_Rk_next;
	wire  [52:0]   wire_adder_block37_divider_next;
	wire  [53:0]   wire_adder_block37_Rk_next;
	wire  [52:0]   wire_adder_block38_divider_next;
	wire  [53:0]   wire_adder_block38_Rk_next;
	wire  [52:0]   wire_adder_block39_divider_next;
	wire  [53:0]   wire_adder_block39_Rk_next;
	wire  [52:0]   wire_adder_block40_divider_next;
	wire  [53:0]   wire_adder_block40_Rk_next;
	wire  [52:0]   wire_adder_block41_divider_next;
	wire  [53:0]   wire_adder_block41_Rk_next;
	wire  [52:0]   wire_adder_block42_divider_next;
	wire  [53:0]   wire_adder_block42_Rk_next;
	wire  [52:0]   wire_adder_block43_divider_next;
	wire  [53:0]   wire_adder_block43_Rk_next;
	wire  [52:0]   wire_adder_block44_divider_next;
	wire  [53:0]   wire_adder_block44_Rk_next;
	wire  [52:0]   wire_adder_block45_divider_next;
	wire  [53:0]   wire_adder_block45_Rk_next;
	wire  [52:0]   wire_adder_block46_divider_next;
	wire  [53:0]   wire_adder_block46_Rk_next;
	wire  [52:0]   wire_adder_block47_divider_next;
	wire  [53:0]   wire_adder_block47_Rk_next;
	wire  [52:0]   wire_adder_block48_divider_next;
	wire  [53:0]   wire_adder_block48_Rk_next;
	wire  [52:0]   wire_adder_block49_divider_next;
	wire  [53:0]   wire_adder_block49_Rk_next;
	wire  [52:0]   wire_adder_block50_divider_next;
	wire  [53:0]   wire_adder_block50_Rk_next;
	wire  [52:0]   wire_adder_block51_divider_next;
	wire  [53:0]   wire_adder_block51_Rk_next;
	wire  [52:0]   wire_adder_block52_divider_next;
	wire  [53:0]   wire_adder_block52_Rk_next;
	wire  [52:0]   wire_adder_block53_divider_next;
	wire  [53:0]   wire_adder_block53_Rk_next;
	wire  [52:0]   wire_adder_block54_divider_next;
	wire  [53:0]   wire_adder_block54_Rk_next;
	wire  [52:0]   wire_adder_block55_divider_next;
	wire  [53:0]   wire_adder_block55_Rk_next;
	wire  [52:0]   wire_adder_block56_divider_next;
	wire  [53:0]   wire_adder_block56_Rk_next;
	wire  [52:0]   wire_adder_block57_divider_next;
	wire  [53:0]   wire_adder_block57_Rk_next;
	wire  [52:0]   wire_adder_block58_divider_next;
	wire  [53:0]   wire_adder_block58_Rk_next;
	wire  [52:0]   wire_adder_block59_divider_next;
	wire  [53:0]   wire_adder_block59_Rk_next;
	wire  [52:0]   wire_adder_block60_divider_next;
	wire  [53:0]   wire_adder_block60_Rk_next;
	wire  [52:0]   wire_adder_last_block62_divider_next;
	wire  [55:0]   wire_adder_last_block62_Rk_next;
	wire  [2:0]   wire_altsyncram7_q_a;
	reg	adder_var_dffe;
	reg	[52:0]	divider_dffe_1a;
	reg	[52:0]	divider_dffe_2a;
	reg	[55:0]	neg_qkd_dffe;
	reg	[52:0]	Rk_dffe_1a;
	reg	[52:0]	Rk_dffe_2a;
	reg	[2:0]	rom_out_2a_dffe;
	reg	[161:0]	rom_reg_dffe0c;
	reg	[101:0]	rom_reg_dffe10c;
	reg	[95:0]	rom_reg_dffe11c;
	reg	[89:0]	rom_reg_dffe12c;
	reg	[83:0]	rom_reg_dffe13c;
	reg	[77:0]	rom_reg_dffe14c;
	reg	[71:0]	rom_reg_dffe15c;
	reg	[65:0]	rom_reg_dffe16c;
	reg	[59:0]	rom_reg_dffe17c;
	reg	[53:0]	rom_reg_dffe18c;
	reg	[47:0]	rom_reg_dffe19c;
	reg	[155:0]	rom_reg_dffe1c;
	reg	[41:0]	rom_reg_dffe20c;
	reg	[35:0]	rom_reg_dffe21c;
	reg	[29:0]	rom_reg_dffe22c;
	reg	[23:0]	rom_reg_dffe23c;
	reg	[17:0]	rom_reg_dffe24c;
	reg	[11:0]	rom_reg_dffe25c;
	reg	[5:0]	rom_reg_dffe26c;
	reg	[149:0]	rom_reg_dffe2c;
	reg	[143:0]	rom_reg_dffe3c;
	reg	[137:0]	rom_reg_dffe4c;
	reg	[131:0]	rom_reg_dffe5c;
	reg	[125:0]	rom_reg_dffe6c;
	reg	[119:0]	rom_reg_dffe7c;
	reg	[113:0]	rom_reg_dffe8c;
	reg	[107:0]	rom_reg_dffe9c;
	wire	[52:0]	wire_add_sub63_dataa;
	wire	[52:0]	wire_add_sub63_datab;
	wire	[52:0]	wire_add_sub63_result;
	wire	[55:0]	wire_add_sub64_dataa;
	wire	[55:0]	wire_add_sub64_datab;
	wire	[55:0]	wire_add_sub64_result;
	wire	[55:0]	wire_add_sub65_dataa;
	wire	[55:0]	wire_add_sub65_datab;
	wire	[55:0]	wire_add_sub65_result;
	reg	[55:0]	wire_add_sub8_result_int;
	wire	wire_add_sub8_add_sub;
	wire	[55:0]	wire_add_sub8_dataa;
	wire	[55:0]	wire_add_sub8_datab;
	wire	[55:0]	wire_add_sub8_result;
	wire  wire_rom_block10_adder_var;
	wire  [52:0]   wire_rom_block10_divider_reg;
	wire  [55:0]   wire_rom_block10_neg_qkd_reg;
	wire  [53:0]   wire_rom_block10_Rk_reg;
	wire  [2:0]   wire_rom_block10_rom;
	wire  wire_rom_block11_adder_var;
	wire  [52:0]   wire_rom_block11_divider_reg;
	wire  [55:0]   wire_rom_block11_neg_qkd_reg;
	wire  [53:0]   wire_rom_block11_Rk_reg;
	wire  [2:0]   wire_rom_block11_rom;
	wire  wire_rom_block12_adder_var;
	wire  [52:0]   wire_rom_block12_divider_reg;
	wire  [55:0]   wire_rom_block12_neg_qkd_reg;
	wire  [53:0]   wire_rom_block12_Rk_reg;
	wire  [2:0]   wire_rom_block12_rom;
	wire  wire_rom_block13_adder_var;
	wire  [52:0]   wire_rom_block13_divider_reg;
	wire  [55:0]   wire_rom_block13_neg_qkd_reg;
	wire  [53:0]   wire_rom_block13_Rk_reg;
	wire  [2:0]   wire_rom_block13_rom;
	wire  wire_rom_block14_adder_var;
	wire  [52:0]   wire_rom_block14_divider_reg;
	wire  [55:0]   wire_rom_block14_neg_qkd_reg;
	wire  [53:0]   wire_rom_block14_Rk_reg;
	wire  [2:0]   wire_rom_block14_rom;
	wire  wire_rom_block15_adder_var;
	wire  [52:0]   wire_rom_block15_divider_reg;
	wire  [55:0]   wire_rom_block15_neg_qkd_reg;
	wire  [53:0]   wire_rom_block15_Rk_reg;
	wire  [2:0]   wire_rom_block15_rom;
	wire  wire_rom_block16_adder_var;
	wire  [52:0]   wire_rom_block16_divider_reg;
	wire  [55:0]   wire_rom_block16_neg_qkd_reg;
	wire  [53:0]   wire_rom_block16_Rk_reg;
	wire  [2:0]   wire_rom_block16_rom;
	wire  wire_rom_block17_adder_var;
	wire  [52:0]   wire_rom_block17_divider_reg;
	wire  [55:0]   wire_rom_block17_neg_qkd_reg;
	wire  [53:0]   wire_rom_block17_Rk_reg;
	wire  [2:0]   wire_rom_block17_rom;
	wire  wire_rom_block18_adder_var;
	wire  [52:0]   wire_rom_block18_divider_reg;
	wire  [55:0]   wire_rom_block18_neg_qkd_reg;
	wire  [53:0]   wire_rom_block18_Rk_reg;
	wire  [2:0]   wire_rom_block18_rom;
	wire  wire_rom_block19_adder_var;
	wire  [52:0]   wire_rom_block19_divider_reg;
	wire  [55:0]   wire_rom_block19_neg_qkd_reg;
	wire  [53:0]   wire_rom_block19_Rk_reg;
	wire  [2:0]   wire_rom_block19_rom;
	wire  wire_rom_block20_adder_var;
	wire  [52:0]   wire_rom_block20_divider_reg;
	wire  [55:0]   wire_rom_block20_neg_qkd_reg;
	wire  [53:0]   wire_rom_block20_Rk_reg;
	wire  [2:0]   wire_rom_block20_rom;
	wire  wire_rom_block21_adder_var;
	wire  [52:0]   wire_rom_block21_divider_reg;
	wire  [55:0]   wire_rom_block21_neg_qkd_reg;
	wire  [53:0]   wire_rom_block21_Rk_reg;
	wire  [2:0]   wire_rom_block21_rom;
	wire  wire_rom_block22_adder_var;
	wire  [52:0]   wire_rom_block22_divider_reg;
	wire  [55:0]   wire_rom_block22_neg_qkd_reg;
	wire  [53:0]   wire_rom_block22_Rk_reg;
	wire  [2:0]   wire_rom_block22_rom;
	wire  wire_rom_block23_adder_var;
	wire  [52:0]   wire_rom_block23_divider_reg;
	wire  [55:0]   wire_rom_block23_neg_qkd_reg;
	wire  [53:0]   wire_rom_block23_Rk_reg;
	wire  [2:0]   wire_rom_block23_rom;
	wire  wire_rom_block24_adder_var;
	wire  [52:0]   wire_rom_block24_divider_reg;
	wire  [55:0]   wire_rom_block24_neg_qkd_reg;
	wire  [53:0]   wire_rom_block24_Rk_reg;
	wire  [2:0]   wire_rom_block24_rom;
	wire  wire_rom_block25_adder_var;
	wire  [52:0]   wire_rom_block25_divider_reg;
	wire  [55:0]   wire_rom_block25_neg_qkd_reg;
	wire  [53:0]   wire_rom_block25_Rk_reg;
	wire  [2:0]   wire_rom_block25_rom;
	wire  wire_rom_block26_adder_var;
	wire  [52:0]   wire_rom_block26_divider_reg;
	wire  [55:0]   wire_rom_block26_neg_qkd_reg;
	wire  [53:0]   wire_rom_block26_Rk_reg;
	wire  [2:0]   wire_rom_block26_rom;
	wire  wire_rom_block27_adder_var;
	wire  [52:0]   wire_rom_block27_divider_reg;
	wire  [55:0]   wire_rom_block27_neg_qkd_reg;
	wire  [53:0]   wire_rom_block27_Rk_reg;
	wire  [2:0]   wire_rom_block27_rom;
	wire  wire_rom_block28_adder_var;
	wire  [52:0]   wire_rom_block28_divider_reg;
	wire  [55:0]   wire_rom_block28_neg_qkd_reg;
	wire  [53:0]   wire_rom_block28_Rk_reg;
	wire  [2:0]   wire_rom_block28_rom;
	wire  wire_rom_block29_adder_var;
	wire  [52:0]   wire_rom_block29_divider_reg;
	wire  [55:0]   wire_rom_block29_neg_qkd_reg;
	wire  [53:0]   wire_rom_block29_Rk_reg;
	wire  [2:0]   wire_rom_block29_rom;
	wire  wire_rom_block30_adder_var;
	wire  [52:0]   wire_rom_block30_divider_reg;
	wire  [55:0]   wire_rom_block30_neg_qkd_reg;
	wire  [53:0]   wire_rom_block30_Rk_reg;
	wire  [2:0]   wire_rom_block30_rom;
	wire  wire_rom_block31_adder_var;
	wire  [52:0]   wire_rom_block31_divider_reg;
	wire  [55:0]   wire_rom_block31_neg_qkd_reg;
	wire  [53:0]   wire_rom_block31_Rk_reg;
	wire  [2:0]   wire_rom_block31_rom;
	wire  wire_rom_block32_adder_var;
	wire  [52:0]   wire_rom_block32_divider_reg;
	wire  [55:0]   wire_rom_block32_neg_qkd_reg;
	wire  [53:0]   wire_rom_block32_Rk_reg;
	wire  [2:0]   wire_rom_block32_rom;
	wire  wire_rom_block33_adder_var;
	wire  [52:0]   wire_rom_block33_divider_reg;
	wire  [55:0]   wire_rom_block33_neg_qkd_reg;
	wire  [53:0]   wire_rom_block33_Rk_reg;
	wire  [2:0]   wire_rom_block33_rom;
	wire  wire_rom_block34_adder_var;
	wire  [52:0]   wire_rom_block34_divider_reg;
	wire  [55:0]   wire_rom_block34_neg_qkd_reg;
	wire  [53:0]   wire_rom_block34_Rk_reg;
	wire  [2:0]   wire_rom_block34_rom;
	wire  wire_rom_block61_adder_var;
	wire  [52:0]   wire_rom_block61_divider_reg;
	wire  [55:0]   wire_rom_block61_neg_qkd_reg;
	wire  [53:0]   wire_rom_block61_Rk_reg;
	wire  [2:0]   wire_rom_block61_rom;
	wire  wire_rom_block9_adder_var;
	wire  [52:0]   wire_rom_block9_divider_reg;
	wire  [55:0]   wire_rom_block9_neg_qkd_reg;
	wire  [53:0]   wire_rom_block9_Rk_reg;
	wire  [2:0]   wire_rom_block9_rom;
	wire  [52:0]  added_remainder_w;
	wire  adder_var_dffe_w;
	wire  adder_var_int_w;
	wire  adder_var_w0c;
	wire  adder_var_w10c;
	wire  adder_var_w11c;
	wire  adder_var_w12c;
	wire  adder_var_w13c;
	wire  adder_var_w14c;
	wire  adder_var_w15c;
	wire  adder_var_w16c;
	wire  adder_var_w17c;
	wire  adder_var_w18c;
	wire  adder_var_w19c;
	wire  adder_var_w1c;
	wire  adder_var_w20c;
	wire  adder_var_w21c;
	wire  adder_var_w22c;
	wire  adder_var_w23c;
	wire  adder_var_w24c;
	wire  adder_var_w25c;
	wire  adder_var_w26c;
	wire  adder_var_w2c;
	wire  adder_var_w3c;
	wire  adder_var_w4c;
	wire  adder_var_w5c;
	wire  adder_var_w6c;
	wire  adder_var_w7c;
	wire  adder_var_w8c;
	wire  adder_var_w9c;
	wire clken;
	wire  [55:0]  divider_1D_w;
	wire  [55:0]  divider_2D_w;
	wire  [52:0]  divider_dffe_1a_w;
	wire  [52:0]  divider_dffe_w;
	wire  [52:0]  divider_next_special_w;
	wire  [52:0]  divider_next_w0c;
	wire  [52:0]  divider_next_w10c;
	wire  [52:0]  divider_next_w11c;
	wire  [52:0]  divider_next_w12c;
	wire  [52:0]  divider_next_w13c;
	wire  [52:0]  divider_next_w14c;
	wire  [52:0]  divider_next_w15c;
	wire  [52:0]  divider_next_w16c;
	wire  [52:0]  divider_next_w17c;
	wire  [52:0]  divider_next_w18c;
	wire  [52:0]  divider_next_w19c;
	wire  [52:0]  divider_next_w1c;
	wire  [52:0]  divider_next_w20c;
	wire  [52:0]  divider_next_w21c;
	wire  [52:0]  divider_next_w22c;
	wire  [52:0]  divider_next_w23c;
	wire  [52:0]  divider_next_w24c;
	wire  [52:0]  divider_next_w25c;
	wire  [52:0]  divider_next_w26c;
	wire  [52:0]  divider_next_w2c;
	wire  [52:0]  divider_next_w3c;
	wire  [52:0]  divider_next_w4c;
	wire  [52:0]  divider_next_w5c;
	wire  [52:0]  divider_next_w6c;
	wire  [52:0]  divider_next_w7c;
	wire  [52:0]  divider_next_w8c;
	wire  [52:0]  divider_next_w9c;
	wire  [52:0]  divider_reg_w0c;
	wire  [52:0]  divider_reg_w10c;
	wire  [52:0]  divider_reg_w11c;
	wire  [52:0]  divider_reg_w12c;
	wire  [52:0]  divider_reg_w13c;
	wire  [52:0]  divider_reg_w14c;
	wire  [52:0]  divider_reg_w15c;
	wire  [52:0]  divider_reg_w16c;
	wire  [52:0]  divider_reg_w17c;
	wire  [52:0]  divider_reg_w18c;
	wire  [52:0]  divider_reg_w19c;
	wire  [52:0]  divider_reg_w1c;
	wire  [52:0]  divider_reg_w20c;
	wire  [52:0]  divider_reg_w21c;
	wire  [52:0]  divider_reg_w22c;
	wire  [52:0]  divider_reg_w23c;
	wire  [52:0]  divider_reg_w24c;
	wire  [52:0]  divider_reg_w25c;
	wire  [52:0]  divider_reg_w26c;
	wire  [52:0]  divider_reg_w2c;
	wire  [52:0]  divider_reg_w3c;
	wire  [52:0]  divider_reg_w4c;
	wire  [52:0]  divider_reg_w5c;
	wire  [52:0]  divider_reg_w6c;
	wire  [52:0]  divider_reg_w7c;
	wire  [52:0]  divider_reg_w8c;
	wire  [52:0]  divider_reg_w9c;
	wire  [52:0]  divider_w;
	wire  [55:0]  divider_zeros_w;
	wire  [55:0]  full_neg_rom_w;
	wire  [55:0]  full_pos_rom_w;
	wire  mux_remainder_w;
	wire  [55:0]  neg_qkd_dffe_w;
	wire  [55:0]  neg_qkd_int_w;
	wire  [55:0]  neg_qkd_reg_w0c;
	wire  [55:0]  neg_qkd_reg_w10c;
	wire  [55:0]  neg_qkd_reg_w11c;
	wire  [55:0]  neg_qkd_reg_w12c;
	wire  [55:0]  neg_qkd_reg_w13c;
	wire  [55:0]  neg_qkd_reg_w14c;
	wire  [55:0]  neg_qkd_reg_w15c;
	wire  [55:0]  neg_qkd_reg_w16c;
	wire  [55:0]  neg_qkd_reg_w17c;
	wire  [55:0]  neg_qkd_reg_w18c;
	wire  [55:0]  neg_qkd_reg_w19c;
	wire  [55:0]  neg_qkd_reg_w1c;
	wire  [55:0]  neg_qkd_reg_w20c;
	wire  [55:0]  neg_qkd_reg_w21c;
	wire  [55:0]  neg_qkd_reg_w22c;
	wire  [55:0]  neg_qkd_reg_w23c;
	wire  [55:0]  neg_qkd_reg_w24c;
	wire  [55:0]  neg_qkd_reg_w25c;
	wire  [55:0]  neg_qkd_reg_w26c;
	wire  [55:0]  neg_qkd_reg_w2c;
	wire  [55:0]  neg_qkd_reg_w3c;
	wire  [55:0]  neg_qkd_reg_w4c;
	wire  [55:0]  neg_qkd_reg_w5c;
	wire  [55:0]  neg_qkd_reg_w6c;
	wire  [55:0]  neg_qkd_reg_w7c;
	wire  [55:0]  neg_qkd_reg_w8c;
	wire  [55:0]  neg_qkd_reg_w9c;
	wire  [1:0]  neg_rom_w0c;
	wire  [1:0]  neg_rom_w10c;
	wire  [1:0]  neg_rom_w11c;
	wire  [1:0]  neg_rom_w12c;
	wire  [1:0]  neg_rom_w13c;
	wire  [1:0]  neg_rom_w14c;
	wire  [1:0]  neg_rom_w15c;
	wire  [1:0]  neg_rom_w16c;
	wire  [1:0]  neg_rom_w17c;
	wire  [1:0]  neg_rom_w18c;
	wire  [1:0]  neg_rom_w19c;
	wire  [1:0]  neg_rom_w1c;
	wire  [1:0]  neg_rom_w20c;
	wire  [1:0]  neg_rom_w21c;
	wire  [1:0]  neg_rom_w22c;
	wire  [1:0]  neg_rom_w23c;
	wire  [1:0]  neg_rom_w24c;
	wire  [1:0]  neg_rom_w25c;
	wire  [1:0]  neg_rom_w26c;
	wire  [1:0]  neg_rom_w27c;
	wire  [1:0]  neg_rom_w2c;
	wire  [1:0]  neg_rom_w3c;
	wire  [1:0]  neg_rom_w4c;
	wire  [1:0]  neg_rom_w5c;
	wire  [1:0]  neg_rom_w6c;
	wire  [1:0]  neg_rom_w7c;
	wire  [1:0]  neg_rom_w8c;
	wire  [1:0]  neg_rom_w9c;
	wire  [1:0]  padded_2_zeros_w;
	wire  [2:0]  padded_3_zeros_w;
	wire  [1:0]  pos_rom_w0c;
	wire  [1:0]  pos_rom_w10c;
	wire  [1:0]  pos_rom_w11c;
	wire  [1:0]  pos_rom_w12c;
	wire  [1:0]  pos_rom_w13c;
	wire  [1:0]  pos_rom_w14c;
	wire  [1:0]  pos_rom_w15c;
	wire  [1:0]  pos_rom_w16c;
	wire  [1:0]  pos_rom_w17c;
	wire  [1:0]  pos_rom_w18c;
	wire  [1:0]  pos_rom_w19c;
	wire  [1:0]  pos_rom_w1c;
	wire  [1:0]  pos_rom_w20c;
	wire  [1:0]  pos_rom_w21c;
	wire  [1:0]  pos_rom_w22c;
	wire  [1:0]  pos_rom_w23c;
	wire  [1:0]  pos_rom_w24c;
	wire  [1:0]  pos_rom_w25c;
	wire  [1:0]  pos_rom_w26c;
	wire  [1:0]  pos_rom_w27c;
	wire  [1:0]  pos_rom_w2c;
	wire  [1:0]  pos_rom_w3c;
	wire  [1:0]  pos_rom_w4c;
	wire  [1:0]  pos_rom_w5c;
	wire  [1:0]  pos_rom_w6c;
	wire  [1:0]  pos_rom_w7c;
	wire  [1:0]  pos_rom_w8c;
	wire  [1:0]  pos_rom_w9c;
	wire  [55:0]  Rk_adder_padded_w;
	wire  [52:0]  Rk_dffe_1a_w;
	wire  [52:0]  Rk_dffe_2a_w;
	wire  [53:0]  Rk_next_w0c;
	wire  [53:0]  Rk_next_w10c;
	wire  [53:0]  Rk_next_w11c;
	wire  [53:0]  Rk_next_w12c;
	wire  [53:0]  Rk_next_w13c;
	wire  [53:0]  Rk_next_w14c;
	wire  [53:0]  Rk_next_w15c;
	wire  [53:0]  Rk_next_w16c;
	wire  [53:0]  Rk_next_w17c;
	wire  [53:0]  Rk_next_w18c;
	wire  [53:0]  Rk_next_w19c;
	wire  [53:0]  Rk_next_w1c;
	wire  [53:0]  Rk_next_w20c;
	wire  [53:0]  Rk_next_w21c;
	wire  [53:0]  Rk_next_w22c;
	wire  [53:0]  Rk_next_w23c;
	wire  [53:0]  Rk_next_w24c;
	wire  [53:0]  Rk_next_w25c;
	wire  [53:0]  Rk_next_w26c;
	wire  [53:0]  Rk_next_w2c;
	wire  [53:0]  Rk_next_w3c;
	wire  [53:0]  Rk_next_w4c;
	wire  [53:0]  Rk_next_w5c;
	wire  [53:0]  Rk_next_w6c;
	wire  [53:0]  Rk_next_w7c;
	wire  [53:0]  Rk_next_w8c;
	wire  [53:0]  Rk_next_w9c;
	wire  [53:0]  Rk_reg_w0c;
	wire  [53:0]  Rk_reg_w10c;
	wire  [53:0]  Rk_reg_w11c;
	wire  [53:0]  Rk_reg_w12c;
	wire  [53:0]  Rk_reg_w13c;
	wire  [53:0]  Rk_reg_w14c;
	wire  [53:0]  Rk_reg_w15c;
	wire  [53:0]  Rk_reg_w16c;
	wire  [53:0]  Rk_reg_w17c;
	wire  [53:0]  Rk_reg_w18c;
	wire  [53:0]  Rk_reg_w19c;
	wire  [53:0]  Rk_reg_w1c;
	wire  [53:0]  Rk_reg_w20c;
	wire  [53:0]  Rk_reg_w21c;
	wire  [53:0]  Rk_reg_w22c;
	wire  [53:0]  Rk_reg_w23c;
	wire  [53:0]  Rk_reg_w24c;
	wire  [53:0]  Rk_reg_w25c;
	wire  [53:0]  Rk_reg_w26c;
	wire  [53:0]  Rk_reg_w2c;
	wire  [53:0]  Rk_reg_w3c;
	wire  [53:0]  Rk_reg_w4c;
	wire  [53:0]  Rk_reg_w5c;
	wire  [53:0]  Rk_reg_w6c;
	wire  [53:0]  Rk_reg_w7c;
	wire  [53:0]  Rk_reg_w8c;
	wire  [53:0]  Rk_reg_w9c;
	wire  [55:0]  Rk_remainder_special_w;
	wire  [52:0]  Rk_remainder_w;
	wire  [7:0]  Rk_rom_padded_w;
	wire  [52:0]  Rk_w;
	wire  [11:0]  rom_add_w;
	wire  [2:0]  rom_dffe_w0c;
	wire  [2:0]  rom_dffe_w10c;
	wire  [2:0]  rom_dffe_w11c;
	wire  [2:0]  rom_dffe_w12c;
	wire  [2:0]  rom_dffe_w13c;
	wire  [2:0]  rom_dffe_w14c;
	wire  [2:0]  rom_dffe_w15c;
	wire  [2:0]  rom_dffe_w16c;
	wire  [2:0]  rom_dffe_w17c;
	wire  [2:0]  rom_dffe_w18c;
	wire  [2:0]  rom_dffe_w19c;
	wire  [2:0]  rom_dffe_w1c;
	wire  [2:0]  rom_dffe_w20c;
	wire  [2:0]  rom_dffe_w21c;
	wire  [2:0]  rom_dffe_w22c;
	wire  [2:0]  rom_dffe_w23c;
	wire  [2:0]  rom_dffe_w24c;
	wire  [2:0]  rom_dffe_w25c;
	wire  [2:0]  rom_dffe_w26c;
	wire  [2:0]  rom_dffe_w27c;
	wire  [2:0]  rom_dffe_w2c;
	wire  [2:0]  rom_dffe_w3c;
	wire  [2:0]  rom_dffe_w4c;
	wire  [2:0]  rom_dffe_w5c;
	wire  [2:0]  rom_dffe_w6c;
	wire  [2:0]  rom_dffe_w7c;
	wire  [2:0]  rom_dffe_w8c;
	wire  [2:0]  rom_dffe_w9c;
	wire  [1:0]  rom_mux_int_w;
	wire  [27:0]  rom_mux_w;
	wire  [2:0]  rom_out_1a_w;
	wire  [2:0]  rom_out_w0c;
	wire  [2:0]  rom_out_w10c;
	wire  [2:0]  rom_out_w11c;
	wire  [2:0]  rom_out_w12c;
	wire  [2:0]  rom_out_w13c;
	wire  [2:0]  rom_out_w14c;
	wire  [2:0]  rom_out_w15c;
	wire  [2:0]  rom_out_w16c;
	wire  [2:0]  rom_out_w17c;
	wire  [2:0]  rom_out_w18c;
	wire  [2:0]  rom_out_w19c;
	wire  [2:0]  rom_out_w1c;
	wire  [2:0]  rom_out_w20c;
	wire  [2:0]  rom_out_w21c;
	wire  [2:0]  rom_out_w22c;
	wire  [2:0]  rom_out_w23c;
	wire  [2:0]  rom_out_w24c;
	wire  [2:0]  rom_out_w25c;
	wire  [2:0]  rom_out_w26c;
	wire  [2:0]  rom_out_w27c;
	wire  [2:0]  rom_out_w2c;
	wire  [2:0]  rom_out_w3c;
	wire  [2:0]  rom_out_w4c;
	wire  [2:0]  rom_out_w5c;
	wire  [2:0]  rom_out_w6c;
	wire  [2:0]  rom_out_w7c;
	wire  [2:0]  rom_out_w8c;
	wire  [2:0]  rom_out_w9c;
	wire  [55:0]  srt_adjust_w;
	wire  [55:0]  srt_adjusted_w;
	wire  [55:0]  true_quotient_w;
	wire  [1:0]  zero_quotient_w;

	mydiv_adder_block_5aa   adder_block35
	( 
	.adder_var(adder_var_w0c),
	.divider_next(wire_adder_block35_divider_next),
	.divider_reg(divider_reg_w0c),
	.neg_qkd_reg(neg_qkd_reg_w0c),
	.Rk_next(wire_adder_block35_Rk_next),
	.Rk_reg(Rk_reg_w0c));
	mydiv_adder_block_5aa   adder_block36
	( 
	.adder_var(adder_var_w1c),
	.divider_next(wire_adder_block36_divider_next),
	.divider_reg(divider_reg_w1c),
	.neg_qkd_reg(neg_qkd_reg_w1c),
	.Rk_next(wire_adder_block36_Rk_next),
	.Rk_reg(Rk_reg_w1c));
	mydiv_adder_block_5aa   adder_block37
	( 
	.adder_var(adder_var_w2c),
	.divider_next(wire_adder_block37_divider_next),
	.divider_reg(divider_reg_w2c),
	.neg_qkd_reg(neg_qkd_reg_w2c),
	.Rk_next(wire_adder_block37_Rk_next),
	.Rk_reg(Rk_reg_w2c));
	mydiv_adder_block_5aa   adder_block38
	( 
	.adder_var(adder_var_w3c),
	.divider_next(wire_adder_block38_divider_next),
	.divider_reg(divider_reg_w3c),
	.neg_qkd_reg(neg_qkd_reg_w3c),
	.Rk_next(wire_adder_block38_Rk_next),
	.Rk_reg(Rk_reg_w3c));
	mydiv_adder_block_5aa   adder_block39
	( 
	.adder_var(adder_var_w4c),
	.divider_next(wire_adder_block39_divider_next),
	.divider_reg(divider_reg_w4c),
	.neg_qkd_reg(neg_qkd_reg_w4c),
	.Rk_next(wire_adder_block39_Rk_next),
	.Rk_reg(Rk_reg_w4c));
	mydiv_adder_block_5aa   adder_block40
	( 
	.adder_var(adder_var_w5c),
	.divider_next(wire_adder_block40_divider_next),
	.divider_reg(divider_reg_w5c),
	.neg_qkd_reg(neg_qkd_reg_w5c),
	.Rk_next(wire_adder_block40_Rk_next),
	.Rk_reg(Rk_reg_w5c));
	mydiv_adder_block_5aa   adder_block41
	( 
	.adder_var(adder_var_w6c),
	.divider_next(wire_adder_block41_divider_next),
	.divider_reg(divider_reg_w6c),
	.neg_qkd_reg(neg_qkd_reg_w6c),
	.Rk_next(wire_adder_block41_Rk_next),
	.Rk_reg(Rk_reg_w6c));
	mydiv_adder_block_5aa   adder_block42
	( 
	.adder_var(adder_var_w7c),
	.divider_next(wire_adder_block42_divider_next),
	.divider_reg(divider_reg_w7c),
	.neg_qkd_reg(neg_qkd_reg_w7c),
	.Rk_next(wire_adder_block42_Rk_next),
	.Rk_reg(Rk_reg_w7c));
	mydiv_adder_block_5aa   adder_block43
	( 
	.adder_var(adder_var_w8c),
	.divider_next(wire_adder_block43_divider_next),
	.divider_reg(divider_reg_w8c),
	.neg_qkd_reg(neg_qkd_reg_w8c),
	.Rk_next(wire_adder_block43_Rk_next),
	.Rk_reg(Rk_reg_w8c));
	mydiv_adder_block_5aa   adder_block44
	( 
	.adder_var(adder_var_w9c),
	.divider_next(wire_adder_block44_divider_next),
	.divider_reg(divider_reg_w9c),
	.neg_qkd_reg(neg_qkd_reg_w9c),
	.Rk_next(wire_adder_block44_Rk_next),
	.Rk_reg(Rk_reg_w9c));
	mydiv_adder_block_5aa   adder_block45
	( 
	.adder_var(adder_var_w10c),
	.divider_next(wire_adder_block45_divider_next),
	.divider_reg(divider_reg_w10c),
	.neg_qkd_reg(neg_qkd_reg_w10c),
	.Rk_next(wire_adder_block45_Rk_next),
	.Rk_reg(Rk_reg_w10c));
	mydiv_adder_block_5aa   adder_block46
	( 
	.adder_var(adder_var_w11c),
	.divider_next(wire_adder_block46_divider_next),
	.divider_reg(divider_reg_w11c),
	.neg_qkd_reg(neg_qkd_reg_w11c),
	.Rk_next(wire_adder_block46_Rk_next),
	.Rk_reg(Rk_reg_w11c));
	mydiv_adder_block_5aa   adder_block47
	( 
	.adder_var(adder_var_w12c),
	.divider_next(wire_adder_block47_divider_next),
	.divider_reg(divider_reg_w12c),
	.neg_qkd_reg(neg_qkd_reg_w12c),
	.Rk_next(wire_adder_block47_Rk_next),
	.Rk_reg(Rk_reg_w12c));
	mydiv_adder_block_5aa   adder_block48
	( 
	.adder_var(adder_var_w13c),
	.divider_next(wire_adder_block48_divider_next),
	.divider_reg(divider_reg_w13c),
	.neg_qkd_reg(neg_qkd_reg_w13c),
	.Rk_next(wire_adder_block48_Rk_next),
	.Rk_reg(Rk_reg_w13c));
	mydiv_adder_block_5aa   adder_block49
	( 
	.adder_var(adder_var_w14c),
	.divider_next(wire_adder_block49_divider_next),
	.divider_reg(divider_reg_w14c),
	.neg_qkd_reg(neg_qkd_reg_w14c),
	.Rk_next(wire_adder_block49_Rk_next),
	.Rk_reg(Rk_reg_w14c));
	mydiv_adder_block_5aa   adder_block50
	( 
	.adder_var(adder_var_w15c),
	.divider_next(wire_adder_block50_divider_next),
	.divider_reg(divider_reg_w15c),
	.neg_qkd_reg(neg_qkd_reg_w15c),
	.Rk_next(wire_adder_block50_Rk_next),
	.Rk_reg(Rk_reg_w15c));
	mydiv_adder_block_5aa   adder_block51
	( 
	.adder_var(adder_var_w16c),
	.divider_next(wire_adder_block51_divider_next),
	.divider_reg(divider_reg_w16c),
	.neg_qkd_reg(neg_qkd_reg_w16c),
	.Rk_next(wire_adder_block51_Rk_next),
	.Rk_reg(Rk_reg_w16c));
	mydiv_adder_block_5aa   adder_block52
	( 
	.adder_var(adder_var_w17c),
	.divider_next(wire_adder_block52_divider_next),
	.divider_reg(divider_reg_w17c),
	.neg_qkd_reg(neg_qkd_reg_w17c),
	.Rk_next(wire_adder_block52_Rk_next),
	.Rk_reg(Rk_reg_w17c));
	mydiv_adder_block_5aa   adder_block53
	( 
	.adder_var(adder_var_w18c),
	.divider_next(wire_adder_block53_divider_next),
	.divider_reg(divider_reg_w18c),
	.neg_qkd_reg(neg_qkd_reg_w18c),
	.Rk_next(wire_adder_block53_Rk_next),
	.Rk_reg(Rk_reg_w18c));
	mydiv_adder_block_5aa   adder_block54
	( 
	.adder_var(adder_var_w19c),
	.divider_next(wire_adder_block54_divider_next),
	.divider_reg(divider_reg_w19c),
	.neg_qkd_reg(neg_qkd_reg_w19c),
	.Rk_next(wire_adder_block54_Rk_next),
	.Rk_reg(Rk_reg_w19c));
	mydiv_adder_block_5aa   adder_block55
	( 
	.adder_var(adder_var_w20c),
	.divider_next(wire_adder_block55_divider_next),
	.divider_reg(divider_reg_w20c),
	.neg_qkd_reg(neg_qkd_reg_w20c),
	.Rk_next(wire_adder_block55_Rk_next),
	.Rk_reg(Rk_reg_w20c));
	mydiv_adder_block_5aa   adder_block56
	( 
	.adder_var(adder_var_w21c),
	.divider_next(wire_adder_block56_divider_next),
	.divider_reg(divider_reg_w21c),
	.neg_qkd_reg(neg_qkd_reg_w21c),
	.Rk_next(wire_adder_block56_Rk_next),
	.Rk_reg(Rk_reg_w21c));
	mydiv_adder_block_5aa   adder_block57
	( 
	.adder_var(adder_var_w22c),
	.divider_next(wire_adder_block57_divider_next),
	.divider_reg(divider_reg_w22c),
	.neg_qkd_reg(neg_qkd_reg_w22c),
	.Rk_next(wire_adder_block57_Rk_next),
	.Rk_reg(Rk_reg_w22c));
	mydiv_adder_block_5aa   adder_block58
	( 
	.adder_var(adder_var_w23c),
	.divider_next(wire_adder_block58_divider_next),
	.divider_reg(divider_reg_w23c),
	.neg_qkd_reg(neg_qkd_reg_w23c),
	.Rk_next(wire_adder_block58_Rk_next),
	.Rk_reg(Rk_reg_w23c));
	mydiv_adder_block_5aa   adder_block59
	( 
	.adder_var(adder_var_w24c),
	.divider_next(wire_adder_block59_divider_next),
	.divider_reg(divider_reg_w24c),
	.neg_qkd_reg(neg_qkd_reg_w24c),
	.Rk_next(wire_adder_block59_Rk_next),
	.Rk_reg(Rk_reg_w24c));
	mydiv_adder_block_5aa   adder_block60
	( 
	.adder_var(adder_var_w25c),
	.divider_next(wire_adder_block60_divider_next),
	.divider_reg(divider_reg_w25c),
	.neg_qkd_reg(neg_qkd_reg_w25c),
	.Rk_next(wire_adder_block60_Rk_next),
	.Rk_reg(Rk_reg_w25c));
	mydiv_adder_last_block_oqa   adder_last_block62
	( 
	.adder_var(adder_var_w26c),
	.divider_next(wire_adder_last_block62_divider_next),
	.divider_reg(divider_reg_w26c),
	.neg_qkd_reg(neg_qkd_reg_w26c),
	.Rk_next(wire_adder_last_block62_Rk_next),
	.Rk_reg(Rk_reg_w26c));
	altsyncram   altsyncram7
	( 
	.address_a(rom_add_w),
	.clock0(clock),
	.clocken0(clken),
	.eccstatus(),
	.q_a(wire_altsyncram7_q_a),
	.q_b()
	`ifdef FORMAL_VERIFICATION
	`else
	// synopsys translate_off
	`endif
	,
	.aclr0(1'b0),
	.aclr1(1'b0),
	.address_b({1{1'b1}}),
	.addressstall_a(1'b0),
	.addressstall_b(1'b0),
	.byteena_a({1{1'b1}}),
	.byteena_b({1{1'b1}}),
	.clock1(1'b1),
	.clocken1(1'b1),
	.clocken2(1'b1),
	.clocken3(1'b1),
	.data_a({3{1'b1}}),
	.data_b({1{1'b1}}),
	.rden_a(1'b1),
	.rden_b(1'b1),
	.wren_a(1'b0),
	.wren_b(1'b0)
	`ifdef FORMAL_VERIFICATION
	`else
	// synopsys translate_on
	`endif
	);
	defparam
		altsyncram7.init_file = "mydiv.hex",
		altsyncram7.operation_mode = "ROM",
		altsyncram7.width_a = 3,
		altsyncram7.widthad_a = 12,
		altsyncram7.intended_device_family = "Cyclone II",
		altsyncram7.lpm_type = "altsyncram";
	// synopsys translate_off
	initial
		adder_var_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) adder_var_dffe <= 1'b0;
		else if  (clken == 1'b1)   adder_var_dffe <= adder_var_int_w;
	// synopsys translate_off
	initial
		divider_dffe_1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) divider_dffe_1a <= 53'b0;
		else if  (clken == 1'b1)   divider_dffe_1a <= divider_w;
	// synopsys translate_off
	initial
		divider_dffe_2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) divider_dffe_2a <= 53'b0;
		else if  (clken == 1'b1)   divider_dffe_2a <= divider_dffe_1a_w;
	// synopsys translate_off
	initial
		neg_qkd_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) neg_qkd_dffe <= 56'b0;
		else if  (clken == 1'b1)   neg_qkd_dffe <= neg_qkd_int_w;
	// synopsys translate_off
	initial
		Rk_dffe_1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Rk_dffe_1a <= 53'b0;
		else if  (clken == 1'b1)   Rk_dffe_1a <= Rk_w;
	// synopsys translate_off
	initial
		Rk_dffe_2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) Rk_dffe_2a <= 53'b0;
		else if  (clken == 1'b1)   Rk_dffe_2a <= Rk_dffe_1a_w;
	// synopsys translate_off
	initial
		rom_out_2a_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_out_2a_dffe <= 3'b0;
		else if  (clken == 1'b1)   rom_out_2a_dffe <= rom_out_1a_w;
	// synopsys translate_off
	initial
		rom_reg_dffe0c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe0c <= 162'b0;
		else if  (clken == 1'b1)   rom_reg_dffe0c <= {rom_reg_dffe0c[158:0], rom_out_w0c};
	// synopsys translate_off
	initial
		rom_reg_dffe10c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe10c <= 102'b0;
		else if  (clken == 1'b1)   rom_reg_dffe10c <= {rom_reg_dffe10c[98:0], rom_out_w10c};
	// synopsys translate_off
	initial
		rom_reg_dffe11c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe11c <= 96'b0;
		else if  (clken == 1'b1)   rom_reg_dffe11c <= {rom_reg_dffe11c[92:0], rom_out_w11c};
	// synopsys translate_off
	initial
		rom_reg_dffe12c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe12c <= 90'b0;
		else if  (clken == 1'b1)   rom_reg_dffe12c <= {rom_reg_dffe12c[86:0], rom_out_w12c};
	// synopsys translate_off
	initial
		rom_reg_dffe13c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe13c <= 84'b0;
		else if  (clken == 1'b1)   rom_reg_dffe13c <= {rom_reg_dffe13c[80:0], rom_out_w13c};
	// synopsys translate_off
	initial
		rom_reg_dffe14c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe14c <= 78'b0;
		else if  (clken == 1'b1)   rom_reg_dffe14c <= {rom_reg_dffe14c[74:0], rom_out_w14c};
	// synopsys translate_off
	initial
		rom_reg_dffe15c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe15c <= 72'b0;
		else if  (clken == 1'b1)   rom_reg_dffe15c <= {rom_reg_dffe15c[68:0], rom_out_w15c};
	// synopsys translate_off
	initial
		rom_reg_dffe16c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe16c <= 66'b0;
		else if  (clken == 1'b1)   rom_reg_dffe16c <= {rom_reg_dffe16c[62:0], rom_out_w16c};
	// synopsys translate_off
	initial
		rom_reg_dffe17c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe17c <= 60'b0;
		else if  (clken == 1'b1)   rom_reg_dffe17c <= {rom_reg_dffe17c[56:0], rom_out_w17c};
	// synopsys translate_off
	initial
		rom_reg_dffe18c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe18c <= 54'b0;
		else if  (clken == 1'b1)   rom_reg_dffe18c <= {rom_reg_dffe18c[50:0], rom_out_w18c};
	// synopsys translate_off
	initial
		rom_reg_dffe19c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe19c <= 48'b0;
		else if  (clken == 1'b1)   rom_reg_dffe19c <= {rom_reg_dffe19c[44:0], rom_out_w19c};
	// synopsys translate_off
	initial
		rom_reg_dffe1c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe1c <= 156'b0;
		else if  (clken == 1'b1)   rom_reg_dffe1c <= {rom_reg_dffe1c[152:0], rom_out_w1c};
	// synopsys translate_off
	initial
		rom_reg_dffe20c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe20c <= 42'b0;
		else if  (clken == 1'b1)   rom_reg_dffe20c <= {rom_reg_dffe20c[38:0], rom_out_w20c};
	// synopsys translate_off
	initial
		rom_reg_dffe21c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe21c <= 36'b0;
		else if  (clken == 1'b1)   rom_reg_dffe21c <= {rom_reg_dffe21c[32:0], rom_out_w21c};
	// synopsys translate_off
	initial
		rom_reg_dffe22c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe22c <= 30'b0;
		else if  (clken == 1'b1)   rom_reg_dffe22c <= {rom_reg_dffe22c[26:0], rom_out_w22c};
	// synopsys translate_off
	initial
		rom_reg_dffe23c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe23c <= 24'b0;
		else if  (clken == 1'b1)   rom_reg_dffe23c <= {rom_reg_dffe23c[20:0], rom_out_w23c};
	// synopsys translate_off
	initial
		rom_reg_dffe24c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe24c <= 18'b0;
		else if  (clken == 1'b1)   rom_reg_dffe24c <= {rom_reg_dffe24c[14:0], rom_out_w24c};
	// synopsys translate_off
	initial
		rom_reg_dffe25c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe25c <= 12'b0;
		else if  (clken == 1'b1)   rom_reg_dffe25c <= {rom_reg_dffe25c[8:0], rom_out_w25c};
	// synopsys translate_off
	initial
		rom_reg_dffe26c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe26c <= 6'b0;
		else if  (clken == 1'b1)   rom_reg_dffe26c <= {rom_reg_dffe26c[2:0], rom_out_w26c};
	// synopsys translate_off
	initial
		rom_reg_dffe2c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe2c <= 150'b0;
		else if  (clken == 1'b1)   rom_reg_dffe2c <= {rom_reg_dffe2c[146:0], rom_out_w2c};
	// synopsys translate_off
	initial
		rom_reg_dffe3c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe3c <= 144'b0;
		else if  (clken == 1'b1)   rom_reg_dffe3c <= {rom_reg_dffe3c[140:0], rom_out_w3c};
	// synopsys translate_off
	initial
		rom_reg_dffe4c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe4c <= 138'b0;
		else if  (clken == 1'b1)   rom_reg_dffe4c <= {rom_reg_dffe4c[134:0], rom_out_w4c};
	// synopsys translate_off
	initial
		rom_reg_dffe5c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe5c <= 132'b0;
		else if  (clken == 1'b1)   rom_reg_dffe5c <= {rom_reg_dffe5c[128:0], rom_out_w5c};
	// synopsys translate_off
	initial
		rom_reg_dffe6c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe6c <= 126'b0;
		else if  (clken == 1'b1)   rom_reg_dffe6c <= {rom_reg_dffe6c[122:0], rom_out_w6c};
	// synopsys translate_off
	initial
		rom_reg_dffe7c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe7c <= 120'b0;
		else if  (clken == 1'b1)   rom_reg_dffe7c <= {rom_reg_dffe7c[116:0], rom_out_w7c};
	// synopsys translate_off
	initial
		rom_reg_dffe8c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe8c <= 114'b0;
		else if  (clken == 1'b1)   rom_reg_dffe8c <= {rom_reg_dffe8c[110:0], rom_out_w8c};
	// synopsys translate_off
	initial
		rom_reg_dffe9c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rom_reg_dffe9c <= 108'b0;
		else if  (clken == 1'b1)   rom_reg_dffe9c <= {rom_reg_dffe9c[104:0], rom_out_w9c};
	assign
		wire_add_sub63_result = wire_add_sub63_dataa + wire_add_sub63_datab;
	assign
		wire_add_sub63_dataa = Rk_remainder_special_w[52:0],
		wire_add_sub63_datab = divider_next_special_w;
	assign
		wire_add_sub64_result = wire_add_sub64_dataa - wire_add_sub64_datab;
	assign
		wire_add_sub64_dataa = full_pos_rom_w,
		wire_add_sub64_datab = full_neg_rom_w;
	assign
		wire_add_sub65_result = wire_add_sub65_dataa - wire_add_sub65_datab;
	assign
		wire_add_sub65_dataa = srt_adjust_w,
		wire_add_sub65_datab = 56'b00000000000000000000000000000000000000000000000000000001;
	always @(wire_add_sub8_add_sub or wire_add_sub8_dataa or wire_add_sub8_datab)
		if (wire_add_sub8_add_sub == 1'b1) wire_add_sub8_result_int = wire_add_sub8_dataa + wire_add_sub8_datab;
		else wire_add_sub8_result_int = wire_add_sub8_dataa - wire_add_sub8_datab;
	assign
		wire_add_sub8_result = wire_add_sub8_result_int;
	assign
		wire_add_sub8_add_sub = adder_var_dffe_w,
		wire_add_sub8_dataa = Rk_adder_padded_w,
		wire_add_sub8_datab = neg_qkd_dffe_w;
	mydiv_rom_block_rck   rom_block10
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block10_adder_var),
	.clock(clock),
	.divider(divider_next_w1c),
	.divider_reg(wire_rom_block10_divider_reg),
	.neg_qkd_reg(wire_rom_block10_neg_qkd_reg),
	.Rk(Rk_next_w1c),
	.Rk_reg(wire_rom_block10_Rk_reg),
	.rom(wire_rom_block10_rom));
	mydiv_rom_block_rck   rom_block11
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block11_adder_var),
	.clock(clock),
	.divider(divider_next_w2c),
	.divider_reg(wire_rom_block11_divider_reg),
	.neg_qkd_reg(wire_rom_block11_neg_qkd_reg),
	.Rk(Rk_next_w2c),
	.Rk_reg(wire_rom_block11_Rk_reg),
	.rom(wire_rom_block11_rom));
	mydiv_rom_block_rck   rom_block12
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block12_adder_var),
	.clock(clock),
	.divider(divider_next_w3c),
	.divider_reg(wire_rom_block12_divider_reg),
	.neg_qkd_reg(wire_rom_block12_neg_qkd_reg),
	.Rk(Rk_next_w3c),
	.Rk_reg(wire_rom_block12_Rk_reg),
	.rom(wire_rom_block12_rom));
	mydiv_rom_block_rck   rom_block13
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block13_adder_var),
	.clock(clock),
	.divider(divider_next_w4c),
	.divider_reg(wire_rom_block13_divider_reg),
	.neg_qkd_reg(wire_rom_block13_neg_qkd_reg),
	.Rk(Rk_next_w4c),
	.Rk_reg(wire_rom_block13_Rk_reg),
	.rom(wire_rom_block13_rom));
	mydiv_rom_block_rck   rom_block14
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block14_adder_var),
	.clock(clock),
	.divider(divider_next_w5c),
	.divider_reg(wire_rom_block14_divider_reg),
	.neg_qkd_reg(wire_rom_block14_neg_qkd_reg),
	.Rk(Rk_next_w5c),
	.Rk_reg(wire_rom_block14_Rk_reg),
	.rom(wire_rom_block14_rom));
	mydiv_rom_block_rck   rom_block15
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block15_adder_var),
	.clock(clock),
	.divider(divider_next_w6c),
	.divider_reg(wire_rom_block15_divider_reg),
	.neg_qkd_reg(wire_rom_block15_neg_qkd_reg),
	.Rk(Rk_next_w6c),
	.Rk_reg(wire_rom_block15_Rk_reg),
	.rom(wire_rom_block15_rom));
	mydiv_rom_block_rck   rom_block16
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block16_adder_var),
	.clock(clock),
	.divider(divider_next_w7c),
	.divider_reg(wire_rom_block16_divider_reg),
	.neg_qkd_reg(wire_rom_block16_neg_qkd_reg),
	.Rk(Rk_next_w7c),
	.Rk_reg(wire_rom_block16_Rk_reg),
	.rom(wire_rom_block16_rom));
	mydiv_rom_block_rck   rom_block17
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block17_adder_var),
	.clock(clock),
	.divider(divider_next_w8c),
	.divider_reg(wire_rom_block17_divider_reg),
	.neg_qkd_reg(wire_rom_block17_neg_qkd_reg),
	.Rk(Rk_next_w8c),
	.Rk_reg(wire_rom_block17_Rk_reg),
	.rom(wire_rom_block17_rom));
	mydiv_rom_block_rck   rom_block18
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block18_adder_var),
	.clock(clock),
	.divider(divider_next_w9c),
	.divider_reg(wire_rom_block18_divider_reg),
	.neg_qkd_reg(wire_rom_block18_neg_qkd_reg),
	.Rk(Rk_next_w9c),
	.Rk_reg(wire_rom_block18_Rk_reg),
	.rom(wire_rom_block18_rom));
	mydiv_rom_block_rck   rom_block19
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block19_adder_var),
	.clock(clock),
	.divider(divider_next_w10c),
	.divider_reg(wire_rom_block19_divider_reg),
	.neg_qkd_reg(wire_rom_block19_neg_qkd_reg),
	.Rk(Rk_next_w10c),
	.Rk_reg(wire_rom_block19_Rk_reg),
	.rom(wire_rom_block19_rom));
	mydiv_rom_block_rck   rom_block20
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block20_adder_var),
	.clock(clock),
	.divider(divider_next_w11c),
	.divider_reg(wire_rom_block20_divider_reg),
	.neg_qkd_reg(wire_rom_block20_neg_qkd_reg),
	.Rk(Rk_next_w11c),
	.Rk_reg(wire_rom_block20_Rk_reg),
	.rom(wire_rom_block20_rom));
	mydiv_rom_block_rck   rom_block21
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block21_adder_var),
	.clock(clock),
	.divider(divider_next_w12c),
	.divider_reg(wire_rom_block21_divider_reg),
	.neg_qkd_reg(wire_rom_block21_neg_qkd_reg),
	.Rk(Rk_next_w12c),
	.Rk_reg(wire_rom_block21_Rk_reg),
	.rom(wire_rom_block21_rom));
	mydiv_rom_block_rck   rom_block22
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block22_adder_var),
	.clock(clock),
	.divider(divider_next_w13c),
	.divider_reg(wire_rom_block22_divider_reg),
	.neg_qkd_reg(wire_rom_block22_neg_qkd_reg),
	.Rk(Rk_next_w13c),
	.Rk_reg(wire_rom_block22_Rk_reg),
	.rom(wire_rom_block22_rom));
	mydiv_rom_block_rck   rom_block23
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block23_adder_var),
	.clock(clock),
	.divider(divider_next_w14c),
	.divider_reg(wire_rom_block23_divider_reg),
	.neg_qkd_reg(wire_rom_block23_neg_qkd_reg),
	.Rk(Rk_next_w14c),
	.Rk_reg(wire_rom_block23_Rk_reg),
	.rom(wire_rom_block23_rom));
	mydiv_rom_block_rck   rom_block24
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block24_adder_var),
	.clock(clock),
	.divider(divider_next_w15c),
	.divider_reg(wire_rom_block24_divider_reg),
	.neg_qkd_reg(wire_rom_block24_neg_qkd_reg),
	.Rk(Rk_next_w15c),
	.Rk_reg(wire_rom_block24_Rk_reg),
	.rom(wire_rom_block24_rom));
	mydiv_rom_block_rck   rom_block25
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block25_adder_var),
	.clock(clock),
	.divider(divider_next_w16c),
	.divider_reg(wire_rom_block25_divider_reg),
	.neg_qkd_reg(wire_rom_block25_neg_qkd_reg),
	.Rk(Rk_next_w16c),
	.Rk_reg(wire_rom_block25_Rk_reg),
	.rom(wire_rom_block25_rom));
	mydiv_rom_block_rck   rom_block26
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block26_adder_var),
	.clock(clock),
	.divider(divider_next_w17c),
	.divider_reg(wire_rom_block26_divider_reg),
	.neg_qkd_reg(wire_rom_block26_neg_qkd_reg),
	.Rk(Rk_next_w17c),
	.Rk_reg(wire_rom_block26_Rk_reg),
	.rom(wire_rom_block26_rom));
	mydiv_rom_block_rck   rom_block27
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block27_adder_var),
	.clock(clock),
	.divider(divider_next_w18c),
	.divider_reg(wire_rom_block27_divider_reg),
	.neg_qkd_reg(wire_rom_block27_neg_qkd_reg),
	.Rk(Rk_next_w18c),
	.Rk_reg(wire_rom_block27_Rk_reg),
	.rom(wire_rom_block27_rom));
	mydiv_rom_block_rck   rom_block28
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block28_adder_var),
	.clock(clock),
	.divider(divider_next_w19c),
	.divider_reg(wire_rom_block28_divider_reg),
	.neg_qkd_reg(wire_rom_block28_neg_qkd_reg),
	.Rk(Rk_next_w19c),
	.Rk_reg(wire_rom_block28_Rk_reg),
	.rom(wire_rom_block28_rom));
	mydiv_rom_block_rck   rom_block29
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block29_adder_var),
	.clock(clock),
	.divider(divider_next_w20c),
	.divider_reg(wire_rom_block29_divider_reg),
	.neg_qkd_reg(wire_rom_block29_neg_qkd_reg),
	.Rk(Rk_next_w20c),
	.Rk_reg(wire_rom_block29_Rk_reg),
	.rom(wire_rom_block29_rom));
	mydiv_rom_block_rck   rom_block30
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block30_adder_var),
	.clock(clock),
	.divider(divider_next_w21c),
	.divider_reg(wire_rom_block30_divider_reg),
	.neg_qkd_reg(wire_rom_block30_neg_qkd_reg),
	.Rk(Rk_next_w21c),
	.Rk_reg(wire_rom_block30_Rk_reg),
	.rom(wire_rom_block30_rom));
	mydiv_rom_block_rck   rom_block31
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block31_adder_var),
	.clock(clock),
	.divider(divider_next_w22c),
	.divider_reg(wire_rom_block31_divider_reg),
	.neg_qkd_reg(wire_rom_block31_neg_qkd_reg),
	.Rk(Rk_next_w22c),
	.Rk_reg(wire_rom_block31_Rk_reg),
	.rom(wire_rom_block31_rom));
	mydiv_rom_block_rck   rom_block32
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block32_adder_var),
	.clock(clock),
	.divider(divider_next_w23c),
	.divider_reg(wire_rom_block32_divider_reg),
	.neg_qkd_reg(wire_rom_block32_neg_qkd_reg),
	.Rk(Rk_next_w23c),
	.Rk_reg(wire_rom_block32_Rk_reg),
	.rom(wire_rom_block32_rom));
	mydiv_rom_block_rck   rom_block33
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block33_adder_var),
	.clock(clock),
	.divider(divider_next_w24c),
	.divider_reg(wire_rom_block33_divider_reg),
	.neg_qkd_reg(wire_rom_block33_neg_qkd_reg),
	.Rk(Rk_next_w24c),
	.Rk_reg(wire_rom_block33_Rk_reg),
	.rom(wire_rom_block33_rom));
	mydiv_rom_block_rck   rom_block34
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block34_adder_var),
	.clock(clock),
	.divider(divider_next_w25c),
	.divider_reg(wire_rom_block34_divider_reg),
	.neg_qkd_reg(wire_rom_block34_neg_qkd_reg),
	.Rk(Rk_next_w25c),
	.Rk_reg(wire_rom_block34_Rk_reg),
	.rom(wire_rom_block34_rom));
	mydiv_rom_block_rck   rom_block61
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block61_adder_var),
	.clock(clock),
	.divider(divider_next_w26c),
	.divider_reg(wire_rom_block61_divider_reg),
	.neg_qkd_reg(wire_rom_block61_neg_qkd_reg),
	.Rk(Rk_next_w26c),
	.Rk_reg(wire_rom_block61_Rk_reg),
	.rom(wire_rom_block61_rom));
	mydiv_rom_block_rck   rom_block9
	( 
	.aclr(aclr),
	.adder_var(wire_rom_block9_adder_var),
	.clock(clock),
	.divider(divider_next_w0c),
	.divider_reg(wire_rom_block9_divider_reg),
	.neg_qkd_reg(wire_rom_block9_neg_qkd_reg),
	.Rk(Rk_next_w0c),
	.Rk_reg(wire_rom_block9_Rk_reg),
	.rom(wire_rom_block9_rom));
	assign
		added_remainder_w = wire_add_sub63_result,
		adder_var_dffe_w = adder_var_dffe,
		adder_var_int_w = rom_out_1a_w[2],
		adder_var_w0c = wire_rom_block9_adder_var,
		adder_var_w10c = wire_rom_block19_adder_var,
		adder_var_w11c = wire_rom_block20_adder_var,
		adder_var_w12c = wire_rom_block21_adder_var,
		adder_var_w13c = wire_rom_block22_adder_var,
		adder_var_w14c = wire_rom_block23_adder_var,
		adder_var_w15c = wire_rom_block24_adder_var,
		adder_var_w16c = wire_rom_block25_adder_var,
		adder_var_w17c = wire_rom_block26_adder_var,
		adder_var_w18c = wire_rom_block27_adder_var,
		adder_var_w19c = wire_rom_block28_adder_var,
		adder_var_w1c = wire_rom_block10_adder_var,
		adder_var_w20c = wire_rom_block29_adder_var,
		adder_var_w21c = wire_rom_block30_adder_var,
		adder_var_w22c = wire_rom_block31_adder_var,
		adder_var_w23c = wire_rom_block32_adder_var,
		adder_var_w24c = wire_rom_block33_adder_var,
		adder_var_w25c = wire_rom_block34_adder_var,
		adder_var_w26c = wire_rom_block61_adder_var,
		adder_var_w2c = wire_rom_block11_adder_var,
		adder_var_w3c = wire_rom_block12_adder_var,
		adder_var_w4c = wire_rom_block13_adder_var,
		adder_var_w5c = wire_rom_block14_adder_var,
		adder_var_w6c = wire_rom_block15_adder_var,
		adder_var_w7c = wire_rom_block16_adder_var,
		adder_var_w8c = wire_rom_block17_adder_var,
		adder_var_w9c = wire_rom_block18_adder_var,
		clken = 1'b1,
		divider = divider_next_special_w,
		divider_1D_w = {padded_3_zeros_w, divider_dffe_1a_w},
		divider_2D_w = {padded_2_zeros_w, divider_dffe_1a_w, 1'b0},
		divider_dffe_1a_w = divider_dffe_1a,
		divider_dffe_w = divider_dffe_2a,
		divider_next_special_w = wire_adder_last_block62_divider_next,
		divider_next_w0c = divider_dffe_w,
		divider_next_w10c = wire_adder_block44_divider_next,
		divider_next_w11c = wire_adder_block45_divider_next,
		divider_next_w12c = wire_adder_block46_divider_next,
		divider_next_w13c = wire_adder_block47_divider_next,
		divider_next_w14c = wire_adder_block48_divider_next,
		divider_next_w15c = wire_adder_block49_divider_next,
		divider_next_w16c = wire_adder_block50_divider_next,
		divider_next_w17c = wire_adder_block51_divider_next,
		divider_next_w18c = wire_adder_block52_divider_next,
		divider_next_w19c = wire_adder_block53_divider_next,
		divider_next_w1c = wire_adder_block35_divider_next,
		divider_next_w20c = wire_adder_block54_divider_next,
		divider_next_w21c = wire_adder_block55_divider_next,
		divider_next_w22c = wire_adder_block56_divider_next,
		divider_next_w23c = wire_adder_block57_divider_next,
		divider_next_w24c = wire_adder_block58_divider_next,
		divider_next_w25c = wire_adder_block59_divider_next,
		divider_next_w26c = wire_adder_block60_divider_next,
		divider_next_w2c = wire_adder_block36_divider_next,
		divider_next_w3c = wire_adder_block37_divider_next,
		divider_next_w4c = wire_adder_block38_divider_next,
		divider_next_w5c = wire_adder_block39_divider_next,
		divider_next_w6c = wire_adder_block40_divider_next,
		divider_next_w7c = wire_adder_block41_divider_next,
		divider_next_w8c = wire_adder_block42_divider_next,
		divider_next_w9c = wire_adder_block43_divider_next,
		divider_reg_w0c = wire_rom_block9_divider_reg,
		divider_reg_w10c = wire_rom_block19_divider_reg,
		divider_reg_w11c = wire_rom_block20_divider_reg,
		divider_reg_w12c = wire_rom_block21_divider_reg,
		divider_reg_w13c = wire_rom_block22_divider_reg,
		divider_reg_w14c = wire_rom_block23_divider_reg,
		divider_reg_w15c = wire_rom_block24_divider_reg,
		divider_reg_w16c = wire_rom_block25_divider_reg,
		divider_reg_w17c = wire_rom_block26_divider_reg,
		divider_reg_w18c = wire_rom_block27_divider_reg,
		divider_reg_w19c = wire_rom_block28_divider_reg,
		divider_reg_w1c = wire_rom_block10_divider_reg,
		divider_reg_w20c = wire_rom_block29_divider_reg,
		divider_reg_w21c = wire_rom_block30_divider_reg,
		divider_reg_w22c = wire_rom_block31_divider_reg,
		divider_reg_w23c = wire_rom_block32_divider_reg,
		divider_reg_w24c = wire_rom_block33_divider_reg,
		divider_reg_w25c = wire_rom_block34_divider_reg,
		divider_reg_w26c = wire_rom_block61_divider_reg,
		divider_reg_w2c = wire_rom_block11_divider_reg,
		divider_reg_w3c = wire_rom_block12_divider_reg,
		divider_reg_w4c = wire_rom_block13_divider_reg,
		divider_reg_w5c = wire_rom_block14_divider_reg,
		divider_reg_w6c = wire_rom_block15_divider_reg,
		divider_reg_w7c = wire_rom_block16_divider_reg,
		divider_reg_w8c = wire_rom_block17_divider_reg,
		divider_reg_w9c = wire_rom_block18_divider_reg,
		divider_w = denom,
		divider_zeros_w = 56'b00000000000000000000000000000000000000000000000000000000,
		full_neg_rom_w = {neg_rom_w0c, neg_rom_w1c, neg_rom_w2c, neg_rom_w3c, neg_rom_w4c, neg_rom_w5c, neg_rom_w6c, neg_rom_w7c, neg_rom_w8c, neg_rom_w9c, neg_rom_w10c, neg_rom_w11c, neg_rom_w12c, neg_rom_w13c, neg_rom_w14c, neg_rom_w15c, neg_rom_w16c, neg_rom_w17c, neg_rom_w18c, neg_rom_w19c, neg_rom_w20c, neg_rom_w21c, neg_rom_w22c, neg_rom_w23c, neg_rom_w24c, neg_rom_w25c, neg_rom_w26c, neg_rom_w27c},
		full_pos_rom_w = {pos_rom_w0c, pos_rom_w1c, pos_rom_w2c, pos_rom_w3c, pos_rom_w4c, pos_rom_w5c, pos_rom_w6c, pos_rom_w7c, pos_rom_w8c, pos_rom_w9c, pos_rom_w10c, pos_rom_w11c, pos_rom_w12c, pos_rom_w13c, pos_rom_w14c, pos_rom_w15c, pos_rom_w16c, pos_rom_w17c, pos_rom_w18c, pos_rom_w19c, pos_rom_w20c, pos_rom_w21c, pos_rom_w22c, pos_rom_w23c, pos_rom_w24c, pos_rom_w25c, pos_rom_w26c, pos_rom_w27c},
		mux_remainder_w = ((Rk_remainder_special_w[55] | Rk_remainder_special_w[54]) | Rk_remainder_special_w[53]),
		neg_qkd_dffe_w = neg_qkd_dffe,
		neg_qkd_int_w = (((({56{((~ rom_mux_int_w[1]) & (~ rom_mux_int_w[0]))}} & divider_zeros_w) | ({56{((~ rom_mux_int_w[1]) & rom_mux_int_w[0])}} & divider_1D_w)) | ({56{(rom_mux_int_w[1] & (~ rom_mux_int_w[0]))}} & divider_2D_w)) | ({56{(rom_mux_int_w[1] & rom_mux_int_w[0])}} & divider_1D_w)),
		neg_qkd_reg_w0c = wire_rom_block9_neg_qkd_reg,
		neg_qkd_reg_w10c = wire_rom_block19_neg_qkd_reg,
		neg_qkd_reg_w11c = wire_rom_block20_neg_qkd_reg,
		neg_qkd_reg_w12c = wire_rom_block21_neg_qkd_reg,
		neg_qkd_reg_w13c = wire_rom_block22_neg_qkd_reg,
		neg_qkd_reg_w14c = wire_rom_block23_neg_qkd_reg,
		neg_qkd_reg_w15c = wire_rom_block24_neg_qkd_reg,
		neg_qkd_reg_w16c = wire_rom_block25_neg_qkd_reg,
		neg_qkd_reg_w17c = wire_rom_block26_neg_qkd_reg,
		neg_qkd_reg_w18c = wire_rom_block27_neg_qkd_reg,
		neg_qkd_reg_w19c = wire_rom_block28_neg_qkd_reg,
		neg_qkd_reg_w1c = wire_rom_block10_neg_qkd_reg,
		neg_qkd_reg_w20c = wire_rom_block29_neg_qkd_reg,
		neg_qkd_reg_w21c = wire_rom_block30_neg_qkd_reg,
		neg_qkd_reg_w22c = wire_rom_block31_neg_qkd_reg,
		neg_qkd_reg_w23c = wire_rom_block32_neg_qkd_reg,
		neg_qkd_reg_w24c = wire_rom_block33_neg_qkd_reg,
		neg_qkd_reg_w25c = wire_rom_block34_neg_qkd_reg,
		neg_qkd_reg_w26c = wire_rom_block61_neg_qkd_reg,
		neg_qkd_reg_w2c = wire_rom_block11_neg_qkd_reg,
		neg_qkd_reg_w3c = wire_rom_block12_neg_qkd_reg,
		neg_qkd_reg_w4c = wire_rom_block13_neg_qkd_reg,
		neg_qkd_reg_w5c = wire_rom_block14_neg_qkd_reg,
		neg_qkd_reg_w6c = wire_rom_block15_neg_qkd_reg,
		neg_qkd_reg_w7c = wire_rom_block16_neg_qkd_reg,
		neg_qkd_reg_w8c = wire_rom_block17_neg_qkd_reg,
		neg_qkd_reg_w9c = wire_rom_block18_neg_qkd_reg,
		neg_rom_w0c = (({2{(~ rom_mux_w[0])}} & zero_quotient_w) | ({2{rom_mux_w[0]}} & rom_dffe_w0c[1:0])),
		neg_rom_w10c = (({2{(~ rom_mux_w[10])}} & zero_quotient_w) | ({2{rom_mux_w[10]}} & rom_dffe_w10c[1:0])),
		neg_rom_w11c = (({2{(~ rom_mux_w[11])}} & zero_quotient_w) | ({2{rom_mux_w[11]}} & rom_dffe_w11c[1:0])),
		neg_rom_w12c = (({2{(~ rom_mux_w[12])}} & zero_quotient_w) | ({2{rom_mux_w[12]}} & rom_dffe_w12c[1:0])),
		neg_rom_w13c = (({2{(~ rom_mux_w[13])}} & zero_quotient_w) | ({2{rom_mux_w[13]}} & rom_dffe_w13c[1:0])),
		neg_rom_w14c = (({2{(~ rom_mux_w[14])}} & zero_quotient_w) | ({2{rom_mux_w[14]}} & rom_dffe_w14c[1:0])),
		neg_rom_w15c = (({2{(~ rom_mux_w[15])}} & zero_quotient_w) | ({2{rom_mux_w[15]}} & rom_dffe_w15c[1:0])),
		neg_rom_w16c = (({2{(~ rom_mux_w[16])}} & zero_quotient_w) | ({2{rom_mux_w[16]}} & rom_dffe_w16c[1:0])),
		neg_rom_w17c = (({2{(~ rom_mux_w[17])}} & zero_quotient_w) | ({2{rom_mux_w[17]}} & rom_dffe_w17c[1:0])),
		neg_rom_w18c = (({2{(~ rom_mux_w[18])}} & zero_quotient_w) | ({2{rom_mux_w[18]}} & rom_dffe_w18c[1:0])),
		neg_rom_w19c = (({2{(~ rom_mux_w[19])}} & zero_quotient_w) | ({2{rom_mux_w[19]}} & rom_dffe_w19c[1:0])),
		neg_rom_w1c = (({2{(~ rom_mux_w[1])}} & zero_quotient_w) | ({2{rom_mux_w[1]}} & rom_dffe_w1c[1:0])),
		neg_rom_w20c = (({2{(~ rom_mux_w[20])}} & zero_quotient_w) | ({2{rom_mux_w[20]}} & rom_dffe_w20c[1:0])),
		neg_rom_w21c = (({2{(~ rom_mux_w[21])}} & zero_quotient_w) | ({2{rom_mux_w[21]}} & rom_dffe_w21c[1:0])),
		neg_rom_w22c = (({2{(~ rom_mux_w[22])}} & zero_quotient_w) | ({2{rom_mux_w[22]}} & rom_dffe_w22c[1:0])),
		neg_rom_w23c = (({2{(~ rom_mux_w[23])}} & zero_quotient_w) | ({2{rom_mux_w[23]}} & rom_dffe_w23c[1:0])),
		neg_rom_w24c = (({2{(~ rom_mux_w[24])}} & zero_quotient_w) | ({2{rom_mux_w[24]}} & rom_dffe_w24c[1:0])),
		neg_rom_w25c = (({2{(~ rom_mux_w[25])}} & zero_quotient_w) | ({2{rom_mux_w[25]}} & rom_dffe_w25c[1:0])),
		neg_rom_w26c = (({2{(~ rom_mux_w[26])}} & zero_quotient_w) | ({2{rom_mux_w[26]}} & rom_dffe_w26c[1:0])),
		neg_rom_w27c = (({2{(~ rom_mux_w[27])}} & zero_quotient_w) | ({2{rom_mux_w[27]}} & rom_dffe_w27c[1:0])),
		neg_rom_w2c = (({2{(~ rom_mux_w[2])}} & zero_quotient_w) | ({2{rom_mux_w[2]}} & rom_dffe_w2c[1:0])),
		neg_rom_w3c = (({2{(~ rom_mux_w[3])}} & zero_quotient_w) | ({2{rom_mux_w[3]}} & rom_dffe_w3c[1:0])),
		neg_rom_w4c = (({2{(~ rom_mux_w[4])}} & zero_quotient_w) | ({2{rom_mux_w[4]}} & rom_dffe_w4c[1:0])),
		neg_rom_w5c = (({2{(~ rom_mux_w[5])}} & zero_quotient_w) | ({2{rom_mux_w[5]}} & rom_dffe_w5c[1:0])),
		neg_rom_w6c = (({2{(~ rom_mux_w[6])}} & zero_quotient_w) | ({2{rom_mux_w[6]}} & rom_dffe_w6c[1:0])),
		neg_rom_w7c = (({2{(~ rom_mux_w[7])}} & zero_quotient_w) | ({2{rom_mux_w[7]}} & rom_dffe_w7c[1:0])),
		neg_rom_w8c = (({2{(~ rom_mux_w[8])}} & zero_quotient_w) | ({2{rom_mux_w[8]}} & rom_dffe_w8c[1:0])),
		neg_rom_w9c = (({2{(~ rom_mux_w[9])}} & zero_quotient_w) | ({2{rom_mux_w[9]}} & rom_dffe_w9c[1:0])),
		padded_2_zeros_w = 2'b00,
		padded_3_zeros_w = 3'b000,
		pos_rom_w0c = (({2{rom_mux_w[0]}} & zero_quotient_w) | ({2{(~ rom_mux_w[0])}} & rom_dffe_w0c[1:0])),
		pos_rom_w10c = (({2{rom_mux_w[10]}} & zero_quotient_w) | ({2{(~ rom_mux_w[10])}} & rom_dffe_w10c[1:0])),
		pos_rom_w11c = (({2{rom_mux_w[11]}} & zero_quotient_w) | ({2{(~ rom_mux_w[11])}} & rom_dffe_w11c[1:0])),
		pos_rom_w12c = (({2{rom_mux_w[12]}} & zero_quotient_w) | ({2{(~ rom_mux_w[12])}} & rom_dffe_w12c[1:0])),
		pos_rom_w13c = (({2{rom_mux_w[13]}} & zero_quotient_w) | ({2{(~ rom_mux_w[13])}} & rom_dffe_w13c[1:0])),
		pos_rom_w14c = (({2{rom_mux_w[14]}} & zero_quotient_w) | ({2{(~ rom_mux_w[14])}} & rom_dffe_w14c[1:0])),
		pos_rom_w15c = (({2{rom_mux_w[15]}} & zero_quotient_w) | ({2{(~ rom_mux_w[15])}} & rom_dffe_w15c[1:0])),
		pos_rom_w16c = (({2{rom_mux_w[16]}} & zero_quotient_w) | ({2{(~ rom_mux_w[16])}} & rom_dffe_w16c[1:0])),
		pos_rom_w17c = (({2{rom_mux_w[17]}} & zero_quotient_w) | ({2{(~ rom_mux_w[17])}} & rom_dffe_w17c[1:0])),
		pos_rom_w18c = (({2{rom_mux_w[18]}} & zero_quotient_w) | ({2{(~ rom_mux_w[18])}} & rom_dffe_w18c[1:0])),
		pos_rom_w19c = (({2{rom_mux_w[19]}} & zero_quotient_w) | ({2{(~ rom_mux_w[19])}} & rom_dffe_w19c[1:0])),
		pos_rom_w1c = (({2{rom_mux_w[1]}} & zero_quotient_w) | ({2{(~ rom_mux_w[1])}} & rom_dffe_w1c[1:0])),
		pos_rom_w20c = (({2{rom_mux_w[20]}} & zero_quotient_w) | ({2{(~ rom_mux_w[20])}} & rom_dffe_w20c[1:0])),
		pos_rom_w21c = (({2{rom_mux_w[21]}} & zero_quotient_w) | ({2{(~ rom_mux_w[21])}} & rom_dffe_w21c[1:0])),
		pos_rom_w22c = (({2{rom_mux_w[22]}} & zero_quotient_w) | ({2{(~ rom_mux_w[22])}} & rom_dffe_w22c[1:0])),
		pos_rom_w23c = (({2{rom_mux_w[23]}} & zero_quotient_w) | ({2{(~ rom_mux_w[23])}} & rom_dffe_w23c[1:0])),
		pos_rom_w24c = (({2{rom_mux_w[24]}} & zero_quotient_w) | ({2{(~ rom_mux_w[24])}} & rom_dffe_w24c[1:0])),
		pos_rom_w25c = (({2{rom_mux_w[25]}} & zero_quotient_w) | ({2{(~ rom_mux_w[25])}} & rom_dffe_w25c[1:0])),
		pos_rom_w26c = (({2{rom_mux_w[26]}} & zero_quotient_w) | ({2{(~ rom_mux_w[26])}} & rom_dffe_w26c[1:0])),
		pos_rom_w27c = (({2{rom_mux_w[27]}} & zero_quotient_w) | ({2{(~ rom_mux_w[27])}} & rom_dffe_w27c[1:0])),
		pos_rom_w2c = (({2{rom_mux_w[2]}} & zero_quotient_w) | ({2{(~ rom_mux_w[2])}} & rom_dffe_w2c[1:0])),
		pos_rom_w3c = (({2{rom_mux_w[3]}} & zero_quotient_w) | ({2{(~ rom_mux_w[3])}} & rom_dffe_w3c[1:0])),
		pos_rom_w4c = (({2{rom_mux_w[4]}} & zero_quotient_w) | ({2{(~ rom_mux_w[4])}} & rom_dffe_w4c[1:0])),
		pos_rom_w5c = (({2{rom_mux_w[5]}} & zero_quotient_w) | ({2{(~ rom_mux_w[5])}} & rom_dffe_w5c[1:0])),
		pos_rom_w6c = (({2{rom_mux_w[6]}} & zero_quotient_w) | ({2{(~ rom_mux_w[6])}} & rom_dffe_w6c[1:0])),
		pos_rom_w7c = (({2{rom_mux_w[7]}} & zero_quotient_w) | ({2{(~ rom_mux_w[7])}} & rom_dffe_w7c[1:0])),
		pos_rom_w8c = (({2{rom_mux_w[8]}} & zero_quotient_w) | ({2{(~ rom_mux_w[8])}} & rom_dffe_w8c[1:0])),
		pos_rom_w9c = (({2{rom_mux_w[9]}} & zero_quotient_w) | ({2{(~ rom_mux_w[9])}} & rom_dffe_w9c[1:0])),
		quotient = true_quotient_w,
		remain = Rk_remainder_w,
		Rk_adder_padded_w = {padded_3_zeros_w, Rk_dffe_2a_w},
		Rk_dffe_1a_w = Rk_dffe_1a,
		Rk_dffe_2a_w = Rk_dffe_2a,
		Rk_next_w0c = wire_add_sub8_result[53:0],
		Rk_next_w10c = wire_adder_block44_Rk_next,
		Rk_next_w11c = wire_adder_block45_Rk_next,
		Rk_next_w12c = wire_adder_block46_Rk_next,
		Rk_next_w13c = wire_adder_block47_Rk_next,
		Rk_next_w14c = wire_adder_block48_Rk_next,
		Rk_next_w15c = wire_adder_block49_Rk_next,
		Rk_next_w16c = wire_adder_block50_Rk_next,
		Rk_next_w17c = wire_adder_block51_Rk_next,
		Rk_next_w18c = wire_adder_block52_Rk_next,
		Rk_next_w19c = wire_adder_block53_Rk_next,
		Rk_next_w1c = wire_adder_block35_Rk_next,
		Rk_next_w20c = wire_adder_block54_Rk_next,
		Rk_next_w21c = wire_adder_block55_Rk_next,
		Rk_next_w22c = wire_adder_block56_Rk_next,
		Rk_next_w23c = wire_adder_block57_Rk_next,
		Rk_next_w24c = wire_adder_block58_Rk_next,
		Rk_next_w25c = wire_adder_block59_Rk_next,
		Rk_next_w26c = wire_adder_block60_Rk_next,
		Rk_next_w2c = wire_adder_block36_Rk_next,
		Rk_next_w3c = wire_adder_block37_Rk_next,
		Rk_next_w4c = wire_adder_block38_Rk_next,
		Rk_next_w5c = wire_adder_block39_Rk_next,
		Rk_next_w6c = wire_adder_block40_Rk_next,
		Rk_next_w7c = wire_adder_block41_Rk_next,
		Rk_next_w8c = wire_adder_block42_Rk_next,
		Rk_next_w9c = wire_adder_block43_Rk_next,
		Rk_reg_w0c = wire_rom_block9_Rk_reg,
		Rk_reg_w10c = wire_rom_block19_Rk_reg,
		Rk_reg_w11c = wire_rom_block20_Rk_reg,
		Rk_reg_w12c = wire_rom_block21_Rk_reg,
		Rk_reg_w13c = wire_rom_block22_Rk_reg,
		Rk_reg_w14c = wire_rom_block23_Rk_reg,
		Rk_reg_w15c = wire_rom_block24_Rk_reg,
		Rk_reg_w16c = wire_rom_block25_Rk_reg,
		Rk_reg_w17c = wire_rom_block26_Rk_reg,
		Rk_reg_w18c = wire_rom_block27_Rk_reg,
		Rk_reg_w19c = wire_rom_block28_Rk_reg,
		Rk_reg_w1c = wire_rom_block10_Rk_reg,
		Rk_reg_w20c = wire_rom_block29_Rk_reg,
		Rk_reg_w21c = wire_rom_block30_Rk_reg,
		Rk_reg_w22c = wire_rom_block31_Rk_reg,
		Rk_reg_w23c = wire_rom_block32_Rk_reg,
		Rk_reg_w24c = wire_rom_block33_Rk_reg,
		Rk_reg_w25c = wire_rom_block34_Rk_reg,
		Rk_reg_w26c = wire_rom_block61_Rk_reg,
		Rk_reg_w2c = wire_rom_block11_Rk_reg,
		Rk_reg_w3c = wire_rom_block12_Rk_reg,
		Rk_reg_w4c = wire_rom_block13_Rk_reg,
		Rk_reg_w5c = wire_rom_block14_Rk_reg,
		Rk_reg_w6c = wire_rom_block15_Rk_reg,
		Rk_reg_w7c = wire_rom_block16_Rk_reg,
		Rk_reg_w8c = wire_rom_block17_Rk_reg,
		Rk_reg_w9c = wire_rom_block18_Rk_reg,
		Rk_remainder_special_w = wire_adder_last_block62_Rk_next,
		Rk_remainder_w = (({53{(~ mux_remainder_w)}} & Rk_remainder_special_w[52:0]) | ({53{mux_remainder_w}} & added_remainder_w)),
		Rk_rom_padded_w = {padded_3_zeros_w, Rk_w[52:48]},
		Rk_w = numer,
		rom_add_w = {Rk_rom_padded_w, divider_w[51:48]},
		rom_dffe_w0c = rom_reg_dffe0c[161:159],
		rom_dffe_w10c = rom_reg_dffe10c[101:99],
		rom_dffe_w11c = rom_reg_dffe11c[95:93],
		rom_dffe_w12c = rom_reg_dffe12c[89:87],
		rom_dffe_w13c = rom_reg_dffe13c[83:81],
		rom_dffe_w14c = rom_reg_dffe14c[77:75],
		rom_dffe_w15c = rom_reg_dffe15c[71:69],
		rom_dffe_w16c = rom_reg_dffe16c[65:63],
		rom_dffe_w17c = rom_reg_dffe17c[59:57],
		rom_dffe_w18c = rom_reg_dffe18c[53:51],
		rom_dffe_w19c = rom_reg_dffe19c[47:45],
		rom_dffe_w1c = rom_reg_dffe1c[155:153],
		rom_dffe_w20c = rom_reg_dffe20c[41:39],
		rom_dffe_w21c = rom_reg_dffe21c[35:33],
		rom_dffe_w22c = rom_reg_dffe22c[29:27],
		rom_dffe_w23c = rom_reg_dffe23c[23:21],
		rom_dffe_w24c = rom_reg_dffe24c[17:15],
		rom_dffe_w25c = rom_reg_dffe25c[11:9],
		rom_dffe_w26c = rom_reg_dffe26c[5:3],
		rom_dffe_w27c = rom_out_w27c,
		rom_dffe_w2c = rom_reg_dffe2c[149:147],
		rom_dffe_w3c = rom_reg_dffe3c[143:141],
		rom_dffe_w4c = rom_reg_dffe4c[137:135],
		rom_dffe_w5c = rom_reg_dffe5c[131:129],
		rom_dffe_w6c = rom_reg_dffe6c[125:123],
		rom_dffe_w7c = rom_reg_dffe7c[119:117],
		rom_dffe_w8c = rom_reg_dffe8c[113:111],
		rom_dffe_w9c = rom_reg_dffe9c[107:105],
		rom_mux_int_w = rom_out_1a_w[1:0],
		rom_mux_w = {rom_dffe_w27c[2], rom_dffe_w26c[2], rom_dffe_w25c[2], rom_dffe_w24c[2], rom_dffe_w23c[2], rom_dffe_w22c[2], rom_dffe_w21c[2], rom_dffe_w20c[2], rom_dffe_w19c[2], rom_dffe_w18c[2], rom_dffe_w17c[2], rom_dffe_w16c[2], rom_dffe_w15c[2], rom_dffe_w14c[2], rom_dffe_w13c[2], rom_dffe_w12c[2], rom_dffe_w11c[2], rom_dffe_w10c[2], rom_dffe_w9c[2], rom_dffe_w8c[2], rom_dffe_w7c[2], rom_dffe_w6c[2], rom_dffe_w5c[2], rom_dffe_w4c[2], rom_dffe_w3c[2], rom_dffe_w2c[2], rom_dffe_w1c[2], rom_dffe_w0c[2]},
		rom_out_1a_w = wire_altsyncram7_q_a,
		rom_out_w0c = rom_out_2a_dffe,
		rom_out_w10c = wire_rom_block18_rom,
		rom_out_w11c = wire_rom_block19_rom,
		rom_out_w12c = wire_rom_block20_rom,
		rom_out_w13c = wire_rom_block21_rom,
		rom_out_w14c = wire_rom_block22_rom,
		rom_out_w15c = wire_rom_block23_rom,
		rom_out_w16c = wire_rom_block24_rom,
		rom_out_w17c = wire_rom_block25_rom,
		rom_out_w18c = wire_rom_block26_rom,
		rom_out_w19c = wire_rom_block27_rom,
		rom_out_w1c = wire_rom_block9_rom,
		rom_out_w20c = wire_rom_block28_rom,
		rom_out_w21c = wire_rom_block29_rom,
		rom_out_w22c = wire_rom_block30_rom,
		rom_out_w23c = wire_rom_block31_rom,
		rom_out_w24c = wire_rom_block32_rom,
		rom_out_w25c = wire_rom_block33_rom,
		rom_out_w26c = wire_rom_block34_rom,
		rom_out_w27c = wire_rom_block61_rom,
		rom_out_w2c = wire_rom_block10_rom,
		rom_out_w3c = wire_rom_block11_rom,
		rom_out_w4c = wire_rom_block12_rom,
		rom_out_w5c = wire_rom_block13_rom,
		rom_out_w6c = wire_rom_block14_rom,
		rom_out_w7c = wire_rom_block15_rom,
		rom_out_w8c = wire_rom_block16_rom,
		rom_out_w9c = wire_rom_block17_rom,
		srt_adjust_w = wire_add_sub64_result,
		srt_adjusted_w = wire_add_sub65_result,
		true_quotient_w = (({56{(~ mux_remainder_w)}} & srt_adjust_w) | ({56{mux_remainder_w}} & srt_adjusted_w)),
		zero_quotient_w = 2'b00;
endmodule //mydiv_altsrt_div_v8h


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="ADD" LPM_REPRESENTATION="SIGNED" LPM_WIDTH=54 dataa datab overflow result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_PIPELINE=1 LPM_REPRESENTATION="SIGNED" LPM_WIDTH=12 aclr clken clock dataa datab result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//lpm_add_sub CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="ADD" LPM_REPRESENTATION="SIGNED" LPM_WIDTH=12 dataa datab overflow result
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//lpm_compare CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=83 ageb dataa datab
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_compare 2006:04:25:14:54:12:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END


//lpm_compare CBX_AUTO_BLACKBOX="ON" DEVICE_FAMILY="Cyclone II" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTH=84 ageb dataa datab
//VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_compare 2006:04:25:14:54:12:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ  VERSION_END

//synthesis_resources = altsyncram 2 lut 862 reg 10722 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  mydiv_altfp_div_91j
	( 
	clock,
	dataa,
	datab,
	division_by_zero,
	nan,
	overflow,
	result,
	underflow,
	zero) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [63:0]  dataa;
	input   [63:0]  datab;
	output   division_by_zero;
	output   nan;
	output   overflow;
	output   [63:0]  result;
	output   underflow;
	output   zero;

	wire  [52:0]   wire_altsrt_div1_divider;
	wire  [55:0]   wire_altsrt_div1_quotient;
	wire  [52:0]   wire_altsrt_div1_remain;
	reg	bias_addition_overf_dffe;
	reg	[52:0]	checked_quotient_dffe;
	reg	[52:0]	divider_pipe1a;
	reg	exp_a_and_dffe;
	reg	exp_a_b_dffe;
	reg	[10:0]	exp_a_dffe;
	reg	[10:0]	exp_a_dffe1a;
	reg	[10:0]	exp_a_dffe2a;
	reg	exp_a_or_dffe;
	reg	[10:0]	exp_a_pipeline0c;
	reg	[10:0]	exp_a_pipeline10c;
	reg	[10:0]	exp_a_pipeline11c;
	reg	[10:0]	exp_a_pipeline12c;
	reg	[10:0]	exp_a_pipeline13c;
	reg	[10:0]	exp_a_pipeline14c;
	reg	[10:0]	exp_a_pipeline15c;
	reg	[10:0]	exp_a_pipeline16c;
	reg	[10:0]	exp_a_pipeline17c;
	reg	[10:0]	exp_a_pipeline18c;
	reg	[10:0]	exp_a_pipeline19c;
	reg	[10:0]	exp_a_pipeline1c;
	reg	[10:0]	exp_a_pipeline20c;
	reg	[10:0]	exp_a_pipeline21c;
	reg	[10:0]	exp_a_pipeline22c;
	reg	[10:0]	exp_a_pipeline23c;
	reg	[10:0]	exp_a_pipeline24c;
	reg	[10:0]	exp_a_pipeline25c;
	reg	[10:0]	exp_a_pipeline26c;
	reg	[10:0]	exp_a_pipeline27c;
	reg	[10:0]	exp_a_pipeline28c;
	reg	[10:0]	exp_a_pipeline29c;
	reg	[10:0]	exp_a_pipeline2c;
	reg	[10:0]	exp_a_pipeline30c;
	reg	[10:0]	exp_a_pipeline31c;
	reg	[10:0]	exp_a_pipeline32c;
	reg	[10:0]	exp_a_pipeline33c;
	reg	[10:0]	exp_a_pipeline34c;
	reg	[10:0]	exp_a_pipeline35c;
	reg	[10:0]	exp_a_pipeline36c;
	reg	[10:0]	exp_a_pipeline37c;
	reg	[10:0]	exp_a_pipeline38c;
	reg	[10:0]	exp_a_pipeline39c;
	reg	[10:0]	exp_a_pipeline3c;
	reg	[10:0]	exp_a_pipeline40c;
	reg	[10:0]	exp_a_pipeline41c;
	reg	[10:0]	exp_a_pipeline42c;
	reg	[10:0]	exp_a_pipeline43c;
	reg	[10:0]	exp_a_pipeline44c;
	reg	[10:0]	exp_a_pipeline45c;
	reg	[10:0]	exp_a_pipeline46c;
	reg	[10:0]	exp_a_pipeline47c;
	reg	[10:0]	exp_a_pipeline48c;
	reg	[10:0]	exp_a_pipeline49c;
	reg	[10:0]	exp_a_pipeline4c;
	reg	[10:0]	exp_a_pipeline50c;
	reg	[10:0]	exp_a_pipeline51c;
	reg	[10:0]	exp_a_pipeline52c;
	reg	[10:0]	exp_a_pipeline53c;
	reg	[10:0]	exp_a_pipeline54c;
	reg	[10:0]	exp_a_pipeline55c;
	reg	[10:0]	exp_a_pipeline5c;
	reg	[10:0]	exp_a_pipeline6c;
	reg	[10:0]	exp_a_pipeline7c;
	reg	[10:0]	exp_a_pipeline8c;
	reg	[10:0]	exp_a_pipeline9c;
	reg	exp_b_and_dffe;
	reg	[10:0]	exp_b_dffe;
	reg	[10:0]	exp_b_dffe1a;
	reg	[10:0]	exp_b_dffe2a;
	reg	exp_b_or_dffe;
	reg	[10:0]	exp_b_pipeline0c;
	reg	[10:0]	exp_b_pipeline10c;
	reg	[10:0]	exp_b_pipeline11c;
	reg	[10:0]	exp_b_pipeline12c;
	reg	[10:0]	exp_b_pipeline13c;
	reg	[10:0]	exp_b_pipeline14c;
	reg	[10:0]	exp_b_pipeline15c;
	reg	[10:0]	exp_b_pipeline16c;
	reg	[10:0]	exp_b_pipeline17c;
	reg	[10:0]	exp_b_pipeline18c;
	reg	[10:0]	exp_b_pipeline19c;
	reg	[10:0]	exp_b_pipeline1c;
	reg	[10:0]	exp_b_pipeline20c;
	reg	[10:0]	exp_b_pipeline21c;
	reg	[10:0]	exp_b_pipeline22c;
	reg	[10:0]	exp_b_pipeline23c;
	reg	[10:0]	exp_b_pipeline24c;
	reg	[10:0]	exp_b_pipeline25c;
	reg	[10:0]	exp_b_pipeline26c;
	reg	[10:0]	exp_b_pipeline27c;
	reg	[10:0]	exp_b_pipeline28c;
	reg	[10:0]	exp_b_pipeline29c;
	reg	[10:0]	exp_b_pipeline2c;
	reg	[10:0]	exp_b_pipeline30c;
	reg	[10:0]	exp_b_pipeline31c;
	reg	[10:0]	exp_b_pipeline32c;
	reg	[10:0]	exp_b_pipeline33c;
	reg	[10:0]	exp_b_pipeline34c;
	reg	[10:0]	exp_b_pipeline35c;
	reg	[10:0]	exp_b_pipeline36c;
	reg	[10:0]	exp_b_pipeline37c;
	reg	[10:0]	exp_b_pipeline38c;
	reg	[10:0]	exp_b_pipeline39c;
	reg	[10:0]	exp_b_pipeline3c;
	reg	[10:0]	exp_b_pipeline40c;
	reg	[10:0]	exp_b_pipeline41c;
	reg	[10:0]	exp_b_pipeline42c;
	reg	[10:0]	exp_b_pipeline43c;
	reg	[10:0]	exp_b_pipeline44c;
	reg	[10:0]	exp_b_pipeline45c;
	reg	[10:0]	exp_b_pipeline46c;
	reg	[10:0]	exp_b_pipeline47c;
	reg	[10:0]	exp_b_pipeline48c;
	reg	[10:0]	exp_b_pipeline49c;
	reg	[10:0]	exp_b_pipeline4c;
	reg	[10:0]	exp_b_pipeline50c;
	reg	[10:0]	exp_b_pipeline51c;
	reg	[10:0]	exp_b_pipeline52c;
	reg	[10:0]	exp_b_pipeline53c;
	reg	[10:0]	exp_b_pipeline54c;
	reg	[10:0]	exp_b_pipeline55c;
	reg	[10:0]	exp_b_pipeline5c;
	reg	[10:0]	exp_b_pipeline6c;
	reg	[10:0]	exp_b_pipeline7c;
	reg	[10:0]	exp_b_pipeline8c;
	reg	[10:0]	exp_b_pipeline9c;
	reg	[10:0]	exp_res_pipe3;
	reg	[3:0]	full_exc_out_dffe;
	reg	[63:0]	full_result_out_dffe;
	reg	implied_bit;
	reg	implied_bit2a;
	reg	man_a_and_dffe;
	reg	[51:0]	man_a_dffe;
	reg	[51:0]	man_a_dffe1a;
	reg	[51:0]	man_a_dffe3a;
	reg	man_a_or_dffe;
	reg	[51:0]	man_a_pipeline0c;
	reg	[51:0]	man_a_pipeline10c;
	reg	[51:0]	man_a_pipeline11c;
	reg	[51:0]	man_a_pipeline12c;
	reg	[51:0]	man_a_pipeline13c;
	reg	[51:0]	man_a_pipeline14c;
	reg	[51:0]	man_a_pipeline15c;
	reg	[51:0]	man_a_pipeline16c;
	reg	[51:0]	man_a_pipeline17c;
	reg	[51:0]	man_a_pipeline18c;
	reg	[51:0]	man_a_pipeline19c;
	reg	[51:0]	man_a_pipeline1c;
	reg	[51:0]	man_a_pipeline20c;
	reg	[51:0]	man_a_pipeline21c;
	reg	[51:0]	man_a_pipeline22c;
	reg	[51:0]	man_a_pipeline23c;
	reg	[51:0]	man_a_pipeline24c;
	reg	[51:0]	man_a_pipeline25c;
	reg	[51:0]	man_a_pipeline26c;
	reg	[51:0]	man_a_pipeline27c;
	reg	[51:0]	man_a_pipeline28c;
	reg	[51:0]	man_a_pipeline29c;
	reg	[51:0]	man_a_pipeline2c;
	reg	[51:0]	man_a_pipeline30c;
	reg	[51:0]	man_a_pipeline31c;
	reg	[51:0]	man_a_pipeline32c;
	reg	[51:0]	man_a_pipeline33c;
	reg	[51:0]	man_a_pipeline34c;
	reg	[51:0]	man_a_pipeline35c;
	reg	[51:0]	man_a_pipeline36c;
	reg	[51:0]	man_a_pipeline37c;
	reg	[51:0]	man_a_pipeline38c;
	reg	[51:0]	man_a_pipeline39c;
	reg	[51:0]	man_a_pipeline3c;
	reg	[51:0]	man_a_pipeline40c;
	reg	[51:0]	man_a_pipeline41c;
	reg	[51:0]	man_a_pipeline42c;
	reg	[51:0]	man_a_pipeline43c;
	reg	[51:0]	man_a_pipeline44c;
	reg	[51:0]	man_a_pipeline45c;
	reg	[51:0]	man_a_pipeline46c;
	reg	[51:0]	man_a_pipeline47c;
	reg	[51:0]	man_a_pipeline48c;
	reg	[51:0]	man_a_pipeline49c;
	reg	[51:0]	man_a_pipeline4c;
	reg	[51:0]	man_a_pipeline50c;
	reg	[51:0]	man_a_pipeline51c;
	reg	[51:0]	man_a_pipeline52c;
	reg	[51:0]	man_a_pipeline53c;
	reg	[51:0]	man_a_pipeline54c;
	reg	[51:0]	man_a_pipeline55c;
	reg	[51:0]	man_a_pipeline5c;
	reg	[51:0]	man_a_pipeline6c;
	reg	[51:0]	man_a_pipeline7c;
	reg	[51:0]	man_a_pipeline8c;
	reg	[51:0]	man_a_pipeline9c;
	reg	man_b_and_dffe;
	reg	[51:0]	man_b_dffe;
	reg	[51:0]	man_b_dffe1a;
	reg	[51:0]	man_b_dffe3a;
	reg	man_b_or_dffe;
	reg	[51:0]	man_b_pipeline0c;
	reg	[51:0]	man_b_pipeline10c;
	reg	[51:0]	man_b_pipeline11c;
	reg	[51:0]	man_b_pipeline12c;
	reg	[51:0]	man_b_pipeline13c;
	reg	[51:0]	man_b_pipeline14c;
	reg	[51:0]	man_b_pipeline15c;
	reg	[51:0]	man_b_pipeline16c;
	reg	[51:0]	man_b_pipeline17c;
	reg	[51:0]	man_b_pipeline18c;
	reg	[51:0]	man_b_pipeline19c;
	reg	[51:0]	man_b_pipeline1c;
	reg	[51:0]	man_b_pipeline20c;
	reg	[51:0]	man_b_pipeline21c;
	reg	[51:0]	man_b_pipeline22c;
	reg	[51:0]	man_b_pipeline23c;
	reg	[51:0]	man_b_pipeline24c;
	reg	[51:0]	man_b_pipeline25c;
	reg	[51:0]	man_b_pipeline26c;
	reg	[51:0]	man_b_pipeline27c;
	reg	[51:0]	man_b_pipeline28c;
	reg	[51:0]	man_b_pipeline29c;
	reg	[51:0]	man_b_pipeline2c;
	reg	[51:0]	man_b_pipeline30c;
	reg	[51:0]	man_b_pipeline31c;
	reg	[51:0]	man_b_pipeline32c;
	reg	[51:0]	man_b_pipeline33c;
	reg	[51:0]	man_b_pipeline34c;
	reg	[51:0]	man_b_pipeline35c;
	reg	[51:0]	man_b_pipeline36c;
	reg	[51:0]	man_b_pipeline37c;
	reg	[51:0]	man_b_pipeline38c;
	reg	[51:0]	man_b_pipeline39c;
	reg	[51:0]	man_b_pipeline3c;
	reg	[51:0]	man_b_pipeline40c;
	reg	[51:0]	man_b_pipeline41c;
	reg	[51:0]	man_b_pipeline42c;
	reg	[51:0]	man_b_pipeline43c;
	reg	[51:0]	man_b_pipeline44c;
	reg	[51:0]	man_b_pipeline45c;
	reg	[51:0]	man_b_pipeline46c;
	reg	[51:0]	man_b_pipeline47c;
	reg	[51:0]	man_b_pipeline48c;
	reg	[51:0]	man_b_pipeline49c;
	reg	[51:0]	man_b_pipeline4c;
	reg	[51:0]	man_b_pipeline50c;
	reg	[51:0]	man_b_pipeline51c;
	reg	[51:0]	man_b_pipeline52c;
	reg	[51:0]	man_b_pipeline53c;
	reg	[51:0]	man_b_pipeline54c;
	reg	[51:0]	man_b_pipeline55c;
	reg	[51:0]	man_b_pipeline5c;
	reg	[51:0]	man_b_pipeline6c;
	reg	[51:0]	man_b_pipeline7c;
	reg	[51:0]	man_b_pipeline8c;
	reg	[51:0]	man_b_pipeline9c;
	reg	[52:0]	man_res_pipe3;
	reg	[55:0]	quotient_pipe1a;
	reg	[52:0]	remainder_pipe1a;
	reg	rnd_overflow_dffe;
	reg	[52:0]	rnded_man_pipe2a;
	reg	sign_a_dffe;
	reg	sign_b_dffe;
	reg	sign_div_pipeline0c;
	reg	sign_div_pipeline10c;
	reg	sign_div_pipeline11c;
	reg	sign_div_pipeline12c;
	reg	sign_div_pipeline13c;
	reg	sign_div_pipeline14c;
	reg	sign_div_pipeline15c;
	reg	sign_div_pipeline16c;
	reg	sign_div_pipeline17c;
	reg	sign_div_pipeline18c;
	reg	sign_div_pipeline19c;
	reg	sign_div_pipeline1c;
	reg	sign_div_pipeline20c;
	reg	sign_div_pipeline21c;
	reg	sign_div_pipeline22c;
	reg	sign_div_pipeline23c;
	reg	sign_div_pipeline24c;
	reg	sign_div_pipeline25c;
	reg	sign_div_pipeline26c;
	reg	sign_div_pipeline27c;
	reg	sign_div_pipeline28c;
	reg	sign_div_pipeline29c;
	reg	sign_div_pipeline2c;
	reg	sign_div_pipeline30c;
	reg	sign_div_pipeline31c;
	reg	sign_div_pipeline32c;
	reg	sign_div_pipeline33c;
	reg	sign_div_pipeline34c;
	reg	sign_div_pipeline35c;
	reg	sign_div_pipeline36c;
	reg	sign_div_pipeline37c;
	reg	sign_div_pipeline38c;
	reg	sign_div_pipeline39c;
	reg	sign_div_pipeline3c;
	reg	sign_div_pipeline40c;
	reg	sign_div_pipeline41c;
	reg	sign_div_pipeline42c;
	reg	sign_div_pipeline43c;
	reg	sign_div_pipeline44c;
	reg	sign_div_pipeline45c;
	reg	sign_div_pipeline46c;
	reg	sign_div_pipeline47c;
	reg	sign_div_pipeline48c;
	reg	sign_div_pipeline49c;
	reg	sign_div_pipeline4c;
	reg	sign_div_pipeline50c;
	reg	sign_div_pipeline51c;
	reg	sign_div_pipeline52c;
	reg	sign_div_pipeline53c;
	reg	sign_div_pipeline54c;
	reg	sign_div_pipeline55c;
	reg	sign_div_pipeline5c;
	reg	sign_div_pipeline6c;
	reg	sign_div_pipeline7c;
	reg	sign_div_pipeline8c;
	reg	sign_div_pipeline9c;
	reg	sign_pipe1a;
	reg	sign_pipe2a;
	reg	sign_pipe3a;
	wire	[53:0]	wire_add_sub4_result_int;
	wire	[53:0]	wire_add_sub4_dataa;
	wire	[53:0]	wire_add_sub4_datab;
	wire	wire_add_sub4_overflow;
	wire	[53:0]	wire_add_sub4_result;
	reg	[11:0]	wire_add_sub5_pipeline_dffe_Q;
	wire	[11:0]	wire_add_sub5_pipeline_dffe_D;
	wire	[11:0]	wire_add_sub5_result_int;
	wire	wire_add_sub5_aclr;
	wire	wire_add_sub5_clken;
	wire	wire_add_sub5_clock;
	wire	[11:0]	wire_add_sub5_dataa;
	wire	[11:0]	wire_add_sub5_datab;
	wire	[11:0]	wire_add_sub5_result;
	wire	[11:0]	wire_add_sub6_result_int;
	wire	[11:0]	wire_add_sub6_dataa;
	wire	[11:0]	wire_add_sub6_datab;
	wire	wire_add_sub6_overflow;
	wire	[11:0]	wire_add_sub6_result;
	reg	wire_cmpr2_aeb_int;
	reg	wire_cmpr2_agb_int;
	wire	wire_cmpr2_ageb;
	wire	[82:0]	wire_cmpr2_dataa;
	wire	[82:0]	wire_cmpr2_datab;
	reg	wire_cmpr3_aeb_int;
	reg	wire_cmpr3_agb_int;
	wire	wire_cmpr3_ageb;
	wire	[83:0]	wire_cmpr3_dataa;
	wire	[83:0]	wire_cmpr3_datab;
	wire aclr;
	wire  [53:0]  add_1_dataa_w;
	wire  [53:0]  add_1_datab_w;
	wire  add_1_w;
	wire  [52:0]  add_one_process_w;
	wire  [11:0]  bias_add_w;
	wire  bias_addition_overf_w;
	wire  [10:0]  bias_addition_w;
	wire  [11:0]  bias_value_w;
	wire  [52:0]  checked_quotient_w;
	wire clk_en;
	wire  [10:0]  dataa_exp_bus_w;
	wire  [10:0]  dataa_exp_or_w;
	wire  dataa_exp_w;
	wire  [63:0]  dataa_int;
	wire  [51:0]  dataa_man_bus_w;
	wire  [51:0]  dataa_man_or_w;
	wire  dataa_man_w;
	wire  dataa_S0;
	wire  [10:0]  datab_exp_bus_w;
	wire  [10:0]  datab_exp_or_w;
	wire  datab_exp_w;
	wire  [63:0]  datab_int;
	wire  [51:0]  datab_man_bus_w;
	wire  [51:0]  datab_man_or_w;
	wire  datab_man_w;
	wire  datab_S0;
	wire  [52:0]  divider_srt_w;
	wire  division_by_w;
	wire  [10:0]  exp_a_and_w;
	wire  exp_a_b_w;
	wire  [10:0]  exp_a_bus_w;
	wire  [10:0]  exp_a_dffe1a_w;
	wire  [10:0]  exp_a_dffe3a_int_w;
	wire  [10:0]  exp_a_dffe3a_w;
	wire  exp_a_non_zero_w;
	wire  exp_a_one_w;
	wire  [10:0]  exp_a_or_w;
	wire  [10:0]  exp_a_pipeline_w;
	wire  [10:0]  exp_a_w;
	wire  exp_a_zero_w;
	wire  [10:0]  exp_b_and_w;
	wire  [10:0]  exp_b_bus_w;
	wire  [10:0]  exp_b_dffe1a_w;
	wire  [10:0]  exp_b_dffe3a_int_w;
	wire  [10:0]  exp_b_dffe3a_w;
	wire  exp_b_non_zero_w;
	wire  exp_b_one_w;
	wire  [10:0]  exp_b_or_w;
	wire  [10:0]  exp_b_pipeline_w;
	wire  [10:0]  exp_b_w;
	wire  exp_b_zero_w;
	wire  [21:0]  exp_bus_w;
	wire  [10:0]  exp_exc_ones_w;
	wire  [10:0]  exp_exc_zeros_w;
	wire  [4:0]  exp_higher_bit;
	wire  [4:0]  exp_higher_or;
	wire  exp_infi_bus_w;
	wire  [21:0]  exp_or_w;
	wire  [10:0]  exp_res_and_w;
	wire  [10:0]  exp_res_bus_w;
	wire  [10:0]  exp_res_int2_bus_w;
	wire  [10:0]  exp_res_int2_or_w;
	wire  [10:0]  exp_res_int2_w;
	wire  [10:0]  exp_res_int_w;
	wire  [10:0]  exp_res_w;
	wire  exp_sign_w;
	wire  [11:0]  exp_sub_a_w;
	wire  [11:0]  exp_sub_b_w;
	wire  [11:0]  exp_sub_w;
	wire  exp_zero_bus_w;
	wire  guard_bit_quo_msb_m1;
	wire  guard_bit_quo_msb_m2;
	wire  guard_bit_w;
	wire  infi_combi_w;
	wire  infi_dataa_w;
	wire  infi_datab_w;
	wire  infi_norm_res_w;
	wire  [63:0]  infi_res_w;
	wire  [52:0]  man_24_zeros_w;
	wire  [51:0]  man_a_and_w;
	wire  [51:0]  man_a_bus_w;
	wire  [51:0]  man_a_dffe3a_w;
	wire  [51:0]  man_a_int_w;
	wire  man_a_non_zero_w;
	wire  man_a_one_w;
	wire  [51:0]  man_a_or_w;
	wire  [51:0]  man_a_pipeline_w;
	wire  [52:0]  man_a_w;
	wire  man_a_zero_w;
	wire  [51:0]  man_b_and_w;
	wire  [51:0]  man_b_bus_w;
	wire  [51:0]  man_b_dffe3a_w;
	wire  [51:0]  man_b_int_w;
	wire  man_b_non_zero_w;
	wire  man_b_one_w;
	wire  [51:0]  man_b_or_w;
	wire  [51:0]  man_b_pipeline_w;
	wire  [52:0]  man_b_w;
	wire  man_b_zero_w;
	wire  [51:0]  man_exc_nan_w;
	wire  [51:0]  man_exc_zeros_w;
	wire  [51:0]  man_res_bus_w;
	wire  [52:0]  man_res_int2_w;
	wire  [52:0]  man_res_int_w;
	wire  [51:0]  man_res_or_w;
	wire  [52:0]  man_res_w;
	wire  mux1_exp_S0a;
	wire  mux1_exp_S1a;
	wire  [63:0]  mux_1_res_w;
	wire  [63:0]  mux_2_res_w;
	wire  [63:0]  mux_3_res_w;
	wire  mux_zero_non_zero_S0;
	wire  [52:0]  mux_zero_non_zero_w;
	wire  nan_dataa_w;
	wire  nan_datab_w;
	wire  [63:0]  nan_res_w;
	wire  nan_w;
	wire  norm_dataa_w;
	wire  norm_datab_w;
	wire  [10:0]  norm_infi_and_w;
	wire  [10:0]  norm_infi_bus_w;
	wire  [63:0]  norm_res_int_w;
	wire  [10:0]  norm_zero_bus_w;
	wire  [10:0]  norm_zero_or_w;
	wire  [10:0]  not_bias_addition_w;
	wire  not_exp_res_int2_or_res_w;
	wire  overflow_int_w;
	wire  [52:0]  overflow_man_w;
	wire  [10:0]  overflow_ones_w;
	wire  overflow_w;
	wire  [82:0]  quo_msb_m1_compare_dataa;
	wire  [82:0]  quo_msb_m1_compare_datab;
	wire  quo_msb_m1_compare_w;
	wire  quo_msb_m1_w;
	wire  [83:0]  quo_msb_m2_compare_dataa;
	wire  [83:0]  quo_msb_m2_compare_datab;
	wire  quo_msb_m2_compare_w;
	wire  [52:0]  quotient_msb_m1_w;
	wire  [52:0]  quotient_msb_m2_w;
	wire  [55:0]  quotient_w;
	wire  [52:0]  remainder_srt_w;
	wire  [52:0]  remainder_true_w;
	wire  [52:0]  res_rnded_man_w;
	wire  [62:0]  result_dffe_bus_w;
	wire  [62:0]  result_dffe_or_w;
	wire  rnd_add_overf_w;
	wire  rnd_overflow;
	wire  [52:0]  rnded_man_w;
	wire  round_bit_quo_msb_m1;
	wire  round_bit_quo_msb_m2;
	wire  round_bit_w;
	wire  sign_a_w;
	wire  sign_b_w;
	wire  sign_div;
	wire  sign_div_pipeline_w;
	wire  sign_exc_bit_w;
	wire  signed_N_exp_h_or;
	wire  sticky_bit_quo_msb_m1;
	wire  [0:0]  sticky_bit_quo_msb_m1_bit;
	wire  [0:0]  sticky_bit_quo_msb_m1_or;
	wire  [0:0]  sticky_bit_quo_msb_m1_tmp;
	wire  sticky_bit_quo_msb_m2;
	wire  sticky_bit_w;
	wire  [10:0]  underflow_zeros_w;
	wire  [11:0]  value_add_1_w;
	wire  [11:0]  value_minus_1_w;
	wire  [11:0]  value_normal_w;
	wire  [11:0]  value_zero_w;
	wire  [52:0]  zero_bit_23_w;
	wire  [62:0]  zero_bit_31_w;
	wire  [10:0]  zero_bit_8_w;
	wire  zero_dataa_w;
	wire  zero_datab_w;
	wire  [63:0]  zero_res_w;
	wire  zero_result_dffe_w;
	wire  zero_w;

	mydiv_altsrt_div_v8h   altsrt_div1
	( 
	.aclr(aclr),
	.clock(clock),
	.denom(man_b_w),
	.divider(wire_altsrt_div1_divider),
	.numer(man_a_w),
	.quotient(wire_altsrt_div1_quotient),
	.remain(wire_altsrt_div1_remain));
	// synopsys translate_off
	initial
		bias_addition_overf_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) bias_addition_overf_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   bias_addition_overf_dffe <= bias_addition_overf_w;
	// synopsys translate_off
	initial
		checked_quotient_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) checked_quotient_dffe <= 53'b0;
		else if  (clk_en == 1'b1)   checked_quotient_dffe <= checked_quotient_w;
	// synopsys translate_off
	initial
		divider_pipe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) divider_pipe1a <= 53'b0;
		else if  (clk_en == 1'b1)   divider_pipe1a <= wire_altsrt_div1_divider;
	// synopsys translate_off
	initial
		exp_a_and_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_and_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   exp_a_and_dffe <= exp_a_and_w[10];
	// synopsys translate_off
	initial
		exp_a_b_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_b_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   exp_a_b_dffe <= exp_or_w[21];
	// synopsys translate_off
	initial
		exp_a_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_dffe <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_dffe <= dataa_int[62:52];
	// synopsys translate_off
	initial
		exp_a_dffe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_dffe1a <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_dffe1a <= exp_a_pipeline_w;
	// synopsys translate_off
	initial
		exp_a_dffe2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_dffe2a <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_dffe2a <= exp_a_dffe1a;
	// synopsys translate_off
	initial
		exp_a_or_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_or_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   exp_a_or_dffe <= exp_a_or_w[10];
	// synopsys translate_off
	initial
		exp_a_pipeline0c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline0c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline0c <= exp_a_w;
	// synopsys translate_off
	initial
		exp_a_pipeline10c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline10c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline10c <= exp_a_pipeline9c;
	// synopsys translate_off
	initial
		exp_a_pipeline11c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline11c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline11c <= exp_a_pipeline10c;
	// synopsys translate_off
	initial
		exp_a_pipeline12c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline12c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline12c <= exp_a_pipeline11c;
	// synopsys translate_off
	initial
		exp_a_pipeline13c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline13c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline13c <= exp_a_pipeline12c;
	// synopsys translate_off
	initial
		exp_a_pipeline14c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline14c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline14c <= exp_a_pipeline13c;
	// synopsys translate_off
	initial
		exp_a_pipeline15c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline15c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline15c <= exp_a_pipeline14c;
	// synopsys translate_off
	initial
		exp_a_pipeline16c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline16c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline16c <= exp_a_pipeline15c;
	// synopsys translate_off
	initial
		exp_a_pipeline17c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline17c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline17c <= exp_a_pipeline16c;
	// synopsys translate_off
	initial
		exp_a_pipeline18c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline18c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline18c <= exp_a_pipeline17c;
	// synopsys translate_off
	initial
		exp_a_pipeline19c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline19c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline19c <= exp_a_pipeline18c;
	// synopsys translate_off
	initial
		exp_a_pipeline1c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline1c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline1c <= exp_a_pipeline0c;
	// synopsys translate_off
	initial
		exp_a_pipeline20c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline20c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline20c <= exp_a_pipeline19c;
	// synopsys translate_off
	initial
		exp_a_pipeline21c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline21c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline21c <= exp_a_pipeline20c;
	// synopsys translate_off
	initial
		exp_a_pipeline22c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline22c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline22c <= exp_a_pipeline21c;
	// synopsys translate_off
	initial
		exp_a_pipeline23c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline23c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline23c <= exp_a_pipeline22c;
	// synopsys translate_off
	initial
		exp_a_pipeline24c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline24c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline24c <= exp_a_pipeline23c;
	// synopsys translate_off
	initial
		exp_a_pipeline25c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline25c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline25c <= exp_a_pipeline24c;
	// synopsys translate_off
	initial
		exp_a_pipeline26c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline26c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline26c <= exp_a_pipeline25c;
	// synopsys translate_off
	initial
		exp_a_pipeline27c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline27c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline27c <= exp_a_pipeline26c;
	// synopsys translate_off
	initial
		exp_a_pipeline28c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline28c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline28c <= exp_a_pipeline27c;
	// synopsys translate_off
	initial
		exp_a_pipeline29c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline29c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline29c <= exp_a_pipeline28c;
	// synopsys translate_off
	initial
		exp_a_pipeline2c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline2c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline2c <= exp_a_pipeline1c;
	// synopsys translate_off
	initial
		exp_a_pipeline30c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline30c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline30c <= exp_a_pipeline29c;
	// synopsys translate_off
	initial
		exp_a_pipeline31c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline31c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline31c <= exp_a_pipeline30c;
	// synopsys translate_off
	initial
		exp_a_pipeline32c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline32c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline32c <= exp_a_pipeline31c;
	// synopsys translate_off
	initial
		exp_a_pipeline33c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline33c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline33c <= exp_a_pipeline32c;
	// synopsys translate_off
	initial
		exp_a_pipeline34c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline34c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline34c <= exp_a_pipeline33c;
	// synopsys translate_off
	initial
		exp_a_pipeline35c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline35c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline35c <= exp_a_pipeline34c;
	// synopsys translate_off
	initial
		exp_a_pipeline36c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline36c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline36c <= exp_a_pipeline35c;
	// synopsys translate_off
	initial
		exp_a_pipeline37c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline37c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline37c <= exp_a_pipeline36c;
	// synopsys translate_off
	initial
		exp_a_pipeline38c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline38c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline38c <= exp_a_pipeline37c;
	// synopsys translate_off
	initial
		exp_a_pipeline39c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline39c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline39c <= exp_a_pipeline38c;
	// synopsys translate_off
	initial
		exp_a_pipeline3c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline3c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline3c <= exp_a_pipeline2c;
	// synopsys translate_off
	initial
		exp_a_pipeline40c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline40c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline40c <= exp_a_pipeline39c;
	// synopsys translate_off
	initial
		exp_a_pipeline41c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline41c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline41c <= exp_a_pipeline40c;
	// synopsys translate_off
	initial
		exp_a_pipeline42c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline42c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline42c <= exp_a_pipeline41c;
	// synopsys translate_off
	initial
		exp_a_pipeline43c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline43c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline43c <= exp_a_pipeline42c;
	// synopsys translate_off
	initial
		exp_a_pipeline44c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline44c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline44c <= exp_a_pipeline43c;
	// synopsys translate_off
	initial
		exp_a_pipeline45c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline45c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline45c <= exp_a_pipeline44c;
	// synopsys translate_off
	initial
		exp_a_pipeline46c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline46c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline46c <= exp_a_pipeline45c;
	// synopsys translate_off
	initial
		exp_a_pipeline47c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline47c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline47c <= exp_a_pipeline46c;
	// synopsys translate_off
	initial
		exp_a_pipeline48c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline48c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline48c <= exp_a_pipeline47c;
	// synopsys translate_off
	initial
		exp_a_pipeline49c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline49c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline49c <= exp_a_pipeline48c;
	// synopsys translate_off
	initial
		exp_a_pipeline4c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline4c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline4c <= exp_a_pipeline3c;
	// synopsys translate_off
	initial
		exp_a_pipeline50c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline50c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline50c <= exp_a_pipeline49c;
	// synopsys translate_off
	initial
		exp_a_pipeline51c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline51c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline51c <= exp_a_pipeline50c;
	// synopsys translate_off
	initial
		exp_a_pipeline52c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline52c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline52c <= exp_a_pipeline51c;
	// synopsys translate_off
	initial
		exp_a_pipeline53c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline53c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline53c <= exp_a_pipeline52c;
	// synopsys translate_off
	initial
		exp_a_pipeline54c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline54c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline54c <= exp_a_pipeline53c;
	// synopsys translate_off
	initial
		exp_a_pipeline55c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline55c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline55c <= exp_a_pipeline54c;
	// synopsys translate_off
	initial
		exp_a_pipeline5c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline5c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline5c <= exp_a_pipeline4c;
	// synopsys translate_off
	initial
		exp_a_pipeline6c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline6c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline6c <= exp_a_pipeline5c;
	// synopsys translate_off
	initial
		exp_a_pipeline7c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline7c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline7c <= exp_a_pipeline6c;
	// synopsys translate_off
	initial
		exp_a_pipeline8c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline8c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline8c <= exp_a_pipeline7c;
	// synopsys translate_off
	initial
		exp_a_pipeline9c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_a_pipeline9c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_a_pipeline9c <= exp_a_pipeline8c;
	// synopsys translate_off
	initial
		exp_b_and_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_and_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   exp_b_and_dffe <= exp_b_and_w[10];
	// synopsys translate_off
	initial
		exp_b_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_dffe <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_dffe <= datab_int[62:52];
	// synopsys translate_off
	initial
		exp_b_dffe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_dffe1a <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_dffe1a <= exp_b_pipeline_w;
	// synopsys translate_off
	initial
		exp_b_dffe2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_dffe2a <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_dffe2a <= exp_b_dffe1a;
	// synopsys translate_off
	initial
		exp_b_or_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_or_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   exp_b_or_dffe <= exp_b_or_w[10];
	// synopsys translate_off
	initial
		exp_b_pipeline0c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline0c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline0c <= exp_b_w;
	// synopsys translate_off
	initial
		exp_b_pipeline10c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline10c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline10c <= exp_b_pipeline9c;
	// synopsys translate_off
	initial
		exp_b_pipeline11c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline11c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline11c <= exp_b_pipeline10c;
	// synopsys translate_off
	initial
		exp_b_pipeline12c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline12c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline12c <= exp_b_pipeline11c;
	// synopsys translate_off
	initial
		exp_b_pipeline13c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline13c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline13c <= exp_b_pipeline12c;
	// synopsys translate_off
	initial
		exp_b_pipeline14c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline14c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline14c <= exp_b_pipeline13c;
	// synopsys translate_off
	initial
		exp_b_pipeline15c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline15c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline15c <= exp_b_pipeline14c;
	// synopsys translate_off
	initial
		exp_b_pipeline16c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline16c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline16c <= exp_b_pipeline15c;
	// synopsys translate_off
	initial
		exp_b_pipeline17c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline17c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline17c <= exp_b_pipeline16c;
	// synopsys translate_off
	initial
		exp_b_pipeline18c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline18c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline18c <= exp_b_pipeline17c;
	// synopsys translate_off
	initial
		exp_b_pipeline19c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline19c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline19c <= exp_b_pipeline18c;
	// synopsys translate_off
	initial
		exp_b_pipeline1c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline1c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline1c <= exp_b_pipeline0c;
	// synopsys translate_off
	initial
		exp_b_pipeline20c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline20c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline20c <= exp_b_pipeline19c;
	// synopsys translate_off
	initial
		exp_b_pipeline21c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline21c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline21c <= exp_b_pipeline20c;
	// synopsys translate_off
	initial
		exp_b_pipeline22c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline22c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline22c <= exp_b_pipeline21c;
	// synopsys translate_off
	initial
		exp_b_pipeline23c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline23c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline23c <= exp_b_pipeline22c;
	// synopsys translate_off
	initial
		exp_b_pipeline24c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline24c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline24c <= exp_b_pipeline23c;
	// synopsys translate_off
	initial
		exp_b_pipeline25c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline25c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline25c <= exp_b_pipeline24c;
	// synopsys translate_off
	initial
		exp_b_pipeline26c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline26c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline26c <= exp_b_pipeline25c;
	// synopsys translate_off
	initial
		exp_b_pipeline27c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline27c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline27c <= exp_b_pipeline26c;
	// synopsys translate_off
	initial
		exp_b_pipeline28c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline28c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline28c <= exp_b_pipeline27c;
	// synopsys translate_off
	initial
		exp_b_pipeline29c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline29c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline29c <= exp_b_pipeline28c;
	// synopsys translate_off
	initial
		exp_b_pipeline2c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline2c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline2c <= exp_b_pipeline1c;
	// synopsys translate_off
	initial
		exp_b_pipeline30c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline30c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline30c <= exp_b_pipeline29c;
	// synopsys translate_off
	initial
		exp_b_pipeline31c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline31c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline31c <= exp_b_pipeline30c;
	// synopsys translate_off
	initial
		exp_b_pipeline32c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline32c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline32c <= exp_b_pipeline31c;
	// synopsys translate_off
	initial
		exp_b_pipeline33c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline33c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline33c <= exp_b_pipeline32c;
	// synopsys translate_off
	initial
		exp_b_pipeline34c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline34c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline34c <= exp_b_pipeline33c;
	// synopsys translate_off
	initial
		exp_b_pipeline35c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline35c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline35c <= exp_b_pipeline34c;
	// synopsys translate_off
	initial
		exp_b_pipeline36c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline36c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline36c <= exp_b_pipeline35c;
	// synopsys translate_off
	initial
		exp_b_pipeline37c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline37c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline37c <= exp_b_pipeline36c;
	// synopsys translate_off
	initial
		exp_b_pipeline38c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline38c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline38c <= exp_b_pipeline37c;
	// synopsys translate_off
	initial
		exp_b_pipeline39c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline39c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline39c <= exp_b_pipeline38c;
	// synopsys translate_off
	initial
		exp_b_pipeline3c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline3c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline3c <= exp_b_pipeline2c;
	// synopsys translate_off
	initial
		exp_b_pipeline40c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline40c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline40c <= exp_b_pipeline39c;
	// synopsys translate_off
	initial
		exp_b_pipeline41c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline41c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline41c <= exp_b_pipeline40c;
	// synopsys translate_off
	initial
		exp_b_pipeline42c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline42c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline42c <= exp_b_pipeline41c;
	// synopsys translate_off
	initial
		exp_b_pipeline43c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline43c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline43c <= exp_b_pipeline42c;
	// synopsys translate_off
	initial
		exp_b_pipeline44c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline44c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline44c <= exp_b_pipeline43c;
	// synopsys translate_off
	initial
		exp_b_pipeline45c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline45c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline45c <= exp_b_pipeline44c;
	// synopsys translate_off
	initial
		exp_b_pipeline46c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline46c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline46c <= exp_b_pipeline45c;
	// synopsys translate_off
	initial
		exp_b_pipeline47c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline47c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline47c <= exp_b_pipeline46c;
	// synopsys translate_off
	initial
		exp_b_pipeline48c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline48c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline48c <= exp_b_pipeline47c;
	// synopsys translate_off
	initial
		exp_b_pipeline49c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline49c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline49c <= exp_b_pipeline48c;
	// synopsys translate_off
	initial
		exp_b_pipeline4c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline4c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline4c <= exp_b_pipeline3c;
	// synopsys translate_off
	initial
		exp_b_pipeline50c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline50c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline50c <= exp_b_pipeline49c;
	// synopsys translate_off
	initial
		exp_b_pipeline51c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline51c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline51c <= exp_b_pipeline50c;
	// synopsys translate_off
	initial
		exp_b_pipeline52c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline52c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline52c <= exp_b_pipeline51c;
	// synopsys translate_off
	initial
		exp_b_pipeline53c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline53c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline53c <= exp_b_pipeline52c;
	// synopsys translate_off
	initial
		exp_b_pipeline54c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline54c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline54c <= exp_b_pipeline53c;
	// synopsys translate_off
	initial
		exp_b_pipeline55c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline55c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline55c <= exp_b_pipeline54c;
	// synopsys translate_off
	initial
		exp_b_pipeline5c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline5c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline5c <= exp_b_pipeline4c;
	// synopsys translate_off
	initial
		exp_b_pipeline6c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline6c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline6c <= exp_b_pipeline5c;
	// synopsys translate_off
	initial
		exp_b_pipeline7c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline7c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline7c <= exp_b_pipeline6c;
	// synopsys translate_off
	initial
		exp_b_pipeline8c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline8c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline8c <= exp_b_pipeline7c;
	// synopsys translate_off
	initial
		exp_b_pipeline9c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_b_pipeline9c <= 11'b0;
		else if  (clk_en == 1'b1)   exp_b_pipeline9c <= exp_b_pipeline8c;
	// synopsys translate_off
	initial
		exp_res_pipe3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) exp_res_pipe3 <= 11'b0;
		else if  (clk_en == 1'b1)   exp_res_pipe3 <= exp_res_int_w;
	// synopsys translate_off
	initial
		full_exc_out_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) full_exc_out_dffe <= 4'b0;
		else if  (clk_en == 1'b1)   full_exc_out_dffe <= {overflow_w, zero_w, nan_w, division_by_w};
	// synopsys translate_off
	initial
		full_result_out_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) full_result_out_dffe <= 64'b0;
		else if  (clk_en == 1'b1)   full_result_out_dffe <= mux_3_res_w;
	// synopsys translate_off
	initial
		implied_bit = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) implied_bit <= 1'b0;
		else if  (clk_en == 1'b1)   implied_bit <= wire_altsrt_div1_quotient[54];
	// synopsys translate_off
	initial
		implied_bit2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) implied_bit2a <= 1'b0;
		else if  (clk_en == 1'b1)   implied_bit2a <= implied_bit;
	// synopsys translate_off
	initial
		man_a_and_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_and_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   man_a_and_dffe <= man_a_and_w[51];
	// synopsys translate_off
	initial
		man_a_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_dffe <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_dffe <= dataa_int[51:0];
	// synopsys translate_off
	initial
		man_a_dffe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_dffe1a <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_dffe1a <= man_a_pipeline_w;
	// synopsys translate_off
	initial
		man_a_dffe3a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_dffe3a <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_dffe3a <= man_a_dffe1a;
	// synopsys translate_off
	initial
		man_a_or_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_or_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   man_a_or_dffe <= man_a_or_w[51];
	// synopsys translate_off
	initial
		man_a_pipeline0c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline0c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline0c <= man_a_int_w;
	// synopsys translate_off
	initial
		man_a_pipeline10c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline10c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline10c <= man_a_pipeline9c;
	// synopsys translate_off
	initial
		man_a_pipeline11c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline11c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline11c <= man_a_pipeline10c;
	// synopsys translate_off
	initial
		man_a_pipeline12c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline12c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline12c <= man_a_pipeline11c;
	// synopsys translate_off
	initial
		man_a_pipeline13c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline13c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline13c <= man_a_pipeline12c;
	// synopsys translate_off
	initial
		man_a_pipeline14c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline14c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline14c <= man_a_pipeline13c;
	// synopsys translate_off
	initial
		man_a_pipeline15c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline15c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline15c <= man_a_pipeline14c;
	// synopsys translate_off
	initial
		man_a_pipeline16c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline16c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline16c <= man_a_pipeline15c;
	// synopsys translate_off
	initial
		man_a_pipeline17c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline17c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline17c <= man_a_pipeline16c;
	// synopsys translate_off
	initial
		man_a_pipeline18c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline18c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline18c <= man_a_pipeline17c;
	// synopsys translate_off
	initial
		man_a_pipeline19c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline19c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline19c <= man_a_pipeline18c;
	// synopsys translate_off
	initial
		man_a_pipeline1c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline1c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline1c <= man_a_pipeline0c;
	// synopsys translate_off
	initial
		man_a_pipeline20c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline20c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline20c <= man_a_pipeline19c;
	// synopsys translate_off
	initial
		man_a_pipeline21c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline21c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline21c <= man_a_pipeline20c;
	// synopsys translate_off
	initial
		man_a_pipeline22c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline22c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline22c <= man_a_pipeline21c;
	// synopsys translate_off
	initial
		man_a_pipeline23c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline23c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline23c <= man_a_pipeline22c;
	// synopsys translate_off
	initial
		man_a_pipeline24c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline24c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline24c <= man_a_pipeline23c;
	// synopsys translate_off
	initial
		man_a_pipeline25c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline25c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline25c <= man_a_pipeline24c;
	// synopsys translate_off
	initial
		man_a_pipeline26c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline26c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline26c <= man_a_pipeline25c;
	// synopsys translate_off
	initial
		man_a_pipeline27c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline27c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline27c <= man_a_pipeline26c;
	// synopsys translate_off
	initial
		man_a_pipeline28c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline28c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline28c <= man_a_pipeline27c;
	// synopsys translate_off
	initial
		man_a_pipeline29c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline29c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline29c <= man_a_pipeline28c;
	// synopsys translate_off
	initial
		man_a_pipeline2c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline2c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline2c <= man_a_pipeline1c;
	// synopsys translate_off
	initial
		man_a_pipeline30c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline30c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline30c <= man_a_pipeline29c;
	// synopsys translate_off
	initial
		man_a_pipeline31c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline31c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline31c <= man_a_pipeline30c;
	// synopsys translate_off
	initial
		man_a_pipeline32c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline32c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline32c <= man_a_pipeline31c;
	// synopsys translate_off
	initial
		man_a_pipeline33c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline33c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline33c <= man_a_pipeline32c;
	// synopsys translate_off
	initial
		man_a_pipeline34c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline34c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline34c <= man_a_pipeline33c;
	// synopsys translate_off
	initial
		man_a_pipeline35c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline35c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline35c <= man_a_pipeline34c;
	// synopsys translate_off
	initial
		man_a_pipeline36c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline36c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline36c <= man_a_pipeline35c;
	// synopsys translate_off
	initial
		man_a_pipeline37c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline37c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline37c <= man_a_pipeline36c;
	// synopsys translate_off
	initial
		man_a_pipeline38c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline38c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline38c <= man_a_pipeline37c;
	// synopsys translate_off
	initial
		man_a_pipeline39c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline39c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline39c <= man_a_pipeline38c;
	// synopsys translate_off
	initial
		man_a_pipeline3c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline3c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline3c <= man_a_pipeline2c;
	// synopsys translate_off
	initial
		man_a_pipeline40c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline40c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline40c <= man_a_pipeline39c;
	// synopsys translate_off
	initial
		man_a_pipeline41c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline41c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline41c <= man_a_pipeline40c;
	// synopsys translate_off
	initial
		man_a_pipeline42c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline42c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline42c <= man_a_pipeline41c;
	// synopsys translate_off
	initial
		man_a_pipeline43c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline43c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline43c <= man_a_pipeline42c;
	// synopsys translate_off
	initial
		man_a_pipeline44c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline44c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline44c <= man_a_pipeline43c;
	// synopsys translate_off
	initial
		man_a_pipeline45c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline45c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline45c <= man_a_pipeline44c;
	// synopsys translate_off
	initial
		man_a_pipeline46c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline46c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline46c <= man_a_pipeline45c;
	// synopsys translate_off
	initial
		man_a_pipeline47c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline47c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline47c <= man_a_pipeline46c;
	// synopsys translate_off
	initial
		man_a_pipeline48c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline48c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline48c <= man_a_pipeline47c;
	// synopsys translate_off
	initial
		man_a_pipeline49c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline49c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline49c <= man_a_pipeline48c;
	// synopsys translate_off
	initial
		man_a_pipeline4c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline4c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline4c <= man_a_pipeline3c;
	// synopsys translate_off
	initial
		man_a_pipeline50c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline50c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline50c <= man_a_pipeline49c;
	// synopsys translate_off
	initial
		man_a_pipeline51c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline51c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline51c <= man_a_pipeline50c;
	// synopsys translate_off
	initial
		man_a_pipeline52c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline52c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline52c <= man_a_pipeline51c;
	// synopsys translate_off
	initial
		man_a_pipeline53c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline53c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline53c <= man_a_pipeline52c;
	// synopsys translate_off
	initial
		man_a_pipeline54c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline54c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline54c <= man_a_pipeline53c;
	// synopsys translate_off
	initial
		man_a_pipeline55c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline55c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline55c <= man_a_pipeline54c;
	// synopsys translate_off
	initial
		man_a_pipeline5c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline5c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline5c <= man_a_pipeline4c;
	// synopsys translate_off
	initial
		man_a_pipeline6c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline6c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline6c <= man_a_pipeline5c;
	// synopsys translate_off
	initial
		man_a_pipeline7c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline7c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline7c <= man_a_pipeline6c;
	// synopsys translate_off
	initial
		man_a_pipeline8c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline8c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline8c <= man_a_pipeline7c;
	// synopsys translate_off
	initial
		man_a_pipeline9c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_a_pipeline9c <= 52'b0;
		else if  (clk_en == 1'b1)   man_a_pipeline9c <= man_a_pipeline8c;
	// synopsys translate_off
	initial
		man_b_and_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_and_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   man_b_and_dffe <= man_b_and_w[51];
	// synopsys translate_off
	initial
		man_b_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_dffe <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_dffe <= datab_int[51:0];
	// synopsys translate_off
	initial
		man_b_dffe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_dffe1a <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_dffe1a <= man_b_pipeline_w;
	// synopsys translate_off
	initial
		man_b_dffe3a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_dffe3a <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_dffe3a <= man_b_dffe1a;
	// synopsys translate_off
	initial
		man_b_or_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_or_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   man_b_or_dffe <= man_b_or_w[51];
	// synopsys translate_off
	initial
		man_b_pipeline0c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline0c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline0c <= man_b_int_w;
	// synopsys translate_off
	initial
		man_b_pipeline10c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline10c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline10c <= man_b_pipeline9c;
	// synopsys translate_off
	initial
		man_b_pipeline11c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline11c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline11c <= man_b_pipeline10c;
	// synopsys translate_off
	initial
		man_b_pipeline12c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline12c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline12c <= man_b_pipeline11c;
	// synopsys translate_off
	initial
		man_b_pipeline13c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline13c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline13c <= man_b_pipeline12c;
	// synopsys translate_off
	initial
		man_b_pipeline14c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline14c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline14c <= man_b_pipeline13c;
	// synopsys translate_off
	initial
		man_b_pipeline15c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline15c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline15c <= man_b_pipeline14c;
	// synopsys translate_off
	initial
		man_b_pipeline16c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline16c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline16c <= man_b_pipeline15c;
	// synopsys translate_off
	initial
		man_b_pipeline17c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline17c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline17c <= man_b_pipeline16c;
	// synopsys translate_off
	initial
		man_b_pipeline18c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline18c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline18c <= man_b_pipeline17c;
	// synopsys translate_off
	initial
		man_b_pipeline19c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline19c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline19c <= man_b_pipeline18c;
	// synopsys translate_off
	initial
		man_b_pipeline1c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline1c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline1c <= man_b_pipeline0c;
	// synopsys translate_off
	initial
		man_b_pipeline20c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline20c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline20c <= man_b_pipeline19c;
	// synopsys translate_off
	initial
		man_b_pipeline21c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline21c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline21c <= man_b_pipeline20c;
	// synopsys translate_off
	initial
		man_b_pipeline22c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline22c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline22c <= man_b_pipeline21c;
	// synopsys translate_off
	initial
		man_b_pipeline23c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline23c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline23c <= man_b_pipeline22c;
	// synopsys translate_off
	initial
		man_b_pipeline24c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline24c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline24c <= man_b_pipeline23c;
	// synopsys translate_off
	initial
		man_b_pipeline25c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline25c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline25c <= man_b_pipeline24c;
	// synopsys translate_off
	initial
		man_b_pipeline26c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline26c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline26c <= man_b_pipeline25c;
	// synopsys translate_off
	initial
		man_b_pipeline27c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline27c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline27c <= man_b_pipeline26c;
	// synopsys translate_off
	initial
		man_b_pipeline28c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline28c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline28c <= man_b_pipeline27c;
	// synopsys translate_off
	initial
		man_b_pipeline29c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline29c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline29c <= man_b_pipeline28c;
	// synopsys translate_off
	initial
		man_b_pipeline2c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline2c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline2c <= man_b_pipeline1c;
	// synopsys translate_off
	initial
		man_b_pipeline30c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline30c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline30c <= man_b_pipeline29c;
	// synopsys translate_off
	initial
		man_b_pipeline31c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline31c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline31c <= man_b_pipeline30c;
	// synopsys translate_off
	initial
		man_b_pipeline32c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline32c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline32c <= man_b_pipeline31c;
	// synopsys translate_off
	initial
		man_b_pipeline33c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline33c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline33c <= man_b_pipeline32c;
	// synopsys translate_off
	initial
		man_b_pipeline34c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline34c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline34c <= man_b_pipeline33c;
	// synopsys translate_off
	initial
		man_b_pipeline35c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline35c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline35c <= man_b_pipeline34c;
	// synopsys translate_off
	initial
		man_b_pipeline36c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline36c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline36c <= man_b_pipeline35c;
	// synopsys translate_off
	initial
		man_b_pipeline37c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline37c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline37c <= man_b_pipeline36c;
	// synopsys translate_off
	initial
		man_b_pipeline38c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline38c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline38c <= man_b_pipeline37c;
	// synopsys translate_off
	initial
		man_b_pipeline39c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline39c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline39c <= man_b_pipeline38c;
	// synopsys translate_off
	initial
		man_b_pipeline3c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline3c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline3c <= man_b_pipeline2c;
	// synopsys translate_off
	initial
		man_b_pipeline40c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline40c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline40c <= man_b_pipeline39c;
	// synopsys translate_off
	initial
		man_b_pipeline41c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline41c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline41c <= man_b_pipeline40c;
	// synopsys translate_off
	initial
		man_b_pipeline42c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline42c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline42c <= man_b_pipeline41c;
	// synopsys translate_off
	initial
		man_b_pipeline43c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline43c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline43c <= man_b_pipeline42c;
	// synopsys translate_off
	initial
		man_b_pipeline44c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline44c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline44c <= man_b_pipeline43c;
	// synopsys translate_off
	initial
		man_b_pipeline45c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline45c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline45c <= man_b_pipeline44c;
	// synopsys translate_off
	initial
		man_b_pipeline46c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline46c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline46c <= man_b_pipeline45c;
	// synopsys translate_off
	initial
		man_b_pipeline47c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline47c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline47c <= man_b_pipeline46c;
	// synopsys translate_off
	initial
		man_b_pipeline48c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline48c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline48c <= man_b_pipeline47c;
	// synopsys translate_off
	initial
		man_b_pipeline49c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline49c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline49c <= man_b_pipeline48c;
	// synopsys translate_off
	initial
		man_b_pipeline4c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline4c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline4c <= man_b_pipeline3c;
	// synopsys translate_off
	initial
		man_b_pipeline50c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline50c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline50c <= man_b_pipeline49c;
	// synopsys translate_off
	initial
		man_b_pipeline51c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline51c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline51c <= man_b_pipeline50c;
	// synopsys translate_off
	initial
		man_b_pipeline52c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline52c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline52c <= man_b_pipeline51c;
	// synopsys translate_off
	initial
		man_b_pipeline53c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline53c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline53c <= man_b_pipeline52c;
	// synopsys translate_off
	initial
		man_b_pipeline54c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline54c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline54c <= man_b_pipeline53c;
	// synopsys translate_off
	initial
		man_b_pipeline55c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline55c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline55c <= man_b_pipeline54c;
	// synopsys translate_off
	initial
		man_b_pipeline5c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline5c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline5c <= man_b_pipeline4c;
	// synopsys translate_off
	initial
		man_b_pipeline6c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline6c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline6c <= man_b_pipeline5c;
	// synopsys translate_off
	initial
		man_b_pipeline7c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline7c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline7c <= man_b_pipeline6c;
	// synopsys translate_off
	initial
		man_b_pipeline8c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline8c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline8c <= man_b_pipeline7c;
	// synopsys translate_off
	initial
		man_b_pipeline9c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_b_pipeline9c <= 52'b0;
		else if  (clk_en == 1'b1)   man_b_pipeline9c <= man_b_pipeline8c;
	// synopsys translate_off
	initial
		man_res_pipe3 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) man_res_pipe3 <= 53'b0;
		else if  (clk_en == 1'b1)   man_res_pipe3 <= man_res_int_w;
	// synopsys translate_off
	initial
		quotient_pipe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) quotient_pipe1a <= 56'b0;
		else if  (clk_en == 1'b1)   quotient_pipe1a <= wire_altsrt_div1_quotient;
	// synopsys translate_off
	initial
		remainder_pipe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) remainder_pipe1a <= 53'b0;
		else if  (clk_en == 1'b1)   remainder_pipe1a <= wire_altsrt_div1_remain;
	// synopsys translate_off
	initial
		rnd_overflow_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rnd_overflow_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   rnd_overflow_dffe <= rnd_overflow;
	// synopsys translate_off
	initial
		rnded_man_pipe2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) rnded_man_pipe2a <= 53'b0;
		else if  (clk_en == 1'b1)   rnded_man_pipe2a <= rnded_man_w;
	// synopsys translate_off
	initial
		sign_a_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_a_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   sign_a_dffe <= dataa_int[63];
	// synopsys translate_off
	initial
		sign_b_dffe = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_b_dffe <= 1'b0;
		else if  (clk_en == 1'b1)   sign_b_dffe <= datab_int[63];
	// synopsys translate_off
	initial
		sign_div_pipeline0c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline0c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline0c <= sign_div;
	// synopsys translate_off
	initial
		sign_div_pipeline10c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline10c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline10c <= sign_div_pipeline9c;
	// synopsys translate_off
	initial
		sign_div_pipeline11c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline11c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline11c <= sign_div_pipeline10c;
	// synopsys translate_off
	initial
		sign_div_pipeline12c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline12c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline12c <= sign_div_pipeline11c;
	// synopsys translate_off
	initial
		sign_div_pipeline13c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline13c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline13c <= sign_div_pipeline12c;
	// synopsys translate_off
	initial
		sign_div_pipeline14c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline14c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline14c <= sign_div_pipeline13c;
	// synopsys translate_off
	initial
		sign_div_pipeline15c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline15c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline15c <= sign_div_pipeline14c;
	// synopsys translate_off
	initial
		sign_div_pipeline16c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline16c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline16c <= sign_div_pipeline15c;
	// synopsys translate_off
	initial
		sign_div_pipeline17c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline17c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline17c <= sign_div_pipeline16c;
	// synopsys translate_off
	initial
		sign_div_pipeline18c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline18c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline18c <= sign_div_pipeline17c;
	// synopsys translate_off
	initial
		sign_div_pipeline19c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline19c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline19c <= sign_div_pipeline18c;
	// synopsys translate_off
	initial
		sign_div_pipeline1c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline1c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline1c <= sign_div_pipeline0c;
	// synopsys translate_off
	initial
		sign_div_pipeline20c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline20c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline20c <= sign_div_pipeline19c;
	// synopsys translate_off
	initial
		sign_div_pipeline21c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline21c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline21c <= sign_div_pipeline20c;
	// synopsys translate_off
	initial
		sign_div_pipeline22c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline22c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline22c <= sign_div_pipeline21c;
	// synopsys translate_off
	initial
		sign_div_pipeline23c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline23c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline23c <= sign_div_pipeline22c;
	// synopsys translate_off
	initial
		sign_div_pipeline24c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline24c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline24c <= sign_div_pipeline23c;
	// synopsys translate_off
	initial
		sign_div_pipeline25c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline25c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline25c <= sign_div_pipeline24c;
	// synopsys translate_off
	initial
		sign_div_pipeline26c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline26c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline26c <= sign_div_pipeline25c;
	// synopsys translate_off
	initial
		sign_div_pipeline27c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline27c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline27c <= sign_div_pipeline26c;
	// synopsys translate_off
	initial
		sign_div_pipeline28c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline28c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline28c <= sign_div_pipeline27c;
	// synopsys translate_off
	initial
		sign_div_pipeline29c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline29c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline29c <= sign_div_pipeline28c;
	// synopsys translate_off
	initial
		sign_div_pipeline2c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline2c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline2c <= sign_div_pipeline1c;
	// synopsys translate_off
	initial
		sign_div_pipeline30c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline30c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline30c <= sign_div_pipeline29c;
	// synopsys translate_off
	initial
		sign_div_pipeline31c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline31c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline31c <= sign_div_pipeline30c;
	// synopsys translate_off
	initial
		sign_div_pipeline32c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline32c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline32c <= sign_div_pipeline31c;
	// synopsys translate_off
	initial
		sign_div_pipeline33c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline33c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline33c <= sign_div_pipeline32c;
	// synopsys translate_off
	initial
		sign_div_pipeline34c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline34c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline34c <= sign_div_pipeline33c;
	// synopsys translate_off
	initial
		sign_div_pipeline35c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline35c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline35c <= sign_div_pipeline34c;
	// synopsys translate_off
	initial
		sign_div_pipeline36c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline36c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline36c <= sign_div_pipeline35c;
	// synopsys translate_off
	initial
		sign_div_pipeline37c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline37c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline37c <= sign_div_pipeline36c;
	// synopsys translate_off
	initial
		sign_div_pipeline38c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline38c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline38c <= sign_div_pipeline37c;
	// synopsys translate_off
	initial
		sign_div_pipeline39c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline39c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline39c <= sign_div_pipeline38c;
	// synopsys translate_off
	initial
		sign_div_pipeline3c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline3c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline3c <= sign_div_pipeline2c;
	// synopsys translate_off
	initial
		sign_div_pipeline40c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline40c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline40c <= sign_div_pipeline39c;
	// synopsys translate_off
	initial
		sign_div_pipeline41c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline41c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline41c <= sign_div_pipeline40c;
	// synopsys translate_off
	initial
		sign_div_pipeline42c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline42c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline42c <= sign_div_pipeline41c;
	// synopsys translate_off
	initial
		sign_div_pipeline43c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline43c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline43c <= sign_div_pipeline42c;
	// synopsys translate_off
	initial
		sign_div_pipeline44c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline44c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline44c <= sign_div_pipeline43c;
	// synopsys translate_off
	initial
		sign_div_pipeline45c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline45c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline45c <= sign_div_pipeline44c;
	// synopsys translate_off
	initial
		sign_div_pipeline46c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline46c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline46c <= sign_div_pipeline45c;
	// synopsys translate_off
	initial
		sign_div_pipeline47c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline47c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline47c <= sign_div_pipeline46c;
	// synopsys translate_off
	initial
		sign_div_pipeline48c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline48c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline48c <= sign_div_pipeline47c;
	// synopsys translate_off
	initial
		sign_div_pipeline49c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline49c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline49c <= sign_div_pipeline48c;
	// synopsys translate_off
	initial
		sign_div_pipeline4c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline4c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline4c <= sign_div_pipeline3c;
	// synopsys translate_off
	initial
		sign_div_pipeline50c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline50c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline50c <= sign_div_pipeline49c;
	// synopsys translate_off
	initial
		sign_div_pipeline51c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline51c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline51c <= sign_div_pipeline50c;
	// synopsys translate_off
	initial
		sign_div_pipeline52c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline52c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline52c <= sign_div_pipeline51c;
	// synopsys translate_off
	initial
		sign_div_pipeline53c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline53c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline53c <= sign_div_pipeline52c;
	// synopsys translate_off
	initial
		sign_div_pipeline54c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline54c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline54c <= sign_div_pipeline53c;
	// synopsys translate_off
	initial
		sign_div_pipeline55c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline55c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline55c <= sign_div_pipeline54c;
	// synopsys translate_off
	initial
		sign_div_pipeline5c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline5c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline5c <= sign_div_pipeline4c;
	// synopsys translate_off
	initial
		sign_div_pipeline6c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline6c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline6c <= sign_div_pipeline5c;
	// synopsys translate_off
	initial
		sign_div_pipeline7c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline7c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline7c <= sign_div_pipeline6c;
	// synopsys translate_off
	initial
		sign_div_pipeline8c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline8c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline8c <= sign_div_pipeline7c;
	// synopsys translate_off
	initial
		sign_div_pipeline9c = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_div_pipeline9c <= 1'b0;
		else if  (clk_en == 1'b1)   sign_div_pipeline9c <= sign_div_pipeline8c;
	// synopsys translate_off
	initial
		sign_pipe1a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_pipe1a <= 1'b0;
		else if  (clk_en == 1'b1)   sign_pipe1a <= sign_div_pipeline_w;
	// synopsys translate_off
	initial
		sign_pipe2a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_pipe2a <= 1'b0;
		else if  (clk_en == 1'b1)   sign_pipe2a <= sign_pipe1a;
	// synopsys translate_off
	initial
		sign_pipe3a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) sign_pipe3a <= 1'b0;
		else if  (clk_en == 1'b1)   sign_pipe3a <= sign_pipe2a;
	assign
		wire_add_sub4_result_int = wire_add_sub4_dataa + wire_add_sub4_datab;
	assign
		wire_add_sub4_result = wire_add_sub4_result_int[53:0],
		wire_add_sub4_overflow = ~(wire_add_sub4_dataa[53:53] ^ wire_add_sub4_datab[53:53]) & (wire_add_sub4_dataa[53:53] ^ wire_add_sub4_result_int[53:53]);
	assign
		wire_add_sub4_dataa = add_1_dataa_w,
		wire_add_sub4_datab = add_1_datab_w;
	assign
		wire_add_sub5_result_int = wire_add_sub5_dataa - wire_add_sub5_datab;
	//synopsys translate_off
	initial
		wire_add_sub5_pipeline_dffe_Q = 0;
	//synopsys translate_on
	always @(posedge wire_add_sub5_clock or posedge wire_add_sub5_aclr)
		if (wire_add_sub5_aclr == 1'b1) wire_add_sub5_pipeline_dffe_Q <= 12'b0;
		else if (wire_add_sub5_clken == 1'b1) wire_add_sub5_pipeline_dffe_Q <= wire_add_sub5_pipeline_dffe_D;
	assign
		wire_add_sub5_result = wire_add_sub5_pipeline_dffe_Q[11:0],
		wire_add_sub5_pipeline_dffe_D[11:0] = wire_add_sub5_result_int;
	assign
		wire_add_sub5_aclr = aclr,
		wire_add_sub5_clken = clk_en,
		wire_add_sub5_clock = clock,
		wire_add_sub5_dataa = exp_sub_a_w,
		wire_add_sub5_datab = exp_sub_b_w;
	assign
		wire_add_sub6_result_int = wire_add_sub6_dataa + wire_add_sub6_datab;
	assign
		wire_add_sub6_result = wire_add_sub6_result_int[11:0],
		wire_add_sub6_overflow = ~(wire_add_sub6_dataa[11:11] ^ wire_add_sub6_datab[11:11]) & (wire_add_sub6_dataa[11:11] ^ wire_add_sub6_result_int[11:11]);
	assign
		wire_add_sub6_dataa = exp_sub_w,
		wire_add_sub6_datab = bias_add_w;
	always @(wire_cmpr2_dataa or wire_cmpr2_datab)
	begin
		if (wire_cmpr2_dataa == wire_cmpr2_datab) 
			begin
				wire_cmpr2_aeb_int = 1'b1;
			end
		else
			begin
				wire_cmpr2_aeb_int = 1'b0;
			end
		if (wire_cmpr2_dataa > wire_cmpr2_datab) 
			begin
				wire_cmpr2_agb_int = 1'b1;
			end
		else
			begin
				wire_cmpr2_agb_int = 1'b0;
			end
	end
	assign
		wire_cmpr2_ageb = wire_cmpr2_agb_int | wire_cmpr2_aeb_int;
	assign
		wire_cmpr2_dataa = quo_msb_m1_compare_dataa,
		wire_cmpr2_datab = quo_msb_m1_compare_datab;
	always @(wire_cmpr3_dataa or wire_cmpr3_datab)
	begin
		if (wire_cmpr3_dataa == wire_cmpr3_datab) 
			begin
				wire_cmpr3_aeb_int = 1'b1;
			end
		else
			begin
				wire_cmpr3_aeb_int = 1'b0;
			end
		if (wire_cmpr3_dataa > wire_cmpr3_datab) 
			begin
				wire_cmpr3_agb_int = 1'b1;
			end
		else
			begin
				wire_cmpr3_agb_int = 1'b0;
			end
	end
	assign
		wire_cmpr3_ageb = wire_cmpr3_agb_int | wire_cmpr3_aeb_int;
	assign
		wire_cmpr3_dataa = quo_msb_m2_compare_dataa,
		wire_cmpr3_datab = quo_msb_m2_compare_datab;
	assign
		aclr = 1'b0,
		add_1_dataa_w = {1'b0, checked_quotient_w},
		add_1_datab_w = {53'b00000000000000000000000000000000000000000000000000000, add_1_w},
		add_1_w = ((((~ guard_bit_w) & round_bit_w) & sticky_bit_w) | (guard_bit_w & round_bit_w)),
		add_one_process_w = wire_add_sub4_result[52:0],
		bias_add_w = (({12{(~ exp_a_b_w)}} & value_zero_w) | ({12{exp_a_b_w}} & bias_value_w)),
		bias_addition_overf_w = wire_add_sub6_overflow,
		bias_addition_w = wire_add_sub6_result[10:0],
		bias_value_w = (((({12{((~ mux1_exp_S1a) & (~ mux1_exp_S0a))}} & value_minus_1_w) | ({12{((~ mux1_exp_S1a) & mux1_exp_S0a)}} & value_normal_w)) | ({12{(mux1_exp_S1a & (~ mux1_exp_S0a))}} & value_normal_w)) | ({12{(mux1_exp_S1a & mux1_exp_S0a)}} & value_add_1_w)),
		checked_quotient_w = (({53{quo_msb_m1_w}} & quotient_msb_m1_w) | ({53{(~ quo_msb_m1_w)}} & quotient_msb_m2_w)),
		clk_en = 1'b1,
		dataa_exp_bus_w = dataa[62:52],
		dataa_exp_or_w = {(dataa_exp_or_w[9] | dataa_exp_bus_w[10]), (dataa_exp_or_w[8] | dataa_exp_bus_w[9]), (dataa_exp_or_w[7] | dataa_exp_bus_w[8]), (dataa_exp_or_w[6] | dataa_exp_bus_w[7]), (dataa_exp_or_w[5] | dataa_exp_bus_w[6]), (dataa_exp_or_w[4] | dataa_exp_bus_w[5]), (dataa_exp_or_w[3] | dataa_exp_bus_w[4]), (dataa_exp_or_w[2] | dataa_exp_bus_w[3]), (dataa_exp_or_w[1] | dataa_exp_bus_w[2]), (dataa_exp_or_w[0] | dataa_exp_bus_w[1]), dataa_exp_bus_w[0]},
		dataa_exp_w = dataa_exp_or_w[10],
		dataa_int = {dataa[63], (({63{dataa_S0}} & zero_bit_31_w) | ({63{(~ dataa_S0)}} & dataa[62:0]))},
		dataa_man_bus_w = dataa[51:0],
		dataa_man_or_w = {(dataa_man_or_w[50] | dataa_man_bus_w[51]), (dataa_man_or_w[49] | dataa_man_bus_w[50]), (dataa_man_or_w[48] | dataa_man_bus_w[49]), (dataa_man_or_w[47] | dataa_man_bus_w[48]), (dataa_man_or_w[46] | dataa_man_bus_w[47]), (dataa_man_or_w[45] | dataa_man_bus_w[46]), (dataa_man_or_w[44] | dataa_man_bus_w[45]), (dataa_man_or_w[43] | dataa_man_bus_w[44]), (dataa_man_or_w[42] | dataa_man_bus_w[43]), (dataa_man_or_w[41] | dataa_man_bus_w[42]), (dataa_man_or_w[40] | dataa_man_bus_w[41]), (dataa_man_or_w[39] | dataa_man_bus_w[40]), (dataa_man_or_w[38] | dataa_man_bus_w[39]), (dataa_man_or_w[37] | dataa_man_bus_w[38]), (dataa_man_or_w[36] | dataa_man_bus_w[37]), (dataa_man_or_w[35] | dataa_man_bus_w[36]), (dataa_man_or_w[34] | dataa_man_bus_w[35]), (dataa_man_or_w[33] | dataa_man_bus_w[34]), (dataa_man_or_w[32] | dataa_man_bus_w[33]), (dataa_man_or_w[31] | dataa_man_bus_w[32]), (dataa_man_or_w[30] | dataa_man_bus_w[31]), (dataa_man_or_w[29] | dataa_man_bus_w[30]), (dataa_man_or_w[28] | dataa_man_bus_w[29]), (dataa_man_or_w[27] | dataa_man_bus_w[28]), (dataa_man_or_w[26] | dataa_man_bus_w[27]), (dataa_man_or_w[25] | dataa_man_bus_w[26]), (dataa_man_or_w[24] | dataa_man_bus_w[25]), (dataa_man_or_w[23] | dataa_man_bus_w[24]), (dataa_man_or_w[22] | dataa_man_bus_w[23]), (dataa_man_or_w[21] | dataa_man_bus_w[22]), (dataa_man_or_w[20] | dataa_man_bus_w[21]), (dataa_man_or_w[19] | dataa_man_bus_w[20]), (dataa_man_or_w[18] | dataa_man_bus_w[19]), (dataa_man_or_w[17] | dataa_man_bus_w[18]), (dataa_man_or_w[16] | dataa_man_bus_w[17]), (dataa_man_or_w[15] | dataa_man_bus_w[16]), (dataa_man_or_w[14] | dataa_man_bus_w[15]), (dataa_man_or_w[13] | dataa_man_bus_w[14]), (dataa_man_or_w[12] | dataa_man_bus_w[13]), (dataa_man_or_w[11] | dataa_man_bus_w[12]), (dataa_man_or_w[10] | dataa_man_bus_w[11]), (dataa_man_or_w[9] | dataa_man_bus_w[10]), (dataa_man_or_w[8] | dataa_man_bus_w[9]), (dataa_man_or_w[7] | dataa_man_bus_w[8]), (dataa_man_or_w[6] | dataa_man_bus_w[7]), (dataa_man_or_w[5] | dataa_man_bus_w[6]), (dataa_man_or_w[4]
 | dataa_man_bus_w[5]), (dataa_man_or_w[3] | dataa_man_bus_w[4]), (dataa_man_or_w[2] | dataa_man_bus_w[3]), (dataa_man_or_w[1] | dataa_man_bus_w[2]), (dataa_man_or_w[0] | dataa_man_bus_w[1]), dataa_man_bus_w[0]},
		dataa_man_w = dataa_man_or_w[51],
		dataa_S0 = ((~ dataa_exp_w) & dataa_man_w),
		datab_exp_bus_w = datab[62:52],
		datab_exp_or_w = {(datab_exp_or_w[9] | datab_exp_bus_w[10]), (datab_exp_or_w[8] | datab_exp_bus_w[9]), (datab_exp_or_w[7] | datab_exp_bus_w[8]), (datab_exp_or_w[6] | datab_exp_bus_w[7]), (datab_exp_or_w[5] | datab_exp_bus_w[6]), (datab_exp_or_w[4] | datab_exp_bus_w[5]), (datab_exp_or_w[3] | datab_exp_bus_w[4]), (datab_exp_or_w[2] | datab_exp_bus_w[3]), (datab_exp_or_w[1] | datab_exp_bus_w[2]), (datab_exp_or_w[0] | datab_exp_bus_w[1]), datab_exp_bus_w[0]},
		datab_exp_w = datab_exp_or_w[10],
		datab_int = {datab[63], (({63{datab_S0}} & zero_bit_31_w) | ({63{(~ datab_S0)}} & datab[62:0]))},
		datab_man_bus_w = datab[51:0],
		datab_man_or_w = {(datab_man_or_w[50] | datab_man_bus_w[51]), (datab_man_or_w[49] | datab_man_bus_w[50]), (datab_man_or_w[48] | datab_man_bus_w[49]), (datab_man_or_w[47] | datab_man_bus_w[48]), (datab_man_or_w[46] | datab_man_bus_w[47]), (datab_man_or_w[45] | datab_man_bus_w[46]), (datab_man_or_w[44] | datab_man_bus_w[45]), (datab_man_or_w[43] | datab_man_bus_w[44]), (datab_man_or_w[42] | datab_man_bus_w[43]), (datab_man_or_w[41] | datab_man_bus_w[42]), (datab_man_or_w[40] | datab_man_bus_w[41]), (datab_man_or_w[39] | datab_man_bus_w[40]), (datab_man_or_w[38] | datab_man_bus_w[39]), (datab_man_or_w[37] | datab_man_bus_w[38]), (datab_man_or_w[36] | datab_man_bus_w[37]), (datab_man_or_w[35] | datab_man_bus_w[36]), (datab_man_or_w[34] | datab_man_bus_w[35]), (datab_man_or_w[33] | datab_man_bus_w[34]), (datab_man_or_w[32] | datab_man_bus_w[33]), (datab_man_or_w[31] | datab_man_bus_w[32]), (datab_man_or_w[30] | datab_man_bus_w[31]), (datab_man_or_w[29] | datab_man_bus_w[30]), (datab_man_or_w[28] | datab_man_bus_w[29]), (datab_man_or_w[27] | datab_man_bus_w[28]), (datab_man_or_w[26] | datab_man_bus_w[27]), (datab_man_or_w[25] | datab_man_bus_w[26]), (datab_man_or_w[24] | datab_man_bus_w[25]), (datab_man_or_w[23] | datab_man_bus_w[24]), (datab_man_or_w[22] | datab_man_bus_w[23]), (datab_man_or_w[21] | datab_man_bus_w[22]), (datab_man_or_w[20] | datab_man_bus_w[21]), (datab_man_or_w[19] | datab_man_bus_w[20]), (datab_man_or_w[18] | datab_man_bus_w[19]), (datab_man_or_w[17] | datab_man_bus_w[18]), (datab_man_or_w[16] | datab_man_bus_w[17]), (datab_man_or_w[15] | datab_man_bus_w[16]), (datab_man_or_w[14] | datab_man_bus_w[15]), (datab_man_or_w[13] | datab_man_bus_w[14]), (datab_man_or_w[12] | datab_man_bus_w[13]), (datab_man_or_w[11] | datab_man_bus_w[12]), (datab_man_or_w[10] | datab_man_bus_w[11]), (datab_man_or_w[9] | datab_man_bus_w[10]), (datab_man_or_w[8] | datab_man_bus_w[9]), (datab_man_or_w[7] | datab_man_bus_w[8]), (datab_man_or_w[6] | datab_man_bus_w[7]), (datab_man_or_w[5] | datab_man_bus_w[6]), (datab_man_or_w[4]
 | datab_man_bus_w[5]), (datab_man_or_w[3] | datab_man_bus_w[4]), (datab_man_or_w[2] | datab_man_bus_w[3]), (datab_man_or_w[1] | datab_man_bus_w[2]), (datab_man_or_w[0] | datab_man_bus_w[1]), datab_man_bus_w[0]},
		datab_man_w = datab_man_or_w[51],
		datab_S0 = ((~ datab_exp_w) & datab_man_w),
		divider_srt_w = divider_pipe1a,
		division_by_w = zero_datab_w,
		division_by_zero = full_exc_out_dffe[0],
		exp_a_and_w = {(exp_a_and_w[9] & exp_a_bus_w[10]), (exp_a_and_w[8] & exp_a_bus_w[9]), (exp_a_and_w[7] & exp_a_bus_w[8]), (exp_a_and_w[6] & exp_a_bus_w[7]), (exp_a_and_w[5] & exp_a_bus_w[6]), (exp_a_and_w[4] & exp_a_bus_w[5]), (exp_a_and_w[3] & exp_a_bus_w[4]), (exp_a_and_w[2] & exp_a_bus_w[3]), (exp_a_and_w[1] & exp_a_bus_w[2]), (exp_a_and_w[0] & exp_a_bus_w[1]), exp_a_bus_w[0]},
		exp_a_b_w = exp_a_b_dffe,
		exp_a_bus_w = exp_a_dffe3a_w,
		exp_a_dffe1a_w = exp_a_dffe1a,
		exp_a_dffe3a_int_w = exp_a_dffe2a,
		exp_a_dffe3a_w = exp_a_dffe3a_int_w,
		exp_a_non_zero_w = exp_a_or_dffe,
		exp_a_one_w = exp_a_and_dffe,
		exp_a_or_w = {(exp_a_or_w[9] | exp_a_bus_w[10]), (exp_a_or_w[8] | exp_a_bus_w[9]), (exp_a_or_w[7] | exp_a_bus_w[8]), (exp_a_or_w[6] | exp_a_bus_w[7]), (exp_a_or_w[5] | exp_a_bus_w[6]), (exp_a_or_w[4] | exp_a_bus_w[5]), (exp_a_or_w[3] | exp_a_bus_w[4]), (exp_a_or_w[2] | exp_a_bus_w[3]), (exp_a_or_w[1] | exp_a_bus_w[2]), (exp_a_or_w[0] | exp_a_bus_w[1]), exp_a_bus_w[0]},
		exp_a_pipeline_w = exp_a_pipeline55c,
		exp_a_w = exp_a_dffe,
		exp_a_zero_w = (~ exp_a_or_dffe),
		exp_b_and_w = {(exp_b_and_w[9] & exp_b_bus_w[10]), (exp_b_and_w[8] & exp_b_bus_w[9]), (exp_b_and_w[7] & exp_b_bus_w[8]), (exp_b_and_w[6] & exp_b_bus_w[7]), (exp_b_and_w[5] & exp_b_bus_w[6]), (exp_b_and_w[4] & exp_b_bus_w[5]), (exp_b_and_w[3] & exp_b_bus_w[4]), (exp_b_and_w[2] & exp_b_bus_w[3]), (exp_b_and_w[1] & exp_b_bus_w[2]), (exp_b_and_w[0] & exp_b_bus_w[1]), exp_b_bus_w[0]},
		exp_b_bus_w = exp_b_dffe3a_w,
		exp_b_dffe1a_w = exp_b_dffe1a,
		exp_b_dffe3a_int_w = exp_b_dffe2a,
		exp_b_dffe3a_w = exp_b_dffe3a_int_w,
		exp_b_non_zero_w = exp_b_or_dffe,
		exp_b_one_w = exp_b_and_dffe,
		exp_b_or_w = {(exp_b_or_w[9] | exp_b_bus_w[10]), (exp_b_or_w[8] | exp_b_bus_w[9]), (exp_b_or_w[7] | exp_b_bus_w[8]), (exp_b_or_w[6] | exp_b_bus_w[7]), (exp_b_or_w[5] | exp_b_bus_w[6]), (exp_b_or_w[4] | exp_b_bus_w[5]), (exp_b_or_w[3] | exp_b_bus_w[4]), (exp_b_or_w[2] | exp_b_bus_w[3]), (exp_b_or_w[1] | exp_b_bus_w[2]), (exp_b_or_w[0] | exp_b_bus_w[1]), exp_b_bus_w[0]},
		exp_b_pipeline_w = exp_b_pipeline55c,
		exp_b_w = exp_b_dffe,
		exp_b_zero_w = (~ exp_b_or_dffe),
		exp_bus_w = {exp_a_dffe1a_w, exp_b_dffe1a_w},
		exp_exc_ones_w = 11'b11111111111,
		exp_exc_zeros_w = 11'b00000000000,
		exp_higher_bit = not_bias_addition_w[10:6],
		exp_higher_or = {(exp_higher_or[3] | exp_higher_bit[4]), (exp_higher_or[2] | exp_higher_bit[3]), (exp_higher_or[1] | exp_higher_bit[2]), (exp_higher_or[0] | exp_higher_bit[1]), exp_higher_bit[0]},
		exp_infi_bus_w = norm_infi_and_w[10],
		exp_or_w = {(exp_or_w[20] | exp_bus_w[21]), (exp_or_w[19] | exp_bus_w[20]), (exp_or_w[18] | exp_bus_w[19]), (exp_or_w[17] | exp_bus_w[18]), (exp_or_w[16] | exp_bus_w[17]), (exp_or_w[15] | exp_bus_w[16]), (exp_or_w[14] | exp_bus_w[15]), (exp_or_w[13] | exp_bus_w[14]), (exp_or_w[12] | exp_bus_w[13]), (exp_or_w[11] | exp_bus_w[12]), (exp_or_w[10] | exp_bus_w[11]), (exp_or_w[9] | exp_bus_w[10]), (exp_or_w[8] | exp_bus_w[9]), (exp_or_w[7] | exp_bus_w[8]), (exp_or_w[6] | exp_bus_w[7]), (exp_or_w[5] | exp_bus_w[6]), (exp_or_w[4] | exp_bus_w[5]), (exp_or_w[3] | exp_bus_w[4]), (exp_or_w[2] | exp_bus_w[3]), (exp_or_w[1] | exp_bus_w[2]), (exp_or_w[0] | exp_bus_w[1]), exp_bus_w[0]},
		exp_res_and_w = {(exp_res_and_w[9] & exp_res_bus_w[10]), (exp_res_and_w[8] & exp_res_bus_w[9]), (exp_res_and_w[7] & exp_res_bus_w[8]), (exp_res_and_w[6] & exp_res_bus_w[7]), (exp_res_and_w[5] & exp_res_bus_w[6]), (exp_res_and_w[4] & exp_res_bus_w[5]), (exp_res_and_w[3] & exp_res_bus_w[4]), (exp_res_and_w[2] & exp_res_bus_w[3]), (exp_res_and_w[1] & exp_res_bus_w[2]), (exp_res_and_w[0] & exp_res_bus_w[1]), exp_res_bus_w[0]},
		exp_res_bus_w = exp_res_w,
		exp_res_int2_bus_w = exp_res_int2_w,
		exp_res_int2_or_w = {(exp_res_int2_or_w[9] | exp_res_int2_bus_w[10]), (exp_res_int2_or_w[8] | exp_res_int2_bus_w[9]), (exp_res_int2_or_w[7] | exp_res_int2_bus_w[8]), (exp_res_int2_or_w[6] | exp_res_int2_bus_w[7]), (exp_res_int2_or_w[5] | exp_res_int2_bus_w[6]), (exp_res_int2_or_w[4] | exp_res_int2_bus_w[5]), (exp_res_int2_or_w[3] | exp_res_int2_bus_w[4]), (exp_res_int2_or_w[2] | exp_res_int2_bus_w[3]), (exp_res_int2_or_w[1] | exp_res_int2_bus_w[2]), (exp_res_int2_or_w[0] | exp_res_int2_bus_w[1]), exp_res_int2_bus_w[0]},
		exp_res_int2_w = exp_res_pipe3,
		exp_res_int_w = ((({11{((~ bias_addition_overf_w) & (~ exp_sign_w))}} & bias_addition_w) | ({11{((~ bias_addition_overf_w) & exp_sign_w)}} & underflow_zeros_w)) | ({11{(bias_addition_overf_w & (~ exp_sign_w))}} & overflow_ones_w)),
		exp_res_w = (({11{not_exp_res_int2_or_res_w}} & zero_bit_8_w) | ({11{(~ not_exp_res_int2_or_res_w)}} & exp_res_int2_w)),
		exp_sign_w = wire_add_sub6_result[11],
		exp_sub_a_w = {1'b0, exp_a_dffe1a_w},
		exp_sub_b_w = {1'b0, exp_b_dffe1a_w},
		exp_sub_w = wire_add_sub5_result,
		exp_zero_bus_w = (~ norm_zero_or_w[10]),
		guard_bit_quo_msb_m1 = quotient_w[2],
		guard_bit_quo_msb_m2 = quotient_w[1],
		guard_bit_w = ((quotient_w[54] & guard_bit_quo_msb_m1) | ((~ quotient_w[54]) & guard_bit_quo_msb_m2)),
		infi_combi_w = (((norm_dataa_w & zero_datab_w) | (infi_dataa_w & norm_datab_w)) | (infi_dataa_w & zero_datab_w)),
		infi_dataa_w = (exp_a_one_w & man_a_zero_w),
		infi_datab_w = (exp_b_one_w & man_b_zero_w),
		infi_norm_res_w = (exp_res_and_w[10] & (~ man_res_or_w[51])),
		infi_res_w = {sign_exc_bit_w, exp_exc_ones_w, man_exc_zeros_w},
		man_24_zeros_w = 53'b00000000000000000000000000000000000000000000000000000,
		man_a_and_w = {(man_a_and_w[50] & man_a_bus_w[51]), (man_a_and_w[49] & man_a_bus_w[50]), (man_a_and_w[48] & man_a_bus_w[49]), (man_a_and_w[47] & man_a_bus_w[48]), (man_a_and_w[46] & man_a_bus_w[47]), (man_a_and_w[45] & man_a_bus_w[46]), (man_a_and_w[44] & man_a_bus_w[45]), (man_a_and_w[43] & man_a_bus_w[44]), (man_a_and_w[42] & man_a_bus_w[43]), (man_a_and_w[41] & man_a_bus_w[42]), (man_a_and_w[40] & man_a_bus_w[41]), (man_a_and_w[39] & man_a_bus_w[40]), (man_a_and_w[38] & man_a_bus_w[39]), (man_a_and_w[37] & man_a_bus_w[38]), (man_a_and_w[36] & man_a_bus_w[37]), (man_a_and_w[35] & man_a_bus_w[36]), (man_a_and_w[34] & man_a_bus_w[35]), (man_a_and_w[33] & man_a_bus_w[34]), (man_a_and_w[32] & man_a_bus_w[33]), (man_a_and_w[31] & man_a_bus_w[32]), (man_a_and_w[30] & man_a_bus_w[31]), (man_a_and_w[29] & man_a_bus_w[30]), (man_a_and_w[28] & man_a_bus_w[29]), (man_a_and_w[27] & man_a_bus_w[28]), (man_a_and_w[26] & man_a_bus_w[27]), (man_a_and_w[25] & man_a_bus_w[26]), (man_a_and_w[24] & man_a_bus_w[25]), (man_a_and_w[23] & man_a_bus_w[24]), (man_a_and_w[22] & man_a_bus_w[23]), (man_a_and_w[21] & man_a_bus_w[22]), (man_a_and_w[20] & man_a_bus_w[21]), (man_a_and_w[19] & man_a_bus_w[20]), (man_a_and_w[18] & man_a_bus_w[19]), (man_a_and_w[17] & man_a_bus_w[18]), (man_a_and_w[16] & man_a_bus_w[17]), (man_a_and_w[15] & man_a_bus_w[16]), (man_a_and_w[14] & man_a_bus_w[15]), (man_a_and_w[13] & man_a_bus_w[14]), (man_a_and_w[12] & man_a_bus_w[13]), (man_a_and_w[11] & man_a_bus_w[12]), (man_a_and_w[10] & man_a_bus_w[11]), (man_a_and_w[9] & man_a_bus_w[10]), (man_a_and_w[8] & man_a_bus_w[9]), (man_a_and_w[7] & man_a_bus_w[8]), (man_a_and_w[6] & man_a_bus_w[7]), (man_a_and_w[5] & man_a_bus_w[6]), (man_a_and_w[4] & man_a_bus_w[5]), (man_a_and_w[3] & man_a_bus_w[4]), (man_a_and_w[2] & man_a_bus_w[3]), (man_a_and_w[1] & man_a_bus_w[2]), (man_a_and_w[0] & man_a_bus_w[1]), man_a_bus_w[0]},
		man_a_bus_w = man_a_dffe3a_w,
		man_a_dffe3a_w = man_a_dffe3a,
		man_a_int_w = man_a_dffe,
		man_a_non_zero_w = man_a_or_dffe,
		man_a_one_w = man_a_and_dffe,
		man_a_or_w = {(man_a_or_w[50] | man_a_bus_w[51]), (man_a_or_w[49] | man_a_bus_w[50]), (man_a_or_w[48] | man_a_bus_w[49]), (man_a_or_w[47] | man_a_bus_w[48]), (man_a_or_w[46] | man_a_bus_w[47]), (man_a_or_w[45] | man_a_bus_w[46]), (man_a_or_w[44] | man_a_bus_w[45]), (man_a_or_w[43] | man_a_bus_w[44]), (man_a_or_w[42] | man_a_bus_w[43]), (man_a_or_w[41] | man_a_bus_w[42]), (man_a_or_w[40] | man_a_bus_w[41]), (man_a_or_w[39] | man_a_bus_w[40]), (man_a_or_w[38] | man_a_bus_w[39]), (man_a_or_w[37] | man_a_bus_w[38]), (man_a_or_w[36] | man_a_bus_w[37]), (man_a_or_w[35] | man_a_bus_w[36]), (man_a_or_w[34] | man_a_bus_w[35]), (man_a_or_w[33] | man_a_bus_w[34]), (man_a_or_w[32] | man_a_bus_w[33]), (man_a_or_w[31] | man_a_bus_w[32]), (man_a_or_w[30] | man_a_bus_w[31]), (man_a_or_w[29] | man_a_bus_w[30]), (man_a_or_w[28] | man_a_bus_w[29]), (man_a_or_w[27] | man_a_bus_w[28]), (man_a_or_w[26] | man_a_bus_w[27]), (man_a_or_w[25] | man_a_bus_w[26]), (man_a_or_w[24] | man_a_bus_w[25]), (man_a_or_w[23] | man_a_bus_w[24]), (man_a_or_w[22] | man_a_bus_w[23]), (man_a_or_w[21] | man_a_bus_w[22]), (man_a_or_w[20] | man_a_bus_w[21]), (man_a_or_w[19] | man_a_bus_w[20]), (man_a_or_w[18] | man_a_bus_w[19]), (man_a_or_w[17] | man_a_bus_w[18]), (man_a_or_w[16] | man_a_bus_w[17]), (man_a_or_w[15] | man_a_bus_w[16]), (man_a_or_w[14] | man_a_bus_w[15]), (man_a_or_w[13] | man_a_bus_w[14]), (man_a_or_w[12] | man_a_bus_w[13]), (man_a_or_w[11] | man_a_bus_w[12]), (man_a_or_w[10] | man_a_bus_w[11]), (man_a_or_w[9] | man_a_bus_w[10]), (man_a_or_w[8] | man_a_bus_w[9]), (man_a_or_w[7] | man_a_bus_w[8]), (man_a_or_w[6] | man_a_bus_w[7]), (man_a_or_w[5] | man_a_bus_w[6]), (man_a_or_w[4] | man_a_bus_w[5]), (man_a_or_w[3] | man_a_bus_w[4]), (man_a_or_w[2] | man_a_bus_w[3]), (man_a_or_w[1] | man_a_bus_w[2]), (man_a_or_w[0] | man_a_bus_w[1]), man_a_bus_w[0]},
		man_a_pipeline_w = man_a_pipeline55c,
		man_a_w = {1'b1, man_a_int_w},
		man_a_zero_w = (~ man_a_or_dffe),
		man_b_and_w = {(man_b_and_w[50] & man_b_bus_w[51]), (man_b_and_w[49] & man_b_bus_w[50]), (man_b_and_w[48] & man_b_bus_w[49]), (man_b_and_w[47] & man_b_bus_w[48]), (man_b_and_w[46] & man_b_bus_w[47]), (man_b_and_w[45] & man_b_bus_w[46]), (man_b_and_w[44] & man_b_bus_w[45]), (man_b_and_w[43] & man_b_bus_w[44]), (man_b_and_w[42] & man_b_bus_w[43]), (man_b_and_w[41] & man_b_bus_w[42]), (man_b_and_w[40] & man_b_bus_w[41]), (man_b_and_w[39] & man_b_bus_w[40]), (man_b_and_w[38] & man_b_bus_w[39]), (man_b_and_w[37] & man_b_bus_w[38]), (man_b_and_w[36] & man_b_bus_w[37]), (man_b_and_w[35] & man_b_bus_w[36]), (man_b_and_w[34] & man_b_bus_w[35]), (man_b_and_w[33] & man_b_bus_w[34]), (man_b_and_w[32] & man_b_bus_w[33]), (man_b_and_w[31] & man_b_bus_w[32]), (man_b_and_w[30] & man_b_bus_w[31]), (man_b_and_w[29] & man_b_bus_w[30]), (man_b_and_w[28] & man_b_bus_w[29]), (man_b_and_w[27] & man_b_bus_w[28]), (man_b_and_w[26] & man_b_bus_w[27]), (man_b_and_w[25] & man_b_bus_w[26]), (man_b_and_w[24] & man_b_bus_w[25]), (man_b_and_w[23] & man_b_bus_w[24]), (man_b_and_w[22] & man_b_bus_w[23]), (man_b_and_w[21] & man_b_bus_w[22]), (man_b_and_w[20] & man_b_bus_w[21]), (man_b_and_w[19] & man_b_bus_w[20]), (man_b_and_w[18] & man_b_bus_w[19]), (man_b_and_w[17] & man_b_bus_w[18]), (man_b_and_w[16] & man_b_bus_w[17]), (man_b_and_w[15] & man_b_bus_w[16]), (man_b_and_w[14] & man_b_bus_w[15]), (man_b_and_w[13] & man_b_bus_w[14]), (man_b_and_w[12] & man_b_bus_w[13]), (man_b_and_w[11] & man_b_bus_w[12]), (man_b_and_w[10] & man_b_bus_w[11]), (man_b_and_w[9] & man_b_bus_w[10]), (man_b_and_w[8] & man_b_bus_w[9]), (man_b_and_w[7] & man_b_bus_w[8]), (man_b_and_w[6] & man_b_bus_w[7]), (man_b_and_w[5] & man_b_bus_w[6]), (man_b_and_w[4] & man_b_bus_w[5]), (man_b_and_w[3] & man_b_bus_w[4]), (man_b_and_w[2] & man_b_bus_w[3]), (man_b_and_w[1] & man_b_bus_w[2]), (man_b_and_w[0] & man_b_bus_w[1]), man_b_bus_w[0]},
		man_b_bus_w = man_b_dffe3a_w,
		man_b_dffe3a_w = man_b_dffe3a,
		man_b_int_w = man_b_dffe,
		man_b_non_zero_w = man_b_or_dffe,
		man_b_one_w = man_b_and_dffe,
		man_b_or_w = {(man_b_or_w[50] | man_b_bus_w[51]), (man_b_or_w[49] | man_b_bus_w[50]), (man_b_or_w[48] | man_b_bus_w[49]), (man_b_or_w[47] | man_b_bus_w[48]), (man_b_or_w[46] | man_b_bus_w[47]), (man_b_or_w[45] | man_b_bus_w[46]), (man_b_or_w[44] | man_b_bus_w[45]), (man_b_or_w[43] | man_b_bus_w[44]), (man_b_or_w[42] | man_b_bus_w[43]), (man_b_or_w[41] | man_b_bus_w[42]), (man_b_or_w[40] | man_b_bus_w[41]), (man_b_or_w[39] | man_b_bus_w[40]), (man_b_or_w[38] | man_b_bus_w[39]), (man_b_or_w[37] | man_b_bus_w[38]), (man_b_or_w[36] | man_b_bus_w[37]), (man_b_or_w[35] | man_b_bus_w[36]), (man_b_or_w[34] | man_b_bus_w[35]), (man_b_or_w[33] | man_b_bus_w[34]), (man_b_or_w[32] | man_b_bus_w[33]), (man_b_or_w[31] | man_b_bus_w[32]), (man_b_or_w[30] | man_b_bus_w[31]), (man_b_or_w[29] | man_b_bus_w[30]), (man_b_or_w[28] | man_b_bus_w[29]), (man_b_or_w[27] | man_b_bus_w[28]), (man_b_or_w[26] | man_b_bus_w[27]), (man_b_or_w[25] | man_b_bus_w[26]), (man_b_or_w[24] | man_b_bus_w[25]), (man_b_or_w[23] | man_b_bus_w[24]), (man_b_or_w[22] | man_b_bus_w[23]), (man_b_or_w[21] | man_b_bus_w[22]), (man_b_or_w[20] | man_b_bus_w[21]), (man_b_or_w[19] | man_b_bus_w[20]), (man_b_or_w[18] | man_b_bus_w[19]), (man_b_or_w[17] | man_b_bus_w[18]), (man_b_or_w[16] | man_b_bus_w[17]), (man_b_or_w[15] | man_b_bus_w[16]), (man_b_or_w[14] | man_b_bus_w[15]), (man_b_or_w[13] | man_b_bus_w[14]), (man_b_or_w[12] | man_b_bus_w[13]), (man_b_or_w[11] | man_b_bus_w[12]), (man_b_or_w[10] | man_b_bus_w[11]), (man_b_or_w[9] | man_b_bus_w[10]), (man_b_or_w[8] | man_b_bus_w[9]), (man_b_or_w[7] | man_b_bus_w[8]), (man_b_or_w[6] | man_b_bus_w[7]), (man_b_or_w[5] | man_b_bus_w[6]), (man_b_or_w[4] | man_b_bus_w[5]), (man_b_or_w[3] | man_b_bus_w[4]), (man_b_or_w[2] | man_b_bus_w[3]), (man_b_or_w[1] | man_b_bus_w[2]), (man_b_or_w[0] | man_b_bus_w[1]), man_b_bus_w[0]},
		man_b_pipeline_w = man_b_pipeline55c,
		man_b_w = {1'b1, man_b_int_w},
		man_b_zero_w = (~ man_b_or_dffe),
		man_exc_nan_w = {1'b1, man_exc_zeros_w[50:0]},
		man_exc_zeros_w = 52'b0000000000000000000000000000000000000000000000000000,
		man_res_bus_w = man_res_w[51:0],
		man_res_int2_w = man_res_pipe3,
		man_res_int_w = mux_zero_non_zero_w,
		man_res_or_w = {(man_res_or_w[50] | man_res_bus_w[51]), (man_res_or_w[49] | man_res_bus_w[50]), (man_res_or_w[48] | man_res_bus_w[49]), (man_res_or_w[47] | man_res_bus_w[48]), (man_res_or_w[46] | man_res_bus_w[47]), (man_res_or_w[45] | man_res_bus_w[46]), (man_res_or_w[44] | man_res_bus_w[45]), (man_res_or_w[43] | man_res_bus_w[44]), (man_res_or_w[42] | man_res_bus_w[43]), (man_res_or_w[41] | man_res_bus_w[42]), (man_res_or_w[40] | man_res_bus_w[41]), (man_res_or_w[39] | man_res_bus_w[40]), (man_res_or_w[38] | man_res_bus_w[39]), (man_res_or_w[37] | man_res_bus_w[38]), (man_res_or_w[36] | man_res_bus_w[37]), (man_res_or_w[35] | man_res_bus_w[36]), (man_res_or_w[34] | man_res_bus_w[35]), (man_res_or_w[33] | man_res_bus_w[34]), (man_res_or_w[32] | man_res_bus_w[33]), (man_res_or_w[31] | man_res_bus_w[32]), (man_res_or_w[30] | man_res_bus_w[31]), (man_res_or_w[29] | man_res_bus_w[30]), (man_res_or_w[28] | man_res_bus_w[29]), (man_res_or_w[27] | man_res_bus_w[28]), (man_res_or_w[26] | man_res_bus_w[27]), (man_res_or_w[25] | man_res_bus_w[26]), (man_res_or_w[24] | man_res_bus_w[25]), (man_res_or_w[23] | man_res_bus_w[24]), (man_res_or_w[22] | man_res_bus_w[23]), (man_res_or_w[21] | man_res_bus_w[22]), (man_res_or_w[20] | man_res_bus_w[21]), (man_res_or_w[19] | man_res_bus_w[20]), (man_res_or_w[18] | man_res_bus_w[19]), (man_res_or_w[17] | man_res_bus_w[18]), (man_res_or_w[16] | man_res_bus_w[17]), (man_res_or_w[15] | man_res_bus_w[16]), (man_res_or_w[14] | man_res_bus_w[15]), (man_res_or_w[13] | man_res_bus_w[14]), (man_res_or_w[12] | man_res_bus_w[13]), (man_res_or_w[11] | man_res_bus_w[12]), (man_res_or_w[10] | man_res_bus_w[11]), (man_res_or_w[9] | man_res_bus_w[10]), (man_res_or_w[8] | man_res_bus_w[9]), (man_res_or_w[7] | man_res_bus_w[8]), (man_res_or_w[6] | man_res_bus_w[7]), (man_res_or_w[5] | man_res_bus_w[6]), (man_res_or_w[4] | man_res_bus_w[5]), (man_res_or_w[3] | man_res_bus_w[4]), (man_res_or_w[2] | man_res_bus_w[3]), (man_res_or_w[1] | man_res_bus_w[2]), (man_res_or_w[0] | man_res_bus_w[1]), man_res_bus_w[0]}
,
		man_res_w = (({53{not_exp_res_int2_or_res_w}} & zero_bit_23_w) | ({53{(~ not_exp_res_int2_or_res_w)}} & man_res_int2_w)),
		mux1_exp_S0a = rnd_add_overf_w,
		mux1_exp_S1a = implied_bit2a,
		mux_1_res_w = (({64{overflow_w}} & infi_res_w) | ({64{(~ overflow_w)}} & norm_res_int_w)),
		mux_2_res_w = (({64{zero_w}} & zero_res_w) | ({64{(~ zero_w)}} & mux_1_res_w)),
		mux_3_res_w = (({64{nan_w}} & nan_res_w) | ({64{(~ nan_w)}} & mux_2_res_w)),
		mux_zero_non_zero_S0 = (((exp_zero_bus_w | signed_N_exp_h_or) | bias_addition_overf_w) | (exp_infi_bus_w & (~ exp_sign_w))),
		mux_zero_non_zero_w = (({53{mux_zero_non_zero_S0}} & man_24_zeros_w) | ({53{(~ mux_zero_non_zero_S0)}} & res_rnded_man_w)),
		nan = full_exc_out_dffe[1],
		nan_dataa_w = (exp_a_one_w & (man_a_non_zero_w | man_a_one_w)),
		nan_datab_w = (exp_b_one_w & (man_b_non_zero_w | man_b_one_w)),
		nan_res_w = {sign_exc_bit_w, exp_exc_ones_w, man_exc_nan_w},
		nan_w = (((nan_dataa_w | nan_datab_w) | (zero_dataa_w & zero_datab_w)) | (infi_dataa_w & infi_datab_w)),
		norm_dataa_w = ((exp_a_non_zero_w & ((man_a_zero_w | man_a_non_zero_w) | man_a_one_w)) & (~ exp_a_one_w)),
		norm_datab_w = ((exp_b_non_zero_w & ((man_b_zero_w | man_b_non_zero_w) | man_b_one_w)) & (~ exp_b_one_w)),
		norm_infi_and_w = {(norm_infi_and_w[9] & norm_infi_bus_w[10]), (norm_infi_and_w[8] & norm_infi_bus_w[9]), (norm_infi_and_w[7] & norm_infi_bus_w[8]), (norm_infi_and_w[6] & norm_infi_bus_w[7]), (norm_infi_and_w[5] & norm_infi_bus_w[6]), (norm_infi_and_w[4] & norm_infi_bus_w[5]), (norm_infi_and_w[3] & norm_infi_bus_w[4]), (norm_infi_and_w[2] & norm_infi_bus_w[3]), (norm_infi_and_w[1] & norm_infi_bus_w[2]), (norm_infi_and_w[0] & norm_infi_bus_w[1]), norm_infi_bus_w[0]},
		norm_infi_bus_w = bias_addition_w,
		norm_res_int_w = {sign_pipe3a, exp_res_w[10:0], man_res_w[51:0]},
		norm_zero_bus_w = bias_addition_w,
		norm_zero_or_w = {(norm_zero_or_w[9] | norm_zero_bus_w[10]), (norm_zero_or_w[8] | norm_zero_bus_w[9]), (norm_zero_or_w[7] | norm_zero_bus_w[8]), (norm_zero_or_w[6] | norm_zero_bus_w[7]), (norm_zero_or_w[5] | norm_zero_bus_w[6]), (norm_zero_or_w[4] | norm_zero_bus_w[5]), (norm_zero_or_w[3] | norm_zero_bus_w[4]), (norm_zero_or_w[2] | norm_zero_bus_w[3]), (norm_zero_or_w[1] | norm_zero_bus_w[2]), (norm_zero_or_w[0] | norm_zero_bus_w[1]), norm_zero_bus_w[0]},
		not_bias_addition_w = (~ bias_addition_w),
		not_exp_res_int2_or_res_w = (~ exp_res_int2_or_w[10]),
		overflow = full_exc_out_dffe[3],
		overflow_int_w = (((infi_combi_w | bias_addition_overf_dffe) | infi_norm_res_w) & (~ nan_w)),
		overflow_man_w = {1'b1, 52'b0000000000000000000000000000000000000000000000000000},
		overflow_ones_w = 11'b11111111111,
		overflow_w = overflow_int_w,
		quo_msb_m1_compare_dataa = {remainder_true_w, 30'b000000000000000000000000000000},
		quo_msb_m1_compare_datab = {30'b000000000000000000000000000000, divider_srt_w},
		quo_msb_m1_compare_w = wire_cmpr2_ageb,
		quo_msb_m1_w = quotient_w[54],
		quo_msb_m2_compare_dataa = {remainder_true_w, 31'b0000000000000000000000000000000},
		quo_msb_m2_compare_datab = {31'b0000000000000000000000000000000, divider_srt_w},
		quo_msb_m2_compare_w = wire_cmpr3_ageb,
		quotient_msb_m1_w = quotient_w[54:2],
		quotient_msb_m2_w = quotient_w[53:1],
		quotient_w = quotient_pipe1a,
		remainder_srt_w = remainder_pipe1a,
		remainder_true_w = remainder_srt_w,
		res_rnded_man_w = rnded_man_pipe2a,
		result = full_result_out_dffe,
		result_dffe_bus_w = full_result_out_dffe[62:0],
		result_dffe_or_w = {(result_dffe_or_w[61] | result_dffe_bus_w[62]), (result_dffe_or_w[60] | result_dffe_bus_w[61]), (result_dffe_or_w[59] | result_dffe_bus_w[60]), (result_dffe_or_w[58] | result_dffe_bus_w[59]), (result_dffe_or_w[57] | result_dffe_bus_w[58]), (result_dffe_or_w[56] | result_dffe_bus_w[57]), (result_dffe_or_w[55] | result_dffe_bus_w[56]), (result_dffe_or_w[54] | result_dffe_bus_w[55]), (result_dffe_or_w[53] | result_dffe_bus_w[54]), (result_dffe_or_w[52] | result_dffe_bus_w[53]), (result_dffe_or_w[51] | result_dffe_bus_w[52]), (result_dffe_or_w[50] | result_dffe_bus_w[51]), (result_dffe_or_w[49] | result_dffe_bus_w[50]), (result_dffe_or_w[48] | result_dffe_bus_w[49]), (result_dffe_or_w[47] | result_dffe_bus_w[48]), (result_dffe_or_w[46] | result_dffe_bus_w[47]), (result_dffe_or_w[45] | result_dffe_bus_w[46]), (result_dffe_or_w[44] | result_dffe_bus_w[45]), (result_dffe_or_w[43] | result_dffe_bus_w[44]), (result_dffe_or_w[42] | result_dffe_bus_w[43]), (result_dffe_or_w[41] | result_dffe_bus_w[42]), (result_dffe_or_w[40] | result_dffe_bus_w[41]), (result_dffe_or_w[39] | result_dffe_bus_w[40]), (result_dffe_or_w[38] | result_dffe_bus_w[39]), (result_dffe_or_w[37] | result_dffe_bus_w[38]), (result_dffe_or_w[36] | result_dffe_bus_w[37]), (result_dffe_or_w[35] | result_dffe_bus_w[36]), (result_dffe_or_w[34] | result_dffe_bus_w[35]), (result_dffe_or_w[33] | result_dffe_bus_w[34]), (result_dffe_or_w[32] | result_dffe_bus_w[33]), (result_dffe_or_w[31] | result_dffe_bus_w[32]), (result_dffe_or_w[30] | result_dffe_bus_w[31]), (result_dffe_or_w[29] | result_dffe_bus_w[30]), (result_dffe_or_w[28] | result_dffe_bus_w[29]), (result_dffe_or_w[27] | result_dffe_bus_w[28]), (result_dffe_or_w[26] | result_dffe_bus_w[27]), (result_dffe_or_w[25] | result_dffe_bus_w[26]), (result_dffe_or_w[24] | result_dffe_bus_w[25]), (result_dffe_or_w[23] | result_dffe_bus_w[24]), (result_dffe_or_w[22] | result_dffe_bus_w[23]), (result_dffe_or_w[21] | result_dffe_bus_w[22]), (result_dffe_or_w[20] | result_dffe_bus_w[21]), (result_dffe_or_w[19]
 | result_dffe_bus_w[20]), (result_dffe_or_w[18] | result_dffe_bus_w[19]), (result_dffe_or_w[17] | result_dffe_bus_w[18]), (result_dffe_or_w[16] | result_dffe_bus_w[17]), (result_dffe_or_w[15] | result_dffe_bus_w[16]), (result_dffe_or_w[14] | result_dffe_bus_w[15]), (result_dffe_or_w[13] | result_dffe_bus_w[14]), (result_dffe_or_w[12] | result_dffe_bus_w[13]), (result_dffe_or_w[11] | result_dffe_bus_w[12]), (result_dffe_or_w[10] | result_dffe_bus_w[11]), (result_dffe_or_w[9] | result_dffe_bus_w[10]), (result_dffe_or_w[8] | result_dffe_bus_w[9]), (result_dffe_or_w[7] | result_dffe_bus_w[8]), (result_dffe_or_w[6] | result_dffe_bus_w[7]), (result_dffe_or_w[5] | result_dffe_bus_w[6]), (result_dffe_or_w[4] | result_dffe_bus_w[5]), (result_dffe_or_w[3] | result_dffe_bus_w[4]), (result_dffe_or_w[2] | result_dffe_bus_w[3]), (result_dffe_or_w[1] | result_dffe_bus_w[2]), (result_dffe_or_w[0] | result_dffe_bus_w[1]), result_dffe_bus_w[0]},
		rnd_add_overf_w = rnd_overflow_dffe,
		rnd_overflow = wire_add_sub4_overflow,
		rnded_man_w = (({53{rnd_overflow}} & overflow_man_w) | ({53{(~ rnd_overflow)}} & add_one_process_w)),
		round_bit_quo_msb_m1 = quotient_w[1],
		round_bit_quo_msb_m2 = quotient_w[0],
		round_bit_w = ((quotient_w[54] & round_bit_quo_msb_m1) | ((~ quotient_w[54]) & round_bit_quo_msb_m2)),
		sign_a_w = sign_a_dffe,
		sign_b_w = sign_b_dffe,
		sign_div = (sign_a_w ^ sign_b_w),
		sign_div_pipeline_w = sign_div_pipeline55c,
		sign_exc_bit_w = sign_pipe3a,
		signed_N_exp_h_or = (exp_sign_w & exp_higher_or[4]),
		sticky_bit_quo_msb_m1 = (quo_msb_m1_compare_w | sticky_bit_quo_msb_m1_or[0]),
		sticky_bit_quo_msb_m1_bit = sticky_bit_quo_msb_m1_tmp,
		sticky_bit_quo_msb_m1_or = {sticky_bit_quo_msb_m1_bit[0]},
		sticky_bit_quo_msb_m1_tmp = quotient_w[0],
		sticky_bit_quo_msb_m2 = quo_msb_m2_compare_w,
		sticky_bit_w = ((quotient_w[54] & sticky_bit_quo_msb_m1) | ((~ quotient_w[54]) & sticky_bit_quo_msb_m2)),
		underflow_zeros_w = 11'b00000000000,
		value_add_1_w = 12'b010000000000,
		value_minus_1_w = 12'b001111111110,
		value_normal_w = 12'b001111111111,
		value_zero_w = 12'b000000000000,
		zero = ((full_exc_out_dffe[2] | aclr) | zero_result_dffe_w),
		zero_bit_23_w = 53'b00000000000000000000000000000000000000000000000000000,
		zero_bit_31_w = 63'b000000000000000000000000000000000000000000000000000000000000000,
		zero_bit_8_w = 11'b00000000000,
		zero_dataa_w = (exp_a_zero_w & man_a_zero_w),
		zero_datab_w = (exp_b_zero_w & man_b_zero_w),
		zero_res_w = {sign_exc_bit_w, exp_exc_zeros_w, man_exc_zeros_w},
		zero_result_dffe_w = (~ result_dffe_or_w[62]),
		zero_w = (((zero_dataa_w & norm_datab_w) | (norm_dataa_w & infi_datab_w)) | (zero_dataa_w & infi_datab_w));
endmodule //mydiv_altfp_div_91j
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module mydiv (
	clock,
	dataa,
	datab,
	division_by_zero,
	nan,
	overflow,
	result,
	underflow)/* synthesis synthesis_clearbox = 1 */;

	input	  clock;
	input	[63:0]  dataa;
	input	[63:0]  datab;
	output	  division_by_zero;
	output	  nan;
	output	  overflow;
	output	[63:0]  result;
	output	  underflow;

	wire  sub_wire0;
	wire  sub_wire1;
	wire  sub_wire2;
	wire  sub_wire3;
	wire [63:0] sub_wire4;
	wire  division_by_zero = sub_wire0;
	wire  overflow = sub_wire1;
	wire  underflow = sub_wire2;
	wire  nan = sub_wire3;
	wire [63:0] result = sub_wire4[63:0];

	mydiv_altfp_div_91j	mydiv_altfp_div_91j_component (
				.dataa (dataa),
				.datab (datab),
				.clock (clock),
				.division_by_zero (sub_wire0),
				.overflow (sub_wire1),
				.underflow (sub_wire2),
				.nan (sub_wire3),
				.result (sub_wire4));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: PRIVATE: WIZMAN_OVERRIDE_CBX_GEN_MODE STRING "ON"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: DECODER_SUPPORT STRING "NO"
// Retrieval info: CONSTANT: DENORMAL_SUPPORT STRING "NO"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: CONSTANT: PIPELINE NUMERIC "61"
// Retrieval info: CONSTANT: WIDTH_EXP NUMERIC "11"
// Retrieval info: CONSTANT: WIDTH_MAN NUMERIC "52"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: dataa 0 0 64 0 INPUT NODEFVAL "dataa[63..0]"
// Retrieval info: USED_PORT: datab 0 0 64 0 INPUT NODEFVAL "datab[63..0]"
// Retrieval info: USED_PORT: division_by_zero 0 0 0 0 OUTPUT NODEFVAL "division_by_zero"
// Retrieval info: USED_PORT: nan 0 0 0 0 OUTPUT NODEFVAL "nan"
// Retrieval info: USED_PORT: overflow 0 0 0 0 OUTPUT NODEFVAL "overflow"
// Retrieval info: USED_PORT: result 0 0 64 0 OUTPUT NODEFVAL "result[63..0]"
// Retrieval info: USED_PORT: underflow 0 0 0 0 OUTPUT NODEFVAL "underflow"
// Retrieval info: CONNECT: nan 0 0 0 0 @nan 0 0 0 0
// Retrieval info: CONNECT: underflow 0 0 0 0 @underflow 0 0 0 0
// Retrieval info: CONNECT: @dataa 0 0 64 0 dataa 0 0 64 0
// Retrieval info: CONNECT: result 0 0 64 0 @result 0 0 64 0
// Retrieval info: CONNECT: overflow 0 0 0 0 @overflow 0 0 0 0
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: division_by_zero 0 0 0 0 @division_by_zero 0 0 0 0
// Retrieval info: CONNECT: @datab 0 0 64 0 datab 0 0 64 0
// Retrieval info: GEN_FILE: TYPE_NORMAL mydiv.v TRUE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydiv.inc FALSE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydiv.cmp FALSE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydiv.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydiv_inst.v FALSE FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL mydiv_bb.v FALSE FALSE
