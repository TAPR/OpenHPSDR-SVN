--lpm_mult DEDICATED_MULTIPLIER_CIRCUITRY="NO" DEVICE_FAMILY="Cyclone II" DSP_BLOCK_BALANCING="AUTO" LPM_PIPELINE=0 LPM_REPRESENTATION="SIGNED" LPM_WIDTHA=6 LPM_WIDTHB=18 LPM_WIDTHP=24 MAXIMIZE_SPEED=5 dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 6.1 cbx_cycloneii 2006:09:29:19:03:26:SJ cbx_lpm_add_sub 2006:10:10:22:03:24:SJ cbx_lpm_mult 2006:11:01:17:02:48:SJ cbx_mgl 2006:10:27:16:08:48:SJ cbx_padd 2006:11:07:16:02:02:SJ cbx_stratix 2006:09:18:10:47:42:SJ cbx_stratixii 2006:10:13:14:01:30:SJ cbx_util_mgl 2006:11:03:10:32:30:SJ  VERSION_END


--  Copyright (C) 1991-2006 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION carry_sum (cin, sin)
RETURNS ( cout, sout);
FUNCTION lcell (in)
RETURNS ( out);
FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 144 
SUBDESIGN mult_fao
( 
	dataa[5..0]	:	input;
	datab[17..0]	:	input;
	result[23..0]	:	output;
) 
VARIABLE
	add12_result[20..0]	:	WIRE;
	add16_result[16..0]	:	WIRE;
	add8_result[23..0]	:	WIRE;
	cs2a[2..0] : carry_sum;
	cs4a[2..0] : carry_sum;
	le3a[18..0] : lcell;
	le5a[18..0] : lcell;
	le6a[18..0] : lcell;
	le7a[18..0] : lcell;
	sft10a[23..0] : soft;
	sft11a[23..0] : soft;
	sft13a[20..0] : soft;
	sft14a[20..0] : soft;
	sft15a[20..0] : soft;
	sft17a[16..0] : soft;
	sft18a[16..0] : soft;
	sft19a[16..0] : soft;
	sft9a[23..0] : soft;
	dataa_node[17..0]	: WIRE;
	datab_node[5..0]	: WIRE;
	final_result_node[23..0]	: WIRE;
	w118w[18..0]	: WIRE;
	w119w[18..0]	: WIRE;
	w120w[18..0]	: WIRE;
	w128w[18..0]	: WIRE;
	w129w[18..0]	: WIRE;
	w12w[5..0]	: WIRE;
	w13w[18..0]	: WIRE;
	w14w[18..0]	: WIRE;
	w154w	: WIRE;
	w15w[18..0]	: WIRE;
	w16w[18..0]	: WIRE;
	w170w	: WIRE;
	w172w[18..0]	: WIRE;
	w173w[18..0]	: WIRE;
	w174w[18..0]	: WIRE;
	w182w[18..0]	: WIRE;
	w183w[18..0]	: WIRE;
	w202w	: WIRE;
	w204w	: WIRE;
	w206w	: WIRE;
	w208w	: WIRE;
	w210w	: WIRE;
	w212w	: WIRE;
	w214w	: WIRE;
	w216w	: WIRE;
	w218w	: WIRE;
	w220w	: WIRE;
	w222w	: WIRE;
	w224w	: WIRE;
	w226w	: WIRE;
	w228w	: WIRE;
	w230w	: WIRE;
	w234w	: WIRE;
	w236w	: WIRE;
	w237w	: WIRE;
	w238w	: WIRE;
	w239w	: WIRE;
	w241w	: WIRE;
	w242w	: WIRE;
	w243w	: WIRE;
	w244w	: WIRE;
	w245w	: WIRE;
	w246w	: WIRE;
	w247w	: WIRE;
	w248w	: WIRE;
	w249w	: WIRE;
	w250w	: WIRE;
	w251w	: WIRE;
	w252w	: WIRE;
	w253w	: WIRE;
	w254w	: WIRE;
	w255w	: WIRE;
	w256w	: WIRE;
	w257w	: WIRE;
	w258w	: WIRE;
	w259w	: WIRE;
	w262w	: WIRE;
	w444w[23..0]	: WIRE;

BEGIN 
	add12_result[] = sft13a[].out + sft14a[].out;
	add16_result[] = sft17a[].out + sft18a[].out;
	add8_result[] = sft9a[].out + sft10a[].out;
	cs2a[].cin = ( B"0", ((w12w[2..2] & cs2a[0].cout) # w12w[3..3]), w12w[1..1]);
	cs2a[].sin = ( cs2a[1].cout, ((((((! w12w[3..3]) & w12w[2..2]) & cs2a[0].cout) # ((w12w[3..3] & w12w[2..2]) & (! cs2a[0].cout))) # ((w12w[3..3] & (! w12w[2..2])) & cs2a[0].cout)) # ((w12w[3..3] & (! w12w[2..2])) & (! cs2a[0].cout))), w12w[1..1]);
	cs4a[].cin = ( B"0", ((w12w[2..2] & cs4a[0].cout) # w12w[3..3]), w12w[1..1]);
	cs4a[].sin = ( (w12w[4..4] $ cs4a[1].cout), ((((((! w12w[3..3]) & (! w12w[2..2])) & cs4a[0].cout) # (((! w12w[3..3]) & w12w[2..2]) & (! cs4a[0].cout))) # ((w12w[3..3] & w12w[2..2]) & (! cs4a[0].cout))) # ((w12w[3..3] & (! w12w[2..2])) & cs4a[0].cout)), w12w[0..0]);
	le3a[].in = (((((w12w[5..5] & (! w12w[4..4])) & (! cs2a[2].sout)) & (! w15w[])) # ((((! w12w[5..5]) & w12w[4..4]) & cs2a[2].sout) & w15w[])) # ((w12w[5..5] & w12w[4..4]) & cs2a[2].sout));
	le5a[].in = (! ((! w14w[]) & (! (cs4a[2].sout & (w12w[5..5] $ w16w[])))));
	le6a[].in = (! ((! w128w[]) & (! w129w[])));
	le7a[].in = (! ((! w182w[]) & (! w183w[])));
	sft10a[].in = ( w262w, ( w259w, ( w258w, ( w257w, ( w255w, ( w238w, ( w254w, ( w253w, ( w252w, ( w251w, ( w250w, ( w249w, ( w248w, ( w247w, ( w246w, ( w245w, ( w244w, ( w243w, ( w242w, ( w202w, ( w241w, ( w236w, ( w262w, w170w)))))))))))))))))))))));
	sft11a[].in = add8_result[];
	sft13a[].in = ( w262w, ( w237w, ( w13w[16..16], ( w13w[15..15], ( w13w[14..14], ( w13w[13..13], ( w13w[12..12], ( w13w[11..11], ( w13w[10..10], ( w13w[9..9], ( w13w[8..8], ( w13w[7..7], ( w13w[6..6], ( w13w[5..5], ( w13w[4..4], ( w13w[3..3], ( w13w[2..2], ( w13w[1..1], ( w13w[0..0], ( w118w[3..2]))))))))))))))))))));
	sft14a[].in = ( w262w, ( w262w, ( (! w172w[18..18]), ( w172w[17..17], ( w172w[16..16], ( w172w[15..15], ( w172w[14..14], ( w172w[13..13], ( w172w[12..12], ( w172w[11..11], ( w172w[10..10], ( w172w[9..9], ( w172w[8..8], ( w172w[7..7], ( w172w[6..6], ( w172w[5..5], ( w172w[4..4], ( w172w[3..3], ( w172w[2..2], ( w262w, w234w))))))))))))))))))));
	sft15a[].in = add12_result[];
	sft17a[].in = ( w262w, ( w237w, ( (! w118w[18..18]), ( w118w[17..17], ( w118w[16..16], ( w118w[15..15], ( w118w[14..14], ( w118w[13..13], ( w118w[12..12], ( w118w[11..11], ( w118w[10..10], ( w118w[9..9], ( w118w[8..8], ( w118w[7..7], ( w118w[6..6], ( w118w[5..4]))))))))))))))));
	sft18a[].in = ( w262w, ( w262w, ( w237w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, ( w262w, w12w[5..5]))))))))))))))));
	sft19a[].in = add16_result[];
	sft9a[].in = ( w237w, ( (! w13w[18..18]), ( w13w[17..17], ( w256w, ( w239w, ( w230w, ( w228w, ( w226w, ( w224w, ( w222w, ( w220w, ( w218w, ( w216w, ( w214w, ( w212w, ( w210w, ( w208w, ( w206w, ( w204w, ( w154w, ( w172w[1..1], ( w172w[0..0], ( w118w[1..0])))))))))))))))))))))));
	dataa_node[] = ( datab[17..0]);
	datab_node[] = ( dataa[5..0]);
	final_result_node[] = ( w444w[23..0]);
	result[] = ( final_result_node[23..0]);
	w118w[] = le6a[].out;
	w119w[] = ( dataa_node[], B"0");
	w120w[] = ( dataa_node[17..17], dataa_node[]);
	w128w[] = (((! w119w[]) & cs2a[0].sout) & (! cs4a[0].sout));
	w129w[] = ((((! w120w[]) & cs2a[0].sout) & cs4a[0].sout) # ((w120w[] & (! cs2a[0].sout)) & cs4a[0].sout));
	w12w[] = datab_node[];
	w13w[] = le5a[].out;
	w14w[] = le3a[].out;
	w154w = sft15a[2..2].out;
	w15w[] = ( dataa_node[], B"0");
	w16w[] = ( dataa_node[17..17], dataa_node[]);
	w170w = cs2a[0].sout;
	w172w[] = le7a[].out;
	w173w[] = ( dataa_node[], B"0");
	w174w[] = ( dataa_node[17..17], dataa_node[]);
	w182w[] = (((! w173w[]) & cs2a[1].sout) & (! cs4a[1].sout));
	w183w[] = ((((! w174w[]) & cs2a[1].sout) & cs4a[1].sout) # ((w174w[] & (! cs2a[1].sout)) & cs4a[1].sout));
	w202w = sft19a[0..0].out;
	w204w = sft15a[3..3].out;
	w206w = sft15a[4..4].out;
	w208w = sft15a[5..5].out;
	w210w = sft15a[6..6].out;
	w212w = sft15a[7..7].out;
	w214w = sft15a[8..8].out;
	w216w = sft15a[9..9].out;
	w218w = sft15a[10..10].out;
	w220w = sft15a[11..11].out;
	w222w = sft15a[12..12].out;
	w224w = sft15a[13..13].out;
	w226w = sft15a[14..14].out;
	w228w = sft15a[15..15].out;
	w230w = sft15a[16..16].out;
	w234w = cs2a[1].sout;
	w236w = sft15a[0..0].out;
	w237w = B"1";
	w238w = sft19a[14..14].out;
	w239w = sft15a[17..17].out;
	w241w = sft15a[1..1].out;
	w242w = sft19a[1..1].out;
	w243w = sft19a[2..2].out;
	w244w = sft19a[3..3].out;
	w245w = sft19a[4..4].out;
	w246w = sft19a[5..5].out;
	w247w = sft19a[6..6].out;
	w248w = sft19a[7..7].out;
	w249w = sft19a[8..8].out;
	w250w = sft19a[9..9].out;
	w251w = sft19a[10..10].out;
	w252w = sft19a[11..11].out;
	w253w = sft19a[12..12].out;
	w254w = sft19a[13..13].out;
	w255w = sft19a[15..15].out;
	w256w = sft15a[18..18].out;
	w257w = sft19a[16..16].out;
	w258w = sft15a[19..19].out;
	w259w = sft15a[20..20].out;
	w262w = B"0";
	w444w[] = ( sft11a[23..23].out, sft11a[22..22].out, sft11a[21..21].out, sft11a[20..20].out, sft11a[19..19].out, sft11a[18..18].out, sft11a[17..17].out, sft11a[16..16].out, sft11a[15..15].out, sft11a[14..14].out, sft11a[13..13].out, sft11a[12..12].out, sft11a[11..11].out, sft11a[10..10].out, sft11a[9..9].out, sft11a[8..8].out, sft11a[7..7].out, sft11a[6..6].out, sft11a[5..5].out, sft11a[4..4].out, sft11a[3..3].out, sft11a[2..2].out, sft11a[1..1].out, sft11a[0..0].out);
END;
--VALID FILE
