<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhhwCHAPcAAAABAAQAEwABHAMFAQQBVAcKBgoAcgoMCA0NFg4QDQAA3xETEBMRJwwNZQ4IrRYX
        FRcA/wAK/wARwRkbGSME+hsdGh8gHgEU+yIkIhwW0CYnJSYlRy4S9ygpJyosKRsc9wAk+S0vLAgr4zAy
        Lycj9BMq9jM1MjY3Pzc5NjEp8SIv8jk7OCk8YTYt7Dw+Oz07gy018EFCQEFFR0E17CNIkERGQzg77kdI
        Rh5I1ThCxklKSEtIVz5A60tNSjRE7U1OVk5PTSxPyEVF6SpUqVBST0xRdT5Qtk5Pn1RVU0xL6FdYVVBP
        5UVcklpcWUlU50BfpF1eXF1hUlZV5FRjaF9hXlBZ5mFjYFxjdk5km1ta4mNlYm5iY1Re5FdqdGdoZV9f
        4FhrjlZrmmpraGhsb15tiklzmmxua2Nl32FweVlyinhsbWZumW9wbmhwg4JrbG1m3Ippam9yY2xo1nBz
        ZGhr3m5zfnJ0cXF1d31ycnBs2ohwbnR2c3d0g2tv3HZ3dXN6f3Nx2W18gnp6cHh6d4d3eG9123t8eX5+
        Z26BgHZ214J9fHp/gn1/fH6AfX941YWCYn+BfoaDY3p813qEiIGDgIyAgYOFgoN/1X6D14eJhomLiIaF
        1IyOi4+MnIiK0Y6QjZCSj5CO0JOVkpSWk5aYlZOU0JmVzJmbmJmcopudmZaaz5yem5yby5+hnp6dzaOf
        yZ+iy6OloqOjxqaopaalyainyqunxaqsqamsyK2vrK2txLCyrrCwx7SxwrO1srG1xbe5tre4wrm7uLq7
        xLu9ury+u7+9wb2/vLvAwr7BvcDCvsLCucHDv8LEwcDFyMPFwsbGvcTGw8XHxMfJxsrJwM3Ku8nLyMrN
        vcvPv9HOv8/Quc3PzNHSu8/RztXUuNLU0dDV2NvXtdbY1djcuNnb2N3etN/e1eDht9zf2+Dg0OTist7g
        3eDi3+PkzevnsebpseTm4+fp5unr6Obs7uvt6u/x7vPy6fHz8Pn15vX39Pn7+Pr8+ff9//z++/7//P//
        /yH5BAEAAP8ALAAAAACHAIcAAAj/AP8JHEiwoMGDCBMqXMiwocOHECNKnEixosWLGDP+O8axI8dkIC96
        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
        3XdJga8cuGC11jU4YYUXZrhhhx9WLiAAOw==
</value>
  </data>
</root>