<session jtag_chain="ByteBlasterMV [LPT1]" jtag_device="@1: EP2C8 (0x020B20DD)" sof_file="" top_level_entity="Ozy_Janus">
  <display_tree gui_logging_enabled="0">
    <display_branch instance="auto_signaltap_0" log="USE_GLOBAL_TEMP" signal_set="USE_GLOBAL_TEMP" trigger="USE_GLOBAL_TEMP"/>
  </display_tree>
  <instance entity_name="sld_signaltap" is_auto_node="yes" is_expanded="true" name="auto_signaltap_0" source_file="sld_signaltap.vhd">
    <node_ip_info instance_id="0" mfg_id="110" node_id="0" version="6"/>
    <position_info>
      <single attribute="active tab" value="0"/>
      <single attribute="data horizontal scroll position" value="0"/>
      <single attribute="data vertical scroll position" value="13"/>
      <single attribute="setup horizontal scroll position" value="0"/>
      <single attribute="setup vertical scroll position" value="14"/>
      <single attribute="zoom level denominator" value="1"/>
      <single attribute="zoom level numerator" value="1"/>
      <single attribute="zoom offset denominator" value="1"/>
      <single attribute="zoom offset numerator" value="130816"/>
    </position_info>
    <signal_set global_temp="1" name="signal_set: 2009/08/31 19:29:11  #0">
      <clock name="TestModeCheck:TMC|clk" polarity="posedge" tap_mode="classic"/>
      <config ram_type="M4K" reserved_data_nodes="0" reserved_storage_qualifier_nodes="0" reserved_trigger_nodes="0" sample_depth="256" trigger_in_enable="no" trigger_out_enable="no"/>
      <top_entity/>
      <signal_vec>
        <trigger_input_vec>
          <wire name="FIFO_ADR[0]" tap_mode="classic" type="output pin"/>
          <wire name="FIFO_ADR[1]" tap_mode="classic" type="output pin"/>
          <wire name="FLAGA" tap_mode="classic" type="input pin"/>
          <wire name="FLAGB" tap_mode="classic" type="input pin"/>
          <wire name="FLAGC" tap_mode="classic" type="input pin"/>
          <wire name="FX2_FD[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[10]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[11]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[12]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[13]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[14]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[15]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[8]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[9]" tap_mode="classic" type="bidir pin"/>
          <wire name="IF_get_samples" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|C23" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|rdreq" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|rdreq_dly" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|rst" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|seq_err" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|sync_state[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|sync_state[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|sync_state[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_err" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_state.TMC_GO" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_state.TMC_IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|wrreq" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|xrdy" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_state.FX_F1" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_F6" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_FDONE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_FROM_PC_CHECK" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_T1" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_T7" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_TDONE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_TO_PC_CHECK" tap_mode="classic" type="combinatorial"/>
        </trigger_input_vec>
        <data_input_vec>
          <wire name="FIFO_ADR[0]" tap_mode="classic" type="output pin"/>
          <wire name="FIFO_ADR[1]" tap_mode="classic" type="output pin"/>
          <wire name="FLAGA" tap_mode="classic" type="input pin"/>
          <wire name="FLAGB" tap_mode="classic" type="input pin"/>
          <wire name="FLAGC" tap_mode="classic" type="input pin"/>
          <wire name="FX2_FD[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[10]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[11]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[12]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[13]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[14]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[15]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[8]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[9]" tap_mode="classic" type="bidir pin"/>
          <wire name="IF_get_samples" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|C23" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|rdreq" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|rdreq_dly" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|rst" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|seq_err" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|sync_state[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|sync_state[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|sync_state[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_err" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_state.TMC_GO" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_state.TMC_IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|wrreq" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|xrdy" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_state.FX_F1" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_F6" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_FDONE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_FROM_PC_CHECK" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_T1" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_T7" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_TDONE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_TO_PC_CHECK" tap_mode="classic" type="combinatorial"/>
        </data_input_vec>
        <storage_qualifier_input_vec>
          <wire name="FIFO_ADR[0]" tap_mode="classic" type="output pin"/>
          <wire name="FIFO_ADR[1]" tap_mode="classic" type="output pin"/>
          <wire name="FLAGA" tap_mode="classic" type="input pin"/>
          <wire name="FLAGB" tap_mode="classic" type="input pin"/>
          <wire name="FLAGC" tap_mode="classic" type="input pin"/>
          <wire name="FX2_FD[0]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[10]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[11]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[12]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[13]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[14]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[15]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[1]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[2]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[3]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[4]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[5]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[6]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[7]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[8]" tap_mode="classic" type="bidir pin"/>
          <wire name="FX2_FD[9]" tap_mode="classic" type="bidir pin"/>
          <wire name="IF_get_samples" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|C23" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_in[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[13]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[14]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[15]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|data_out[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|rdreq" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|rdreq_dly" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|rst" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|seq_err" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_in_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|seq_out_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="TestModeCheck:TMC|sync_state[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|sync_state[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|sync_state[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_err" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_state.TMC_GO" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|tmc_state.TMC_IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[0]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[10]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[11]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[12]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[1]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[2]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[3]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[4]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[5]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[6]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[7]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[8]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|used[9]" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|wrreq" tap_mode="classic" type="combinatorial"/>
          <wire name="TestModeCheck:TMC|xrdy" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[0]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[1]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[2]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[3]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[4]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[5]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[6]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[7]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_Burst_cnt[8]" tap_mode="classic" type="register"/>
          <wire name="sync_usb:usb1|FX_state.FX_F1" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_F6" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_FDONE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_FROM_PC_CHECK" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_IDLE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_T1" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_T7" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_TDONE" tap_mode="classic" type="combinatorial"/>
          <wire name="sync_usb:usb1|FX_state.FX_TO_PC_CHECK" tap_mode="classic" type="combinatorial"/>
        </storage_qualifier_input_vec>
      </signal_vec>
      <presentation>
        <data_view>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|rst"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|rdreq"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|rdreq_dly"/>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|data_out" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[8]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[9]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[10]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[11]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[12]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[13]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[14]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[15]"/>
          </bus>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_err"/>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|seq_out_cnt" order="lsb_to_msb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[8]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|sync_state" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|sync_state[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|sync_state[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|sync_state[2]"/>
          </bus>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|tmc_err"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|wrreq"/>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|data_in" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[8]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[9]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[10]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[11]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[12]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[13]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[14]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[15]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|seq_in_cnt" order="lsb_to_msb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[8]"/>
          </bus>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|tmc_state.TMC_IDLE"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|tmc_state.TMC_GO"/>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|used" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[8]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[9]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[10]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[11]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[12]"/>
          </bus>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|C23"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|xrdy"/>
          <net is_signal_inverted="no" name="IF_get_samples"/>
          <net is_signal_inverted="no" name="FLAGA"/>
          <net is_signal_inverted="no" name="FLAGB"/>
          <net is_signal_inverted="no" name="FLAGC"/>
          <bus is_signal_inverted="no" link="all" name="FX2_FD" order="lsb_to_msb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="FX2_FD[0]"/>
            <net is_signal_inverted="no" name="FX2_FD[1]"/>
            <net is_signal_inverted="no" name="FX2_FD[2]"/>
            <net is_signal_inverted="no" name="FX2_FD[3]"/>
            <net is_signal_inverted="no" name="FX2_FD[4]"/>
            <net is_signal_inverted="no" name="FX2_FD[5]"/>
            <net is_signal_inverted="no" name="FX2_FD[6]"/>
            <net is_signal_inverted="no" name="FX2_FD[7]"/>
            <net is_signal_inverted="no" name="FX2_FD[8]"/>
            <net is_signal_inverted="no" name="FX2_FD[9]"/>
            <net is_signal_inverted="no" name="FX2_FD[10]"/>
            <net is_signal_inverted="no" name="FX2_FD[11]"/>
            <net is_signal_inverted="no" name="FX2_FD[12]"/>
            <net is_signal_inverted="no" name="FX2_FD[13]"/>
            <net is_signal_inverted="no" name="FX2_FD[14]"/>
            <net is_signal_inverted="no" name="FX2_FD[15]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="FIFO_ADR" order="lsb_to_msb" radix="hex" state="collapse" type="output pin">
            <net is_signal_inverted="no" name="FIFO_ADR[0]"/>
            <net is_signal_inverted="no" name="FIFO_ADR[1]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="sync_usb:usb1|FX_Burst_cnt" order="lsb_to_msb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[0]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[1]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[2]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[3]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[4]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[5]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[6]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[7]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[8]"/>
          </bus>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_IDLE"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_FROM_PC_CHECK"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_F1"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_F6"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_TO_PC_CHECK"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_T1"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_T7"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_TDONE"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_FDONE"/>
        </data_view>
        <setup_view>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|data_in" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[8]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[9]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[10]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[11]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[12]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[13]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[14]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_in[15]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|data_out" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[8]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[9]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[10]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[11]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[12]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[13]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[14]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|data_out[15]"/>
          </bus>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|rdreq"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|rdreq_dly"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|rst"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_err"/>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|seq_in_cnt" order="lsb_to_msb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_in_cnt[8]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|seq_out_cnt" order="lsb_to_msb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|seq_out_cnt[8]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|sync_state" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|sync_state[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|sync_state[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|sync_state[2]"/>
          </bus>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|tmc_err"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|tmc_state.TMC_IDLE"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|tmc_state.TMC_GO"/>
          <bus is_signal_inverted="no" link="all" name="TestModeCheck:TMC|used" order="lsb_to_msb" radix="hex" state="collapse" type="combinatorial">
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[0]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[1]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[2]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[3]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[4]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[5]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[6]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[7]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[8]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[9]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[10]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[11]"/>
            <net is_signal_inverted="no" name="TestModeCheck:TMC|used[12]"/>
          </bus>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|wrreq"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|C23"/>
          <net is_signal_inverted="no" name="TestModeCheck:TMC|xrdy"/>
          <net is_signal_inverted="no" name="IF_get_samples"/>
          <net is_signal_inverted="no" name="FLAGA"/>
          <net is_signal_inverted="no" name="FLAGB"/>
          <net is_signal_inverted="no" name="FLAGC"/>
          <bus is_signal_inverted="no" link="all" name="FX2_FD" order="lsb_to_msb" radix="hex" state="collapse" type="bidir pin">
            <net is_signal_inverted="no" name="FX2_FD[0]"/>
            <net is_signal_inverted="no" name="FX2_FD[1]"/>
            <net is_signal_inverted="no" name="FX2_FD[2]"/>
            <net is_signal_inverted="no" name="FX2_FD[3]"/>
            <net is_signal_inverted="no" name="FX2_FD[4]"/>
            <net is_signal_inverted="no" name="FX2_FD[5]"/>
            <net is_signal_inverted="no" name="FX2_FD[6]"/>
            <net is_signal_inverted="no" name="FX2_FD[7]"/>
            <net is_signal_inverted="no" name="FX2_FD[8]"/>
            <net is_signal_inverted="no" name="FX2_FD[9]"/>
            <net is_signal_inverted="no" name="FX2_FD[10]"/>
            <net is_signal_inverted="no" name="FX2_FD[11]"/>
            <net is_signal_inverted="no" name="FX2_FD[12]"/>
            <net is_signal_inverted="no" name="FX2_FD[13]"/>
            <net is_signal_inverted="no" name="FX2_FD[14]"/>
            <net is_signal_inverted="no" name="FX2_FD[15]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="FIFO_ADR" order="lsb_to_msb" radix="hex" state="collapse" type="output pin">
            <net is_signal_inverted="no" name="FIFO_ADR[0]"/>
            <net is_signal_inverted="no" name="FIFO_ADR[1]"/>
          </bus>
          <bus is_signal_inverted="no" link="all" name="sync_usb:usb1|FX_Burst_cnt" order="lsb_to_msb" radix="hex" state="collapse" type="register">
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[0]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[1]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[2]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[3]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[4]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[5]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[6]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[7]"/>
            <net is_signal_inverted="no" name="sync_usb:usb1|FX_Burst_cnt[8]"/>
          </bus>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_IDLE"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_FROM_PC_CHECK"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_F1"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_F6"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_FDONE"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_TO_PC_CHECK"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_T1"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_T7"/>
          <net is_signal_inverted="no" name="sync_usb:usb1|FX_state.FX_TDONE"/>
        </setup_view>
      </presentation>
      <trigger CRC="36493AF7" attribute_mem_mode="false" gap_record="true" global_temp="1" name="trigger: 2009/08/31 22:39:05  #0" position="pre" power_up_trigger_mode="false" record_data_gap="true" segment_size="1" storage_mode="off" storage_qualifier_disabled="no" storage_qualifier_port_is_pin="true" storage_qualifier_port_name="auto_stp_external_storage_qualifier" storage_qualifier_port_tap_mode="classic" trigger_in="dont_care" trigger_out="active high" trigger_type="circular">
        <power_up_trigger position="pre" storage_qualifier_disabled="no" trigger_in="dont_care" trigger_out="active high"/>
        <events use_custom_flow_control="no">
          <level enabled="yes" name="condition1" type="basic">'sync_usb:usb1|FX_state.FX_F6' == rising edge
            <power_up enabled="yes">
            </power_up>
            <op_node/>
          </level>
        </events>
        <storage_qualifier_events>
          <transitional>00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
            <pwr_up_transitional>00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
            </pwr_up_transitional>
          </transitional>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
          <storage_qualifier_level type="basic">
            <power_up>
            </power_up>
            <op_node/>
          </storage_qualifier_level>
        </storage_qualifier_events>
        <log>
          <data global_temp="1" name="log: 2009/08/31 23:27:50  #0" power_up_mode="false" sample_depth="256" trigger_position="32"></data>
          <extradata>11111111111111111111111111111111T1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</extradata>
        </log>
      </trigger>
    </signal_set>
  </instance>
  <mnemonics/>
  <static_plugin_mnemonics/>
  <global_info>
    <single attribute="active instance" value="0"/>
    <single attribute="lock mode" value="36110"/>
    <multi attribute="column width" size="23" value="34,34,191,74,68,70,88,88,98,98,88,88,110,101,101,101,101,101,101,101,101,107,78"/>
    <multi attribute="window position" size="9" value="1221,799,398,124,0,50,124,0,0"/>
  </global_info>
</session>
